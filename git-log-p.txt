commit 735aee5aa15b4acadcf79923495a1888f7f02e22
Author: FadiAlAriqi <f.ariqi.x@gmail.com>
Date:   Tue Jan 28 07:38:33 2025 +0100

    Initialize the app

diff --git a/posawesome/public/js/posapp/components/Navbar.vue b/posawesome/public/js/posapp/components/Navbar.vue
index 98ef40d..07f4839 100644
--- a/posawesome/public/js/posapp/components/Navbar.vue
+++ b/posawesome/public/js/posapp/components/Navbar.vue
@@ -70,7 +70,7 @@
       width="170"
     >
       <v-list>
-        <v-list-item class="px-2">
+        <!-- <v-list-item class="px-2">
           <v-avatar>
             <v-img :src="company_img"></v-img>
           </v-avatar>
@@ -78,7 +78,7 @@
           <v-btn icon @click.stop="mini = !mini">
             <v-icon>mdi-chevron-left</v-icon>
           </v-btn>
-        </v-list-item>
+        </v-list-item> -->
         <v-list v-model="item">
           <v-list-item
             v-for="(listItem, index) in items"
@@ -134,7 +134,7 @@ export default {
   },
   methods: {
     changePage(key) {
-      thi.emit('changePage', key);
+      this.$emit('changePage', key);
     },
     go_desk() {
       frappe.set_route('/');
diff --git a/posawesome/public/js/posapp/components/pos/Customer.vue b/posawesome/public/js/posapp/components/pos/Customer.vue
index b7ad975..e729acb 100644
--- a/posawesome/public/js/posapp/components/pos/Customer.vue
+++ b/posawesome/public/js/posapp/components/pos/Customer.vue
@@ -1,4 +1,4 @@
-<template>
+<!-- <template>
   <div>
     <v-autocomplete
       density="compact"
@@ -51,53 +51,386 @@
       <UpdateCustomer></UpdateCustomer>
     </div>
   </div>
+</template> -->
+
+
+
+<!-- <template>
+  <div>
+    <v-autocomplete
+      density="compact"
+      variant="outlined"
+      color="primary"
+      :label="__('Customer')"
+      v-model="customer"
+      :items="customers"
+      item-title="customer_name"
+      item-value="name"
+      :filter="customFilter"
+      :disabled="readonly"
+      append-icon="mdi-plus"
+      @click:append="new_customer"
+      prepend-inner-icon="mdi-account-edit"
+      @click:prepend-inner="edit_customer"
+    >
+      <template v-slot:item="{ props, item }">
+        <v-list-item v-bind="props">
+          <v-list-item-title class="primary--text subtitle-1">
+            {{ item.customer_name || item.name }}
+          </v-list-item-title>
+          <v-list-item-subtitle v-if="item.mobile_no">
+            Mobile: {{ item.mobile_no }}
+          </v-list-item-subtitle>
+          <v-list-item-subtitle v-if="item.email_id">
+            Email: {{ item.email_id }}
+          </v-list-item-subtitle>
+          <v-list-item-subtitle v-if="item.tax_id">
+            TAX ID: {{ item.tax_id }}
+          </v-list-item-subtitle>
+        </v-list-item>
+      </template>
+    </v-autocomplete>
+    <div class="mb-8">
+      <UpdateCustomer></UpdateCustomer>
+    </div>
+  </div>
+</template> -->
+
+
+<template>
+  <div>
+    <v-autocomplete
+      density="compact"
+      variant="outlined"
+      color="primary"
+      :label="__('Customer')"
+      v-model="customer"
+      :items="customers"
+      item-title="customer_name"
+      item-value="name"
+      :filter="customFilter"
+      :disabled="readonly"
+      ref="customerAutocomplete"
+      append-icon="mdi-plus"
+      @click:append="new_customer"
+      prepend-inner-icon="mdi-account-edit"
+      @click:prepend-inner="edit_customer"
+    >
+      <template v-slot:item="{ props, item }">
+        <v-list-item v-bind="props">
+          <v-list-item-title class="primary--text subtitle-1">
+            {{ item.customer_name || item.name }}
+          </v-list-item-title>
+        </v-list-item>
+      </template>
+    </v-autocomplete>
+    <div class="mb-8">
+      <UpdateCustomer></UpdateCustomer>
+    </div>
+  </div>
 </template>
 
+
+
 <script>
 import { evntBus } from '../../bus';
 import UpdateCustomer from './UpdateCustomer.vue';
 export default {
-  data: () => ({
+  data() {
+    return {
     pos_profile: '',
     customers: [],
+    customersnew: [],
     customer: '',
     readonly: false,
     customer_info: {},
-  }),
+  }},
 
   components: {
     UpdateCustomer,
   },
 
   methods: {
-    get_customer_names() {
-      const vm = this;
-      if (this.customers.length > 0) {
-        return;
-      }
-      if (vm.pos_profile.posa_local_storage && localStorage.customer_storage) {
-        vm.customers = JSON.parse(localStorage.getItem('customer_storage'));
+    // get_customer_names() {
+    //   const vm = this;
+    //   console.log("get_customer_names() called");
+
+    //   if (!this.pos_profile) {
+    //     console.error("pos_profile is not loaded.");
+    //     return;
+    //   }
+
+    //   // تعيين قيمة افتراضية لـ posa_local_storage إذا كانت غير معرّفة
+    //   if (this.pos_profile.posa_local_storage === undefined) {
+    //     console.log("posa_local_storage is not defined. Setting default value: false");
+    //     this.pos_profile.posa_local_storage = false;
+    //   }
+
+    //   if (this.customers.length > 0) {
+    //     console.log("Customers already loaded.");
+    //     return;
+    //   }
+
+    //   if (vm.pos_profile.posa_local_storage && localStorage.customer_storage) {
+    //     try {
+    //       vm.customers = JSON.parse(localStorage.getItem('customer_storage'));
+    //       console.log("Customers loaded from localStorage:", vm.customers);
+    //     } catch (error) {
+    //       console.error("Error parsing localStorage data:", error);
+    //     }
+    //   }
+
+    //   frappe.call({
+    //     method: 'posawesome.posawesome.api.posapp.get_customer_names',
+    //     args: {
+    //       pos_profile: this.pos_profile.pos_profile,
+    //     },
+    //     callback: function (r) {
+    //       if (r.message) {
+    //         vm.customers = r.message;
+    //         console.log("Customers loaded from server:", vm.customers);
+    //         if (vm.pos_profile.posa_local_storage) {
+    //           try {
+    //             localStorage.setItem('customer_storage', JSON.stringify(r.message));
+    //             console.log("Customers saved to localStorage.");
+    //           } catch (error) {
+    //             console.error("Error saving to localStorage:", error);
+    //           }
+    //         }
+    //       } else {
+    //         console.error("No data returned from server.");
+    //       }
+    //     },
+    //     error: function (err) {
+    //       console.error("Error fetching customers:", err);
+    //     }
+    //   });
+
+    //   console.log("Customers data:", this.customers);
+    // },
+
+//     get_customer_names() {
+//       const vm = this;
+//   console.log("get_customer_names() called");
+
+//   if (!this.pos_profile) {
+//     console.error("pos_profile is not loaded.");
+//     return;
+//   }
+
+//   // تعيين قيمة افتراضية لـ posa_local_storage إذا كانت غير معرّفة
+//   if (this.pos_profile.posa_local_storage === undefined) {
+//     console.log("posa_local_storage is not defined. Setting default value: false");
+//     this.pos_profile.posa_local_storage = false;
+//   }
+
+//   if (this.customers.length > 0) {
+//     console.log("Customers already loaded.");
+//     return;
+//   }
+
+//   if (vm.pos_profile.posa_local_storage && localStorage.customer_storage) {
+//     try {
+//       vm.customers = JSON.parse(localStorage.getItem('customer_storage'));
+//       console.log("Customers loaded from localStorage:", vm.customers);
+//     } catch (error) {
+//       console.error("Error parsing localStorage data:", error);
+//     }
+//   }
+
+//   frappe.call({
+//     method: 'posawesome.posawesome.api.posapp.get_customer_names',
+//     args: {
+//       pos_profile: this.pos_profile.pos_profile,
+//     },
+//     callback: function (r) {
+//       if (r.message) {
+//         vm.customers = r.message;
+//         console.log("Customers loaded from server:", vm.customers);
+//         if (vm.pos_profile.posa_local_storage) {
+//           try {
+//             localStorage.setItem('customer_storage', JSON.stringify(r.message));
+//             console.log("Customers saved to localStorage.");
+//           } catch (error) {
+//             console.error("Error saving to localStorage:", error);
+//           }
+//         }
+//       } else {
+//         console.error("No data returned from server.");
+//       }
+//     },
+//     error: function (err) {
+//       console.error("Error fetching customers:", err);
+//     }
+//   });
+
+//   console.log("pos_profile:", this.pos_profile);
+//   console.log(JSON.parse(localStorage.getItem('customer_storage')));
+//   console.log("Customers data:", vm.customers);
+// },
+
+
+
+
+
+
+
+async get_customer_names() {
+  // const vm = this;
+  console.log("get_customer_names() called");
+
+  if (!this.pos_profile) {
+    console.error("pos_profile is not loaded.");
+    return;
+  }
+
+  if (this.pos_profile.posa_local_storage === undefined) {
+    console.log("posa_local_storage is not defined. Setting default value: false");
+    this.pos_profile.posa_local_storage = false;
+  }
+
+  if (this.customers.length > 0) {
+    console.log("Customers already loaded.");
+    return;
+  }
+
+  if (this.pos_profile.posa_local_storage && localStorage.customer_storage) {
+    try {
+      this.customers = JSON.parse(localStorage.getItem('customer_storage'));
+      console.log("Customers loaded from localStorage:", this.customers);
+    } catch (error) {
+      console.error("Error parsing localStorage data:", error);
+    }
+  }
+
+  try {
+    const response = await frappe.call({
+      method: 'posawesome.posawesome.api.posapp.get_customer_names',
+      args: {
+        pos_profile: this.pos_profile.pos_profile,
+      },
+    });
+
+    if (response.message) {
+      this.customers = response.message;
+      this.customersnew = response.message;
+      console.log("Customers loaded from server:", this.customers);
+      if (this.pos_profile.posa_local_storage) {
+        try {
+          localStorage.setItem('customer_storage', JSON.stringify(response.message));
+          console.log("Customers saved to localStorage.");
+        } catch (error) {
+          console.error("Error saving to localStorage:", error);
+        }
       }
-      frappe.call({
-        method: 'posawesome.posawesome.api.posapp.get_customer_names',
-        args: {
-          pos_profile: this.pos_profile.pos_profile,
-        },
-        callback: function (r) {
-          if (r.message) {
-            vm.customers = r.message;
-            console.info('loadCustomers');
-            if (vm.pos_profile.posa_local_storage) {
-              localStorage.setItem('customer_storage', '');
-              localStorage.setItem(
-                'customer_storage',
-                JSON.stringify(r.message)
-              );
-            }
-          }
-        },
-      });
-    },
+    } else {
+      console.error("No data returned from server.");
+    }
+  } catch (err) {
+    console.error("Error fetching customers:", err);
+  }
+
+  console.log("pos_profile:", this.pos_profile);
+  console.log(JSON.parse(localStorage.getItem('customer_storage')));
+  console.log("Customers data:", this.customers);
+  console.log("Customers data with This:", this.customers);
+},
+
+
+
+
+
+
+
+
+
+// async get_customer_names() {
+//   console.log("Fetching customer names...");
+//   try {
+//     const response = await frappe.call({
+//       method: 'posawesome.posawesome.api.posapp.get_customer_names',
+//       args: { pos_profile: this.pos_profile.pos_profile },
+//     });
+//     if (response.message) {
+//       this.customers = response.message;
+//       console.log("Customers loaded:", this.customers);
+//     } else {
+//       console.error("No customers returned from server.");
+//     }
+//   } catch (error) {
+//     console.error("Error fetching customer names:", error);
+//   }
+// },
+
+
+
+
+
+
+
+
+
+    // async get_customer_names() {
+    //   const vm = this;
+    //   console.log("get_customer_names() called");
+
+    //   if (!this.pos_profile) {
+    //     console.error("pos_profile is not loaded.");
+    //     return;
+    //   }
+
+    //   // تعيين قيمة افتراضية لـ posa_local_storage إذا كانت غير معرّفة
+    //   if (this.pos_profile.posa_local_storage === undefined) {
+    //     console.log("posa_local_storage is not defined. Setting default value: false");
+    //     this.pos_profile.posa_local_storage = false;
+    //   }
+
+    //   if (this.customers.length > 0) {
+    //     console.log("Customers already loaded.");
+    //     return;
+    //   }
+
+    //   if (vm.pos_profile.posa_local_storage && localStorage.customer_storage) {
+    //     try {
+    //       vm.customers = JSON.parse(localStorage.getItem('customer_storage'));
+    //       console.log("Customers loaded from localStorage:", vm.customers);
+    //     } catch (error) {
+    //       console.error("Error parsing localStorage data:", error);
+    //     }
+    //   }
+
+    //   try {
+    //     const response = await frappe.call({
+    //       method: 'posawesome.posawesome.api.posapp.get_customer_names',
+    //       args: {
+    //         pos_profile: this.pos_profile.pos_profile,
+    //       },
+    //     });
+
+    //     if (response.message) {
+    //       vm.customers = response.message;
+    //       console.log("Customers loaded from server:", vm.customers);
+    //       if (vm.pos_profile.posa_local_storage) {
+    //         try {
+    //           localStorage.setItem('customer_storage', JSON.stringify(response.message));
+    //           console.log("Customers saved to localStorage.");
+    //         } catch (error) {
+    //           console.error("Error saving to localStorage:", error);
+    //         }
+    //       }
+    //     } else {
+    //       console.error("No data returned from server.");
+    //     }
+    //   } catch (err) {
+    //     console.error("Error fetching customers:", err);
+    //   }
+
+    //   console.log("pos_profile:", this.pos_profile);
+    //   console.log(JSON.parse(localStorage.getItem('customer_storage')));
+    //   console.log("Customers data:", vm.customers);
+    //   console.log("Customers data with This:", this.customers);
+    // },
+
     new_customer() {
       evntBus.emit('open_update_customer', null);
     },
@@ -105,9 +438,7 @@ export default {
       evntBus.emit('open_update_customer', this.customer_info);
     },
     customFilter(item, queryText, itemText) {
-      const textOne = item.customer_name
-        ? item.customer_name.toLowerCase()
-        : '';
+      const textOne = item.customer_name ? item.customer_name.toLowerCase() : '';
       const textTwo = item.tax_id ? item.tax_id.toLowerCase() : '';
       const textThree = item.email_id ? item.email_id.toLowerCase() : '';
       const textFour = item.mobile_no ? item.mobile_no.toLowerCase() : '';
@@ -121,43 +452,96 @@ export default {
         textFour.indexOf(searchText) > -1 ||
         textFifth.indexOf(searchText) > -1
       );
-    },
+    }
   },
 
   computed: {},
 
-  created: function () {
-    this.$nextTick(function () {
-      evntBus.on('register_pos_profile', (pos_profile) => {
-        this.pos_profile = pos_profile;
-        this.get_customer_names();
-      });
-      evntBus.on('payments_register_pos_profile', (pos_profile) => {
-        this.pos_profile = pos_profile;
-        this.get_customer_names();
-      });
-      evntBus.on('set_customer', (customer) => {
-        this.customer = customer;
-      });
-      evntBus.on('add_customer_to_list', (customer) => {
-        this.customers.push(customer);
-      });
-      evntBus.on('set_customer_readonly', (value) => {
-        this.readonly = value;
-      });
-      evntBus.on('set_customer_info_to_edit', (data) => {
-        this.customer_info = data;
-      });
-      evntBus.on('fetch_customer_details', () => {
-        this.get_customer_names();
-      });
+  // created: function () {
+  //   this.$nextTick(function () {
+  //     evntBus.on('register_pos_profile', (pos_profile) => {
+  //       this.pos_profile = pos_profile;
+  //       console.log("pos_profile loaded:", this.pos_profile);
+  //       await this.get_customer_names();
+  //     });
+  //     evntBus.on('payments_register_pos_profile', (pos_profile) => {
+  //       this.pos_profile = pos_profile;
+  //       console.log("pos_profile loaded:", this.pos_profile);
+  //       await this.get_customer_names();
+  //     });
+  //     evntBus.on('set_customer', (customer) => {
+  //       this.customer = customer;
+  //     });
+  //     evntBus.on('add_customer_to_list', (customer) => {
+  //       this.customers.push(customer);
+  //     });
+  //     evntBus.on('set_customer_readonly', (value) => {
+  //       this.readonly = value;
+  //     });
+  //     evntBus.on('set_customer_info_to_edit', (data) => {
+  //       this.customer_info = data;
+  //     });
+  //     evntBus.on('fetch_customer_details', () => {
+  //       await this.get_customer_names();
+  //     });
+  //   });
+  // },
+
+  created: async function () {
+  this.$nextTick(async function () {
+    // evntBus.on('register_pos_profile', async (pos_profile) => {
+    //   this.pos_profile = pos_profile;
+    //   console.log("pos_profile loaded:", this.pos_profile);
+    //   await this.get_customer_names();
+    // });
+
+    evntBus.on('register_pos_profile', async (pos_profile) => {
+      this.pos_profile = pos_profile;
+      await this.get_customer_names(); // انتظر حتى يتم جلب البيانات
     });
-  },
+
+    evntBus.on('payments_register_pos_profile', async (pos_profile) => {
+      this.pos_profile = pos_profile;
+      console.log("pos_profile loaded:", this.pos_profile);
+      await this.get_customer_names();
+    });
+
+
+
+    evntBus.on('set_customer', (customer) => {
+      this.customer = customer;
+    });
+
+    evntBus.on('add_customer_to_list', (customer) => {
+      this.customers.push(customer);
+    });
+
+    evntBus.on('set_customer_readonly', (value) => {
+      this.readonly = value;
+    });
+
+    evntBus.on('set_customer_info_to_edit', (data) => {
+      this.customer_info = data;
+    });
+
+    evntBus.on('fetch_customer_details', async () => {
+      await this.get_customer_names();
+    });
+    
+  });
+},
+
+  // watch: {
+  //   customer() {
+  //     evntBus.emit('update_customer', this.customer);
+  //   },
+  // },
 
   watch: {
-    customer() {
-      evntBus.emit('update_customer', this.customer);
-    },
+  customers(newVal) {
+    console.log("Customers updated:", newVal);
   },
+},
+
 };
-</script>
+</script>
\ No newline at end of file
diff --git a/posawesome/public/js/posapp/components/pos/Invoice.vue b/posawesome/public/js/posapp/components/pos/Invoice.vue
index 8eb660b..032feb2 100644
--- a/posawesome/public/js/posapp/components/pos/Invoice.vue
+++ b/posawesome/public/js/posapp/components/pos/Invoice.vue
@@ -26,7 +26,7 @@
         <v-col
           v-if="pos_profile.posa_allow_sales_order"
           cols="9"
-          class="pb-2 pr-0"
+          class="pb-2 pr-0 mt-4"
         >
           <Customer></Customer>
         </v-col>
@@ -37,8 +37,8 @@
         >
           <Customer></Customer>
         </v-col>
-        <v-col v-if="pos_profile.posa_allow_sales_order" cols="3" class="pb-2">
-          <v-select
+        <v-col v-if="pos_profile.posa_allow_sales_order" cols="3" class="mt-4">
+          <!-- <v-select
             dense
             hide-details
             outlined
@@ -48,7 +48,20 @@
             :label="__('Type')"
             v-model="invoiceType"
             :disabled="invoiceType == 'Return'"
-          ></v-select>
+          ></v-select> -->
+
+          
+
+          <v-autocomplete
+            density="compact"
+            variant="outlined"
+            color="primary"
+            :items="invoiceTypes"
+            :label="__('Type')"
+            v-model="invoiceType"
+            :disabled="invoiceType == 'Return'"
+          >
+          </v-autocomplete>
         </v-col>
       </v-row>
 
@@ -181,16 +194,53 @@
                 )
               }}</template
             >
-            <template v-slot:item.posa_is_offer="{ item }">
+            <!-- <template v-slot:item.posa_is_offer="{ item }">
               <v-checkbox
                 :model-value="!!item.posa_is_offer || !!item.posa_is_replace"
                 :disabled="true"
               ></v-checkbox>
+            </template> -->
+
+            <template v-slot:item.edit_quantity="{ item }">
+              <v-row >
+                  <v-col cols="6">
+                    <v-btn
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                      icon
+                      color="secondary"
+                      @click.stop="subtract_one(item)"
+                    >
+                      <v-icon>mdi-minus-circle-outline</v-icon>
+                    </v-btn>
+                  </v-col>
+                  
+                  <v-col cols="6">
+                    <v-btn
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                      icon
+                      color="secondary"
+                      @click.stop="add_one(item)"
+                    >
+                      <v-icon>mdi-plus-circle-outline</v-icon>
+                    </v-btn>
+                  </v-col>
+                </v-row>
+            </template>
+
+            <template v-slot:item.delete="{ item }">
+              <v-btn
+                :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                icon
+                color="error"
+                @click.stop="remove_item(item)"
+              >
+                <v-icon>mdi-delete</v-icon>
+              </v-btn>
             </template>
 
             <template v-slot:expanded-row="{ columns, item }">
               <td :colspan="columns.length" class="ma-0 pa-0">
-                <v-row class="ma-0 pa-0">
+                <!-- <v-row class="ma-0 pa-0">
                   <v-col cols="1">
                     <v-btn
                       :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
@@ -222,7 +272,7 @@
                       <v-icon>mdi-plus-circle-outline</v-icon>
                     </v-btn>
                   </v-col>
-                </v-row>
+                </v-row> -->
                 <v-row class="ma-0 pa-0">
                   <v-col cols="4">
                     <v-text-field
@@ -740,7 +790,7 @@
           </v-row>
         </v-col>
         <v-col cols="5">
-          <v-row no-gutters class="pa-1 pt-2 pl-0">
+          <!-- <v-row no-gutters class="pa-1 pt-2 pl-0">
             <v-col cols="6" class="pa-1">
               <v-btn
                 block
@@ -821,7 +871,130 @@
                 >{{ __("Print Draft") }}</v-btn
               >
             </v-col>
-          </v-row>
+          </v-row> -->
+
+    <!-- <v-row no-gutters class=" pa-1 pt-9 pl-0">
+    <v-col cols="6" class="pa-1">
+      <v-btn
+        block
+        class="pa-0"
+        color="success"
+        @click="show_payment"
+        variant="flat"
+      >
+        {{ __("PAY") }}
+      </v-btn>
+    </v-col>
+
+    <v-col cols="6" class="pa-1">
+      <v-menu
+        v-model="actionMenuVisible"
+        offset-y
+        close-on-content-click
+        activator="parent"
+      >
+        <template v-slot:activator="{ on, attrs }">
+          <v-btn
+            block
+            class="pa-0"
+            color="primary"
+            dark
+            v-bind="attrs"
+            v-on="on"
+          >
+            {{ __("Action") }}
+          </v-btn>
+        </template>
+        <v-list>
+          <v-list-item @click="get_draft_invoices">{{ __("Held") }}</v-list-item>
+          <v-list-item
+            v-if="pos_profile.custom_allow_select_sales_order === 1"
+            @click="get_draft_orders"
+          >
+            {{ __("Select S.O") }}
+          </v-list-item>
+          <v-list-item
+            :class="{ 'disable-events': !pos_profile.posa_allow_return }"
+            @click="open_returns"
+          >
+            {{ __("Return") }}
+          </v-list-item>
+          <v-list-item @click="cancel_dialog = true">
+            {{ __("Cancel") }}
+          </v-list-item>
+          <v-list-item @click="new_invoice">{{ __("Save/New") }}</v-list-item>
+          <v-list-item
+            v-if="pos_profile.posa_allow_print_draft_invoices"
+            @click="print_draft_invoice"
+          >
+            {{ __("Print Draft") }}
+          </v-list-item>
+        </v-list>
+      </v-menu>
+    </v-col>
+  </v-row> -->
+  <v-row no-gutters class="pa-1 pt-9 pl-0">
+    <!-- زر الدفع (PAY) -->
+    <v-col cols="12" class="pa-1">
+      <v-btn
+        block
+        class="pa-0"
+        color="success"
+        @click="show_payment"
+        variant="flat"
+      >
+        {{ __("PAY") }}
+      </v-btn>
+    </v-col>
+
+    <!-- زر Action مع القائمة المنسدلة -->
+    <v-col cols="12" class="pa-1 pt-5">
+      <v-menu
+        v-model="actionMenuVisible"
+        offset-y
+        close-on-content-click
+        activator="parent"
+      >
+        <template v-slot:activator="{ on, attrs }">
+          <v-btn
+            block
+            class="pa-0"
+            color="primary"
+            dark
+            v-bind="attrs"
+            v-on="on"
+          >
+            {{ __("Action") }}
+          </v-btn>
+        </template>
+        <v-list>
+          <v-list-item @click="get_draft_invoices">{{ __("Held") }}</v-list-item>
+          <v-list-item
+            v-if="pos_profile.custom_allow_select_sales_order === 1"
+            @click="get_draft_orders"
+          >
+            {{ __("Select S.O") }}
+          </v-list-item>
+          <v-list-item
+            :class="{ 'disable-events': !pos_profile.posa_allow_return }"
+            @click="open_returns"
+          >
+            {{ __("Return") }}
+          </v-list-item>
+          <v-list-item @click="cancel_dialog = true">
+            {{ __("Cancel") }}
+          </v-list-item>
+          <v-list-item @click="new_invoice">{{ __("Save/New") }}</v-list-item>
+          <v-list-item
+            v-if="pos_profile.posa_allow_print_draft_invoices"
+            @click="print_draft_invoice"
+          >
+            {{ __("Print Draft") }}
+          </v-list-item>
+        </v-list>
+      </v-menu>
+    </v-col>
+  </v-row>
         </v-col>
       </v-row>
     </v-card>
@@ -837,6 +1010,8 @@ export default {
   mixins: [format],
   data() {
     return {
+      actionMenuVisible: false, // تحكم بظهور القائمة المنسدلة
+
       pos_profile: "",
       pos_opening_shift: "",
       stock_settings: "",
@@ -875,10 +1050,12 @@ export default {
           key: "item_name",
         },
         { title: __("QTY"), key: "qty", align: "center" },
-        { title: __("UOM"), key: "uom", align: "center" },
+        // { title: __("UOM"), key: "uom", align: "center" },
         { title: __("Rate"), key: "rate", align: "center" },
         { title: __("Amount"), key: "amount", align: "center" },
-        { title: __("is Offer"), key: "posa_is_offer", align: "center" },
+        // { title: __("is Offer"), key: "posa_is_offer", align: "center" },
+        { title: __("Edit Quantity"), key: "edit_quantity", align: "center" },
+        { title: __("Delete"), key: "delete", align: "center" },
       ],
     };
   },
diff --git a/posawesome/public/js/posapp/components/pos/ItemsSelector.vue b/posawesome/public/js/posapp/components/pos/ItemsSelector.vue
index 4e8906c..96eafe9 100644
--- a/posawesome/public/js/posapp/components/pos/ItemsSelector.vue
+++ b/posawesome/public/js/posapp/components/pos/ItemsSelector.vue
@@ -1,164 +1,195 @@
 <template>
   <div>
-    <v-card
-      class="selection mx-auto grey lighten-5 mt-3"
-      style="max-height: 75vh; height: 75vh"
-    >
-      <v-progress-linear
-        :active="loading"
-        :indeterminate="loading"
-        absolute
-        top
-        color="info"
-      ></v-progress-linear>
-      <v-row class="items px-2 py-1">
-        <v-col class="pb-0 mb-2">
-          <v-text-field
-            dense
-            clearable
-            autofocus
-            outlined
-            color="primary"
-            :label="__('Search Items')"
-            hint="Search by item code, serial number, batch no or barcode"
-            background-color="white"
-            hide-details
-            v-model="debounce_search"
-            @keydown.esc="esc_event"
-            @keydown.enter="search_onchange"
-            ref="debounce_search"
-          ></v-text-field>
-        </v-col>
-        <v-col cols="3" class="pb-0 mb-2" v-if="pos_profile.posa_input_qty">
-          <v-text-field
-            dense
-            outlined
-            color="primary"
-            :label="__('QTY')"
-            background-color="white"
-            hide-details
-            v-model.number="qty"
-            type="number"
-            @keydown.enter="enter_event"
-            @keydown.esc="esc_event"
-          ></v-text-field>
-        </v-col>
-        <v-col cols="2" class="pb-0 mb-2" v-if="pos_profile.posa_new_line">
-          <v-checkbox
-            v-model="new_line"
-            color="accent"
-            value="true"
-            label="NLine"
-            dense
-            hide-details
-          ></v-checkbox>
-        </v-col>
-        <v-col cols="12" class="pt-0 mt-0">
-          <div fluid class="items" v-if="items_view == 'card'">
-            <v-row dense class="overflow-y-auto" style="max-height: 67vh">
-              <v-col
-                v-for="(item, idx) in filtred_items"
-                :key="idx"
-                xl="2"
-                lg="3"
-                md="6"
-                sm="6"
-                cols="6"
-                min-height="50"
+    <v-row>
+      <v-col cols="3">
+        <v-row dense>
+            <v-col
+              v-for="(item, index) in items_group"
+              :key="index"
+              cols="auto"
+            >
+              <v-btn
+
+                :color="item_group === item ? 'primary' : 'default'" 
+                outlined
+                @click="handleGroupChange(item)" 
+                style="width: 200px; height:40px ; margin-top:20px"
               >
-                <v-card hover="hover" @click="add_item(item)">
-                  <v-img
-                    :src="
-                      item.image ||
-                      '/assets/posawesome/js/posapp/components/pos/placeholder-image.png'
-                    "
-                    class="white--text align-end"
-                    gradient="to bottom, rgba(0,0,0,0), rgba(0,0,0,0.4)"
-                    height="100px"
+                {{ item }}
+              </v-btn>
+            </v-col>
+          </v-row>
+
+      </v-col>
+      <v-col cols="9">
+        <v-card
+          class="selection mx-auto grey lighten-5 mt-3"
+          style="max-height: 75vh; height: 75vh"
+        >
+          <v-progress-linear
+            :active="loading"
+            :indeterminate="loading"
+            absolute
+            top
+            color="info"
+          ></v-progress-linear>
+          <v-row class="items px-2 py-1">
+            <v-col class="mb-4">
+              <v-text-field
+                dense
+                outlined
+                clearable
+                color="primary"
+                hint="Search by item code, serial number, batch no or barcode"
+                hide-details
+                v-model="debounce_search"
+                :placeholder="__('Search Items')"
+                @keydown.esc="esc_event"
+                @keydown.enter="search_onchange"
+                ref="debounce_search"
+                class="custom-search-field"
+                style="margin-top: 9px;"
+              ></v-text-field>
+            </v-col>
+
+
+            <v-col cols="3" class="pb-0 mb-2" v-if="pos_profile.posa_input_qty">
+              <v-text-field
+                dense
+                outlined
+                color="primary"
+                :label="__('QTY')"
+                background-color="white"
+                hide-details
+                v-model.number="qty"
+                type="number"
+                @keydown.enter="enter_event"
+                @keydown.esc="esc_event"
+              ></v-text-field>
+            </v-col>
+            <v-col cols="2" class="pb-0 mb-2" v-if="pos_profile.posa_new_line">
+              <v-checkbox
+                v-model="new_line"
+                color="accent"
+                value="true"
+                label="NLine"
+                dense
+                hide-details
+              ></v-checkbox>
+            </v-col>
+
+
+
+            <!-- Start Items Section -->
+            <v-col cols="12" class="pt-0 mt-0">
+              <div fluid class="items" v-if="items_view == 'card'">
+                <v-row dense class="overflow-y-auto" style="max-height: 67vh">
+                  <v-col
+                    v-for="(item, idx) in filtred_items"
+                    :key="idx"
+                    xl="2"
+                    lg="3"
+                    md="6"
+                    sm="6"
+                    cols="6"
+                    min-height="50"
                   >
-                    <v-card-text
-                      v-text="item.item_name"
-                      class="text-caption px-1 pb-0"
-                    ></v-card-text>
-                  </v-img>
-                  <v-card-text class="text--primary pa-1">
-                    <div class="text-caption primary--text">
-                      {{ currencySymbol(item.currency) || "" }}
-                      {{ formtCurrency(item.rate) || 0 }}
-                    </div>
-                    <div class="text-caption golden--text">
-                      {{ item.stock_uom || "" }}
-                    </div>
-                  </v-card-text>
-                </v-card>
-              </v-col>
-            </v-row>
-          </div>
-          <div fluid class="items" v-if="items_view == 'list'">
-            <div class="my-0 py-0 overflow-y-auto" style="max-height: 65vh">
-                <v-data-table
-                  :headers="getItmesHeaders()"
-                  :items="filtred_items"
-                  item-key="item_code"
-                  class="elevation-1"
-                  :items-per-page="itemsPerPage"
-                  hide-default-footer
-                  @click:row="add_item_table"
-                >
-                  <template v-slot:item.rate="{ item }">
-                    <span class="primary--text"
-                      >{{ currencySymbol(item.currency) }}
-                      {{ formtCurrency(item.rate) }}</span
+                    <v-card hover="hover" @click="add_item(item)">
+                      <v-img
+                        :src="
+                          item.image ||
+                          '/assets/posawesome/js/posapp/components/pos/placeholder-image.png'
+                        "
+                        class="white--text align-end"
+                        gradient="to bottom, rgba(0,0,0,0), rgba(0,0,0,0.4)"
+                        height="100px"
+                      >
+                        <v-card-text
+                          v-text="item.item_name"
+                          class="text-caption px-1 pb-0"
+                        ></v-card-text>
+                      </v-img>
+                      <v-card-text class="text--primary pa-1">
+                        <div class="text-caption primary--text">
+                          {{ currencySymbol(item.currency) || "" }}
+                          {{ formtCurrency(item.rate) || 0 }}
+                        </div>
+                        <div class="text-caption golden--text">
+                          {{ item.stock_uom || "" }}
+                        </div>
+                      </v-card-text>
+                    </v-card>
+                  </v-col>
+                </v-row>
+
+              </div>
+
+
+              <div fluid class="items" v-if="items_view == 'list'">
+                <div class="my-0 py-0 overflow-y-auto" style="max-height: 65vh">
+                    <v-data-table
+                      :headers="getItmesHeaders()"
+                      :items="filtred_items"
+                      item-key="item_code"
+                      class="elevation-1"
+                      :items-per-page="itemsPerPage"
+                      hide-default-footer
+                      @click:row="add_item_table"
                     >
-                  </template>
-                </v-data-table>
-            </div>
-          </div>
-        </v-col>
-      </v-row>
-    </v-card>
-    <v-card class="cards mb-0 mt-3 pa-2 grey lighten-5">
-      <v-row no-gutters align="center" justify="center">
-        <v-col cols="12">
-          <v-select
-            :items="items_group"
-            :label="__('Items Group')"
-            dense
-            outlined
-            hide-details
-            v-model="item_group"
-            v-on:change="search_onchange"
-          ></v-select>
-        </v-col>
-        <v-col cols="3" class="mt-1">
-          <v-btn-toggle
-            v-model="items_view"
-            color="primary"
-            group
-            dense
-            rounded
-          >
-            <v-btn small value="list">{{ __("List") }}</v-btn>
-            <v-btn small value="card">{{ __("Card") }}</v-btn>
-          </v-btn-toggle>
-        </v-col>
-        <v-col cols="4" class="mt-2">
-          <v-btn small block color="primary" text @click="show_coupons"
-            >{{ couponsCount }} {{ __("Coupons") }}</v-btn
-          >
-        </v-col>
-        <v-col cols="5" class="mt-2">
-          <v-btn small block color="primary" text @click="show_offers"
-            >{{ offersCount }} {{ __("Offers") }} : {{ appliedOffersCount }}
-            {{ __("Applied") }}</v-btn
-          >
-        </v-col>
-      </v-row>
-    </v-card>
+                      <template v-slot:item.rate="{ item }">
+                        <span class="primary--text"
+                          >{{ currencySymbol(item.currency) }}
+                          {{ formtCurrency(item.rate) }}</span
+                        >
+                      </template>
+                    </v-data-table>
+                </div>
+              </div>
+            </v-col>
+            <!-- Start Items Section -->
+
+          </v-row>
+        </v-card>
+
+
+
+
+        <v-card class="cards mb-0 mt-3 pa-2 grey lighten-5">
+          <v-row no-gutters align="center" justify="center">
+            <v-col cols="4" class="mt-1">
+              <v-btn-toggle
+                v-model="items_view"
+                color="primary"
+                group
+                dense
+                rounded
+              >
+                <v-btn small value="list">{{ __("List") }}</v-btn>
+                <v-btn small value="card">{{ __("Card") }}</v-btn>
+              </v-btn-toggle>
+            </v-col>
+            <v-col cols="4" class="mt-1">
+              <!-- <v-btn class="pl-0 pr-0" small block color="primary" text @click="show_coupons" -->
+              <v-btn small style="height: 46px;" color="primary" @click="show_coupons"
+                >{{ couponsCount }} {{ __("Coupons") }}</v-btn
+              >
+            </v-col>
+            <v-col cols="4" class="mt-1">
+              <!-- <v-btn small block color="primary" text @click="show_offers" -->
+              <v-btn small style="height: 46px;" color="primary" @click="show_offers"
+                >{{ offersCount }} {{ __("Offers") }} : {{ appliedOffersCount }}
+                {{ __("Applied") }}</v-btn
+              >
+            </v-col>
+          </v-row>
+        </v-card>
+      </v-col>
+    </v-row>
   </div>
 </template>
 
 <script>
+import { ref, onMounted, onBeforeUnmount } from "vue";
 import { evntBus } from "../../bus";
 import format from "../../format";
 import _ from "lodash";
@@ -184,6 +215,7 @@ export default {
     new_line: false,
     qty: 1,
   }),
+  
 
   watch: {
     filtred_items(new_value, old_value) {
@@ -202,6 +234,11 @@ export default {
   },
 
   methods: {
+    handleGroupChange(item) {
+    this.item_group = item; // تحديث العنصر المحدد
+    this.search_onchange(); // استدعاء دالة التصفية
+  },
+    
     show_offers() {
       evntBus.emit("show_offers", "true");
     },
@@ -678,4 +715,25 @@ export default {
 };
 </script>
 
-<style scoped></style>
+<style scoped>
+ ::v-deep(.v-field.v-field--appended.v-field--center-affix.v-field--variant-filled.v-theme--light.v-locale--is-ltr) {
+  background-color: #fff !important;
+  border: 1px solid #959393 !important;
+  border-radius: 5px !important;
+  height: 40px;
+  text-align: center;
+  margin-top: 7px;
+  /* padding-bottom: 0 !important;
+  padding-top: 0 !important; */
+}
+
+::v-deep(.v-field__overlay) {
+  background-color: #fff !important;
+  border: 2px solid #2e2c2c !important;
+  border-radius: 8px !important;
+}
+/* ::v-deep(.custom-search-field) { */
+  /* padding-bottom: 5px !important; */
+  /* padding-top: 0; */
+/* } */
+</style>
diff --git a/posawesome/public/js/posapp/components/pos/Pos.vue b/posawesome/public/js/posapp/components/pos/Pos.vue
index 1899935..51930d3 100644
--- a/posawesome/public/js/posapp/components/pos/Pos.vue
+++ b/posawesome/public/js/posapp/components/pos/Pos.vue
@@ -1,5 +1,5 @@
 <template>
-  <div fluid class="mt-2">
+  <div fluid class="mt-2" >
     <ClosingDialog></ClosingDialog>
     <Drafts></Drafts>
     <SalesOrders></SalesOrders>
@@ -11,21 +11,21 @@
     <v-row v-show="!dialog">
       <v-col
         v-show="!payment && !offers && !coupons"
-        xl="5"
-        lg="5"
-        md="5"
-        sm="5"
+        xl="7"
+        lg="7"
+        md="7"
+        sm="7"
         cols="12"
         class="pos pr-0"
       >
-        <ItemsSelector></ItemsSelector>
+        <ItemsSelector ref="itemsSelector"></ItemsSelector>
       </v-col>
       <v-col
         v-show="offers"
-        xl="5"
-        lg="5"
-        md="5"
-        sm="5"
+        xl="7"
+        lg="7"
+        md="7"
+        sm="7"
         cols="12"
         class="pos pr-0"
       >
@@ -33,10 +33,10 @@
       </v-col>
       <v-col
         v-show="coupons"
-        xl="5"
-        lg="5"
-        md="5"
-        sm="5"
+        xl="7"
+        lg="7"
+        md="7"
+        sm="7"
         cols="12"
         class="pos pr-0"
       >
@@ -44,17 +44,17 @@
       </v-col>
       <v-col
         v-show="payment"
-        xl="5"
-        lg="5"
-        md="5"
-        sm="5"
+        xl="7"
+        lg="7"
+        md="7"
+        sm="7"
         cols="12"
         class="pos pr-0"
       >
         <Payments></Payments>
       </v-col>
 
-      <v-col xl="7" lg="7" md="7" sm="7" cols="12" class="pos">
+      <v-col xl="5" lg="5" md="5" sm="5" cols="12" class="pos">
         <Invoice></Invoice>
       </v-col>
     </v-row>
@@ -107,6 +107,36 @@ export default {
   },
 
   methods: {
+  // handleKeydown: function (event) {
+  // },
+    handleKeyUp() {
+        // الحصول على العنصر النشط حاليًا
+        const activeElement = document.activeElement;
+
+        // التحقق إذا كان العنصر النشط هو حقل إدخال (input, textarea, أو contenteditable)
+        const isInput =
+          activeElement.tagName === "INPUT" ||
+          activeElement.tagName === "TEXTAREA" ||
+          activeElement.isContentEditable;
+
+        if (isInput) {
+          // إذا كان العنصر النشط حقل إدخال، لا تفعل شيئًا
+          return;
+        }
+
+        // إذا لم يكن العنصر النشط حقل إدخال، قم بنقل التركيز إلى debounce_search
+        const itemsSelector = this.$refs.itemsSelector;
+        if (itemsSelector) {
+          const debounceSearchInput = itemsSelector.$refs.debounce_search;
+          if (debounceSearchInput) {
+            debounceSearchInput.focus();
+          } else {
+            console.error("العنصر debounce_search غير موجود داخل ItemsSelector.");
+          }
+        } else {
+          console.error("المكون ItemsSelector غير موجود.");
+        }
+      },
     check_opening_entry() {
       return frappe
         .call('posawesome.posawesome.api.posapp.check_opening_shift', {
@@ -184,6 +214,7 @@ export default {
   },
 
   mounted: function () {
+    window.addEventListener('keyup', this.handleKeyUp);
     this.$nextTick(function () {
       this.check_opening_entry();
       this.get_pos_setting();
@@ -221,6 +252,7 @@ export default {
     });
   },
   beforeDestroy() {
+    window.removeEventListener('keyup', this.handleKeyUp);
     evntBus.$off('close_opening_dialog');
     evntBus.$off('register_pos_data');
     evntBus.$off('LoadPosProfile');

commit 5aba6d5be33c1b631ff4da8ac858a9e1d29b1968
Author: Muhammad Nouman <nomi9639@gmail.com>
Date:   Mon Jul 8 17:36:10 2024 +0500

    Remove Actual QTY

diff --git a/.github/ISSUE_TEMPLATE/bug_report.md b/.github/ISSUE_TEMPLATE/bug_report.md
new file mode 100644
index 0000000..021a354
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE/bug_report.md
@@ -0,0 +1,47 @@
+---
+name: Bug report
+about: Create a report to help us improve
+title: "[BUG]: "
+labels: ''
+assignees: ''
+
+---
+
+<!--  Thanks for your time to make POS Awesome better with your feedback 👍
+
+**IMPORTANT** Before reporting a bug:
+
+A properly detailed bug report can save a LOT of time and help fix issues as soon as possible.
+- ->
+
+### Versions
+
+- Frappe: <!-- ex: V12.13.0 -->
+- Erpnext: <!-- ex: V13.14.0 -->
+- POS Awesome: <!-- ex: V01.0.2 -->
+
+### Stacktrace / full error message
+
+```javascript
+(paste here)
+```
+
+### Steps to reproduce
+
+1. Go to '...'
+2. Click on '....'
+3. Scroll down to '....'
+4. See the error
+
+### What is Expected?
+
+
+### What is actually happening?
+
+
+### Additional context
+Add any other context about the problem here.
+
+
+### Screenshots
+If applicable, could you add screenshots to help explain your problem?
diff --git a/.github/ISSUE_TEMPLATE/feature_request.md b/.github/ISSUE_TEMPLATE/feature_request.md
new file mode 100644
index 0000000..0b2e077
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE/feature_request.md
@@ -0,0 +1,30 @@
+---
+name: Feature request
+about: Suggest an idea for this project
+title: "[Feature request]: "
+labels: ''
+assignees: ''
+
+---
+
+<!-- 💚 Thanks for your time to make POS Awesome better with your feedbacks 💚 -->
+
+### Is your feature request related to a problem? Please describe.
+
+
+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->
+
+### Describe the solution you'd like
+
+
+<!-- A clear and concise description of what you want to happen. Adding some code examples would be neat! -->
+
+### Describe alternatives you've considered
+
+
+<!-- A clear and concise description of any alternative solutions or features you've considered. -->
+
+### Additional context
+
+
+<!-- Add any other context or screenshots about the feature request here. -->
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..411c382
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,8 @@
+.DS_Store
+*.pyc
+*.egg-info
+*.swp
+tags
+posawesome/docs/current
+node_modules
+posawesome/public/dist
\ No newline at end of file
diff --git a/MANIFEST.in b/MANIFEST.in
new file mode 100644
index 0000000..c5810a8
--- /dev/null
+++ b/MANIFEST.in
@@ -0,0 +1,18 @@
+include MANIFEST.in
+include requirements.txt
+include *.json
+include *.md
+include *.py
+include *.txt
+recursive-include posawesome *.css
+recursive-include posawesome *.csv
+recursive-include posawesome *.html
+recursive-include posawesome *.ico
+recursive-include posawesome *.js
+recursive-include posawesome *.json
+recursive-include posawesome *.md
+recursive-include posawesome *.png
+recursive-include posawesome *.py
+recursive-include posawesome *.svg
+recursive-include posawesome *.txt
+recursive-exclude posawesome *.pyc
\ No newline at end of file
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..54f48e4
--- /dev/null
+++ b/README.md
@@ -0,0 +1,124 @@
+<div align="center">
+    <img src="https://frappecloud.com/files/pos.png" height="128">
+    <h2>POS AWESOME</h2>
+</div>
+
+#### An open-source Point of Sale for [Erpnext](https://github.com/frappe/erpnext) using [Vue.js](https://github.com/vuejs/vue) and [Vuetify](https://github.com/vuetifyjs/vuetify)
+
+---
+
+### Main Features
+
+1. Supports Erpnext Version 14
+2. User friendly and provides a good user experience and speed of use
+3. The cashier has the option of either using list view or card view during sales transactions. Card view shows the images of the items
+4. Supports enqueue invoice submission after printing the receipt for faster processing
+5. Supports batch & serial numbering
+6. Supports batch based pricing
+7. Supports UOM specific barcode and pricing
+8. Supports sales of scale (weighted) products
+9. Ability to make returns from POS
+10. Supports Making returns for either cash or customer credit
+11. Supports using customer credit note for payment
+12. Supports credit sales
+13. Allows user to choose a due date for credit sales
+14. Supports customer loyalty points
+15. Shortcuts keys
+16. Supports Customer Discount
+17. Supports POS Offers
+18. Auto apply batches for bundle items
+19. Search and add items by Serial Number
+20. Create Sales Order from POS directly
+21. Supports template items with variants
+22. Supports multiple languages
+23. Supports Mpesa mobile payment
+24. POS Coupons
+25. Supports Referral Code
+26. Supports Customer and Customer Group price list
+27. Supports Sales Person
+28. Supports Delivery Charges
+29. Search and add items by Batch Number
+30. Accept new payments from customers against existing invoices
+31. Payments Reconciliation
+
+---
+
+### How to Install
+
+#### Frappe Cloud:
+
+One-click installing available if you are hosting on FC from [here](https://frappecloud.com/marketplace/apps/posawesome)
+
+#### Self Hosting:
+
+1. `bench get-app branch version-14 https://github.com/yrestom/POS-Awesome.git`
+2. `bench setup requirements`
+3. `bench build --app posawesome`
+4. `bench restart`
+5. `bench --site [your.site.name] install-app posawesome`
+6. `bench --site [your.site.name] migrate`
+
+---
+
+### Support
+
+#### Frappe Cloud:
+
+If you are hosting on FC premium support is available [here](https://frappecloud.com/marketplace/apps/posawesome)
+
+#### Self Hosting:
+
+If you need premium support please email me [here](mailto:info@totrox.com)
+
+#### Community Support:
+
+Available in GitHub [discussions](https://github.com/yrestom/POS-Awesome/discussions)
+
+---
+
+### New Features and Bug report:
+
+- Please Create Github Issue from [here](https://github.com/yrestom/POS-Awesome/issues/new/choose) after checking the existing issues
+- For paid features, you can email me [here](mailto:info@totrox.com)
+
+---
+
+### How To Use:
+
+[POS Awesome Wiki](https://github.com/yrestom/POS-Awesome/wiki)
+
+---
+
+### Shortcuts:
+
+- `CTRL or CMD + S` open payments
+- `CTRL or CMD + X` submit payments
+- `CTRL or CMD + D` remove first item from the top
+- `CTRL or CMD + A` expand first item from the top
+- `CTRL or CMD + E` focus on discount field
+
+---
+
+### Dependencies:
+
+- [Frappe](https://github.com/frappe/frappe)
+- [Erpnext](https://github.com/frappe/erpnext)
+- [Vue.js](https://github.com/vuejs/vue)
+- [Vuetify.js](https://github.com/vuetifyjs/vuetify)
+
+---
+
+### Contributing
+
+Will using for this the same guidelines from Erpnext
+
+1. [Issue Guidelines](https://github.com/frappe/erpnext/wiki/Issue-Guidelines)
+2. [Pull Request Requirements](https://github.com/frappe/erpnext/wiki/Contribution-Guidelines)
+
+---
+
+### License
+
+GNU/General Public License (see [license.txt](https://github.com/yrestom/POS-Awesome/blob/master/license.txt))
+
+The POS Awesome code is licensed as GNU General Public License (v3)
diff --git a/batch.PNG b/batch.PNG
new file mode 100644
index 0000000..916e09d
Binary files /dev/null and b/batch.PNG differ
diff --git a/license.txt b/license.txt
new file mode 100644
index 0000000..a238a97
--- /dev/null
+++ b/license.txt
@@ -0,0 +1,675 @@
+### GNU GENERAL PUBLIC LICENSE
+
+Version 3, 29 June 2007
+
+Copyright (C) 2007 Free Software Foundation, Inc.
+<http://fsf.org/>
+
+Everyone is permitted to copy and distribute verbatim copies of this
+license document, but changing it is not allowed.
+
+### Preamble
+
+The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works. By contrast,
+the GNU General Public License is intended to guarantee your freedom
+to share and change all versions of a program--to make sure it remains
+free software for all its users. We, the Free Software Foundation, use
+the GNU General Public License for most of our software; it applies
+also to any other work released this way by its authors. You can apply
+it to your programs, too.
+
+When we speak of free software, we are referring to freedom, not
+price. Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights. Therefore, you
+have certain responsibilities if you distribute copies of the
+software, or if you modify it: responsibilities to respect the freedom
+of others.
+
+For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received. You must make sure that they, too, receive
+or can get the source code. And you must show them these terms so they
+know their rights.
+
+Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software. For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the
+manufacturer can do so. This is fundamentally incompatible with the
+aim of protecting users' freedom to change the software. The
+systematic pattern of such abuse occurs in the area of products for
+individuals to use, which is precisely where it is most unacceptable.
+Therefore, we have designed this version of the GPL to prohibit the
+practice for those products. If such problems arise substantially in
+other domains, we stand ready to extend this provision to those
+domains in future versions of the GPL, as needed to protect the
+freedom of users.
+
+Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish
+to avoid the special danger that patents applied to a free program
+could make it effectively proprietary. To prevent this, the GPL
+assures that patents cannot be used to render the program non-free.
+
+The precise terms and conditions for copying, distribution and
+modification follow.
+
+### TERMS AND CONDITIONS
+
+#### 0. Definitions.
+
+"This License" refers to version 3 of the GNU General Public License.
+
+"Copyright" also means copyright-like laws that apply to other kinds
+of works, such as semiconductor masks.
+
+"The Program" refers to any copyrightable work licensed under this
+License. Each licensee is addressed as "you". "Licensees" and
+"recipients" may be individuals or organizations.
+
+To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of
+an exact copy. The resulting work is called a "modified version" of
+the earlier work or a work "based on" the earlier work.
+
+A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy. Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies. Mere interaction with a user
+through a computer network, with no transfer of a copy, is not
+conveying.
+
+An interactive user interface displays "Appropriate Legal Notices" to
+the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License. If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+#### 1. Source Code.
+
+The "source code" for a work means the preferred form of the work for
+making modifications to it. "Object code" means any non-source form of
+a work.
+
+A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form. A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities. However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work. For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+The Corresponding Source need not include anything that users can
+regenerate automatically from other parts of the Corresponding Source.
+
+The Corresponding Source for a work in source code form is that same
+work.
+
+#### 2. Basic Permissions.
+
+All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met. This License explicitly affirms your unlimited
+permission to run the unmodified Program. The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work. This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+You may make, run and propagate covered works that you do not convey,
+without conditions so long as your license otherwise remains in force.
+You may convey covered works to others for the sole purpose of having
+them make modifications exclusively for you, or provide you with
+facilities for running those works, provided that you comply with the
+terms of this License in conveying all material for which you do not
+control copyright. Those thus making or running the covered works for
+you must do so exclusively on your behalf, under your direction and
+control, on terms that prohibit them from making any copies of your
+copyrighted material outside their relationship with you.
+
+Conveying under any other circumstances is permitted solely under the
+conditions stated below. Sublicensing is not allowed; section 10 makes
+it unnecessary.
+
+#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such
+circumvention is effected by exercising rights under this License with
+respect to the covered work, and you disclaim any intention to limit
+operation or modification of the work as a means of enforcing, against
+the work's users, your or third parties' legal rights to forbid
+circumvention of technological measures.
+
+#### 4. Conveying Verbatim Copies.
+
+You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+#### 5. Conveying Modified Source Versions.
+
+You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these
+conditions:
+
+-   a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+-   b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under
+    section 7. This requirement modifies the requirement in section 4
+    to "keep intact all notices".
+-   c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy. This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged. This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+-   d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit. Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+#### 6. Conveying Non-Source Forms.
+
+You may convey a covered work in object code form under the terms of
+sections 4 and 5, provided that you also convey the machine-readable
+Corresponding Source under the terms of this License, in one of these
+ways:
+
+-   a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+-   b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the Corresponding
+    Source from a network server at no charge.
+-   c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source. This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+-   d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge. You need not require recipients to copy the
+    Corresponding Source along with the object code. If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source. Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+-   e) Convey the object code using peer-to-peer transmission,
+    provided you inform other peers where the object code and
+    Corresponding Source of the work are being offered to the general
+    public at no charge under subsection 6d.
+
+A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal,
+family, or household purposes, or (2) anything designed or sold for
+incorporation into a dwelling. In determining whether a product is a
+consumer product, doubtful cases shall be resolved in favor of
+coverage. For a particular product received by a particular user,
+"normally used" refers to a typical or common use of that class of
+product, regardless of the status of the particular user or of the way
+in which the particular user actually uses, or expects or is expected
+to use, the product. A product is a consumer product regardless of
+whether the product has substantial commercial, industrial or
+non-consumer uses, unless such uses represent the only significant
+mode of use of the product.
+
+"Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to
+install and execute modified versions of a covered work in that User
+Product from a modified version of its Corresponding Source. The
+information must suffice to ensure that the continued functioning of
+the modified object code is in no case prevented or interfered with
+solely because modification has been made.
+
+If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information. But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or
+updates for a work that has been modified or installed by the
+recipient, or for the User Product in which it has been modified or
+installed. Access to a network may be denied when the modification
+itself materially and adversely affects the operation of the network
+or violates the rules and protocols for communication across the
+network.
+
+Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+#### 7. Additional Terms.
+
+"Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law. If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it. (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.) You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders
+of that material) supplement the terms of this License with terms:
+
+-   a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+-   b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+-   c) Prohibiting misrepresentation of the origin of that material,
+    or requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+-   d) Limiting the use for publicity purposes of names of licensors
+    or authors of the material; or
+-   e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+-   f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions
+    of it) with contractual assumptions of liability to the recipient,
+    for any liability that these contractual assumptions directly
+    impose on those licensors and authors.
+
+All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10. If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term. If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions; the
+above requirements apply either way.
+
+#### 8. Termination.
+
+You may not propagate or modify a covered work except as expressly
+provided under this License. Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+However, if you cease all violation of this License, then your license
+from a particular copyright holder is reinstated (a) provisionally,
+unless and until the copyright holder explicitly and finally
+terminates your license, and (b) permanently, if the copyright holder
+fails to notify you of the violation by some reasonable means prior to
+60 days after the cessation.
+
+Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License. If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+#### 9. Acceptance Not Required for Having Copies.
+
+You are not required to accept this License in order to receive or run
+a copy of the Program. Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance. However,
+nothing other than this License grants you permission to propagate or
+modify any covered work. These actions infringe copyright if you do
+not accept this License. Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+#### 10. Automatic Licensing of Downstream Recipients.
+
+Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License. You are not responsible
+for enforcing compliance by third parties with this License.
+
+An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations. If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License. For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+#### 11. Patents.
+
+A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based. The
+work thus licensed is called the contributor's "contributor version".
+
+A contributor's "essential patent claims" are all patent claims owned
+or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version. For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement). To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients. "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+A patent license is "discriminatory" if it does not include within the
+scope of its coverage, prohibits the exercise of, or is conditioned on
+the non-exercise of one or more of the rights that are specifically
+granted under this License. You may not convey a covered work if you
+are a party to an arrangement with a third party that is in the
+business of distributing software, under which you make payment to the
+third party based on the extent of your activity of conveying the
+work, and under which the third party grants, to any of the parties
+who would receive the covered work from you, a discriminatory patent
+license (a) in connection with copies of the covered work conveyed by
+you (or copies made from those copies), or (b) primarily for and in
+connection with specific products or compilations that contain the
+covered work, unless you entered into that arrangement, or that patent
+license was granted, prior to 28 March 2007.
+
+Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+#### 12. No Surrender of Others' Freedom.
+
+If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License. If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under
+this License and any other pertinent obligations, then as a
+consequence you may not convey it at all. For example, if you agree to
+terms that obligate you to collect a royalty for further conveying
+from those to whom you convey the Program, the only way you could
+satisfy both those terms and this License would be to refrain entirely
+from conveying the Program.
+
+#### 13. Use with the GNU Affero General Public License.
+
+Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work. The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+#### 14. Revised Versions of this License.
+
+The Free Software Foundation may publish revised and/or new versions
+of the GNU General Public License from time to time. Such new versions
+will be similar in spirit to the present version, but may differ in
+detail to address new problems or concerns.
+
+Each version is given a distinguishing version number. If the Program
+specifies that a certain numbered version of the GNU General Public
+License "or any later version" applies to it, you have the option of
+following the terms and conditions either of that numbered version or
+of any later version published by the Free Software Foundation. If the
+Program does not specify a version number of the GNU General Public
+License, you may choose any version ever published by the Free
+Software Foundation.
+
+If the Program specifies that a proxy can decide which future versions
+of the GNU General Public License can be used, that proxy's public
+statement of acceptance of a version permanently authorizes you to
+choose that version for the Program.
+
+Later license versions may give you additional or different
+permissions. However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+#### 15. Disclaimer of Warranty.
+
+THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
+WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND
+PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE
+DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
+CORRECTION.
+
+#### 16. Limitation of Liability.
+
+IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR
+CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES
+ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT
+NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR
+LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM
+TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER
+PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+
+#### 17. Interpretation of Sections 15 and 16.
+
+If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+END OF TERMS AND CONDITIONS
+
+### How to Apply These Terms to Your New Programs
+
+If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these
+terms.
+
+To do so, attach the following notices to the program. It is safest to
+attach them to the start of each source file to most effectively state
+the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+        <one line to give the program's name and a brief idea of what it does.>
+        Copyright (C) <year>  <name of author>
+
+        This program is free software: you can redistribute it and/or modify
+        it under the terms of the GNU General Public License as published by
+        the Free Software Foundation, either version 3 of the License, or
+        (at your option) any later version.
+
+        This program is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+        GNU General Public License for more details.
+
+        You should have received a copy of the GNU General Public License
+        along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper
+mail.
+
+If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+        <program>  Copyright (C) <year>  <name of author>
+        This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+        This is free software, and you are welcome to redistribute it
+        under certain conditions; type `show c' for details.
+
+The hypothetical commands \`show w' and \`show c' should show the
+appropriate parts of the General Public License. Of course, your
+program's commands might be different; for a GUI interface, you would
+use an "about box".
+
+You should also get your employer (if you work as a programmer) or
+institute, if any, to sign a "copyright disclaimer" for the program, if
+necessary. For more information on this, and how to apply and follow
+the GNU GPL, see <http://www.gnu.org/licenses/>.
+
+The GNU General Public License does not permit incorporating your
+program into proprietary programs. If your program is a subroutine
+library, you may consider it more useful to permit linking proprietary
+applications with the library. If this is what you want to do, use the
+GNU Lesser General Public License instead of this License. But first,
+please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..e2d1853
--- /dev/null
+++ b/package.json
@@ -0,0 +1,7 @@
+{
+  "dependencies": {
+    "lodash": "^4.17.21",
+    "mitt": "^3.0.1",
+    "vuetify": "^3.6.9"
+  }
+}
diff --git a/posawesome/__init__.py b/posawesome/__init__.py
new file mode 100644
index 0000000..cfacd30
--- /dev/null
+++ b/posawesome/__init__.py
@@ -0,0 +1,9 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+import frappe
+
+__version__ = "6.3.0"
+
+
+def console(*data):
+    frappe.publish_realtime("toconsole", data, user=frappe.session.user)
diff --git a/posawesome/config/__init__.py b/posawesome/config/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/config/desktop.py b/posawesome/config/desktop.py
new file mode 100644
index 0000000..664d796
--- /dev/null
+++ b/posawesome/config/desktop.py
@@ -0,0 +1,15 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+from frappe import _
+
+def get_data():
+	return [
+		{
+			"module_name": "POS Awesome",
+			"category": "Modules",
+			"color": "grey",
+			"icon": "octicon octicon-file-directory",
+			"type": "module",
+			"label": _("POS Awesome")
+		}
+	]
diff --git a/posawesome/config/docs.py b/posawesome/config/docs.py
new file mode 100644
index 0000000..a38f0b4
--- /dev/null
+++ b/posawesome/config/docs.py
@@ -0,0 +1,11 @@
+"""
+Configuration for docs
+"""
+
+# source_link = "https://github.com/[org_name]/posawesome"
+# docs_base_url = "https://[org_name].github.io/posawesome"
+# headline = "App that does everything"
+# sub_heading = "Yes, you got that right the first time, everything"
+
+def get_context(context):
+	context.brand_html = "POS Awesome"
diff --git a/posawesome/config/pos_awesome.py b/posawesome/config/pos_awesome.py
new file mode 100644
index 0000000..cdbc604
--- /dev/null
+++ b/posawesome/config/pos_awesome.py
@@ -0,0 +1,40 @@
+from __future__ import unicode_literals
+from frappe import _
+
+def get_data():
+	return [
+		{
+			"label": _("POS Awesome"),
+			"items": [
+				 {
+				   "description": "POS Awesome", 
+				   "name": "posapp", 
+				   "label": "POSAPP", 					
+				   "type": "page"
+				  }, 
+
+				{
+				   "type": "doctype", 
+				   "description": "POS Profile", 
+				   "name": "POS Profile", 
+				  },
+
+				{
+				   "type": "doctype", 
+				   "description": "POS Opening Shift", 
+				   "name": "POS Opening Shift", 
+				  },
+				{
+				   "type": "doctype", 
+				   "description": "POS Closing Shift", 
+				   "name": "POS Closing Shift", 
+				  },
+				{
+				   "type": "doctype", 
+				   "description": "POS Offers", 
+				   "name": "POS Offer", 
+				  },
+            ]
+
+        }
+	]
diff --git a/posawesome/fixtures/custom_field.json b/posawesome/fixtures/custom_field.json
new file mode 100644
index 0000000..2e00aea
--- /dev/null
+++ b/posawesome/fixtures/custom_field.json
@@ -0,0 +1,5185 @@
+[
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Item Barcode",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_uom",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 1,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "barcode_type",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "UOM",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-07 02:03:39.297065",
+  "module": null,
+  "name": "Item Barcode-posa_uom",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "UOM",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_notes",
+  "fieldtype": "Small Text",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "item_code",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:28:50.283526",
+  "module": null,
+  "name": "Sales Invoice Item-posa_notes",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_notes",
+  "fieldtype": "Small Text",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "ensure_delivery_based_on_produced_serial_no",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 16:17:25.085195",
+  "module": null,
+  "name": "Sales Order Item-posa_notes",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_row_id",
+  "fieldtype": "Data",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "item_name",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Row ID",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-08 17:56:45.705775",
+  "module": null,
+  "name": "Sales Invoice Item-posa_row_id",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_delivery_date",
+  "fieldtype": "Date",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_row_id",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Delivery Date",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:40:02.062423",
+  "module": null,
+  "name": "Sales Invoice Item-posa_delivery_date",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_row_id",
+  "fieldtype": "Data",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "item_name",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Row ID",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-08-21 14:16:22.909705",
+  "module": null,
+  "name": "Sales Order Item-posa_row_id",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_pos_awesome_settings",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "company_address",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Awesome Settings",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-09 15:36:23.711921",
+  "module": null,
+  "name": "POS Profile-posa_pos_awesome_settings",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": "For POS Closing Shift Payment Reconciliation",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_cash_mode_of_payment",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_pos_awesome_settings",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Cash Mode of Payment",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-03-06 00:29:24.240940",
+  "module": null,
+  "name": "POS Profile-posa_cash_mode_of_payment",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "Mode of Payment",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Customer",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_discount",
+  "fieldtype": "Float",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "lead_name",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Discount %",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-04 21:02:31.784347",
+  "module": null,
+  "name": "Customer-posa_discount",
+  "no_copy": 0,
+  "non_negative": 1,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_delete",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_cash_mode_of_payment",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Auto Delete Draft Invoice",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-09 16:01:30.649938",
+  "module": null,
+  "name": "POS Profile-posa_allow_delete",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Batch",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_batch_price",
+  "fieldtype": "Float",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "manufacturing_date",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Price",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-26 02:31:58.913688",
+  "module": null,
+  "name": "Batch-posa_batch_price",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_user_to_edit_rate",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_delete",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow user to edit Rate",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-09 16:01:30.936524",
+  "module": null,
+  "name": "POS Profile-posa_allow_user_to_edit_rate",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_user_to_edit_additional_discount",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_user_to_edit_rate",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow user to edit Additional Discount",
+  "length": 0,
+  "mandatory_depends_on": "0",
+  "modified": "2020-10-09 16:01:31.157157",
+  "module": null,
+  "name": "POS Profile-posa_allow_user_to_edit_additional_discount",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": "posa_allow_user_to_edit_additional_discount",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_use_percentage_discount",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_user_to_edit_additional_discount",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Percentage Discount",
+  "length": 0,
+  "mandatory_depends_on": "",
+  "modified": "2021-09-26 14:08:06.765185",
+  "module": null,
+  "name": "POS Profile-posa_use_percentage_discount",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": "",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_max_discount_allowed",
+  "fieldtype": "Float",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_use_percentage_discount",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Max Discount Percentage Allowed ",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-26 05:11:52.101322",
+  "module": null,
+  "name": "POS Profile-posa_max_discount_allowed",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "221",
+  "depends_on": null,
+  "description": "It is best not to use more than four numbers",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_scale_barcode_start",
+  "fieldtype": "Int",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_max_discount_allowed",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Scale Barcode Start With",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-30 03:54:32.270370",
+  "module": null,
+  "name": "POS Profile-posa_scale_barcode_start",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_change_posting_date",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_scale_barcode_start",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Change Posting Date",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-12-16 11:20:05.134781",
+  "module": null,
+  "name": "POS Profile-posa_allow_change_posting_date",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_pos_opening_shift",
+  "fieldtype": "Data",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 1,
+  "insert_after": "pos_profile",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Shift",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-09-27 03:15:11.844405",
+  "module": null,
+  "name": "Sales Invoice-posa_pos_opening_shift",
+  "no_copy": 1,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 1,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Address",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_delivery_charges",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "is_shipping_address",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Delivery Charges",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-24 17:20:00.246026",
+  "module": null,
+  "name": "Address-posa_delivery_charges",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "Delivery Charges",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_default_card_view",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_change_posting_date",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Default Card View",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-03-12 14:03:44.088542",
+  "module": null,
+  "name": "POS Profile-posa_default_card_view",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_is_printed",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 1,
+  "insert_after": "posa_pos_opening_shift",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Printed",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-11-02 02:48:23.877227",
+  "module": null,
+  "name": "Sales Invoice-posa_is_printed",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_default_sales_order",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_default_card_view",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Default Sales Order",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-03-12 14:37:41.556512",
+  "module": null,
+  "name": "POS Profile-posa_default_sales_order",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_col_1",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_default_sales_order",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-30 03:24:09.367037",
+  "module": null,
+  "name": "POS Profile-posa_col_1",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": "",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_user_to_edit_item_discount",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_col_1",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow User to Edit Item Discount",
+  "length": 0,
+  "mandatory_depends_on": "0",
+  "modified": "2020-10-09 16:01:31.410384",
+  "module": null,
+  "name": "POS Profile-posa_allow_user_to_edit_item_discount",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_display_items_in_stock",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_user_to_edit_item_discount",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Hide Unavailable Items",
+  "length": 0,
+  "mandatory_depends_on": "",
+  "modified": "2020-10-09 16:01:31.663626",
+  "module": null,
+  "name": "POS Profile-posa_display_items_in_stock",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_partial_payment",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_display_items_in_stock",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Partial Payment",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-09 23:06:59.598463",
+  "module": null,
+  "name": "POS Profile-posa_allow_partial_payment",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": "posa_allow_partial_payment",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_credit_sale",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_partial_payment",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Credit Sale",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-09 23:06:59.852139",
+  "module": null,
+  "name": "POS Profile-posa_allow_credit_sale",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_return",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_credit_sale",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Return",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-28 01:56:22.038314",
+  "module": null,
+  "name": "POS Profile-posa_allow_return",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_apply_customer_discount",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_return",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Apply Customer Discount",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-04 21:38:33.316557",
+  "module": null,
+  "name": "POS Profile-posa_apply_customer_discount",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "use_cashback",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_apply_customer_discount",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Cashback",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-03-24 04:35:08.517136",
+  "module": null,
+  "name": "POS Profile-use_cashback",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "use_customer_credit",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "use_cashback",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Customer Credit",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-03-24 04:51:50.333452",
+  "module": null,
+  "name": "POS Profile-use_customer_credit",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_hide_closing_shift",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "use_customer_credit",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Hide Close Shift",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-04-15 01:14:57.247333",
+  "module": null,
+  "name": "POS Profile-posa_hide_closing_shift",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_auto_set_batch",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_hide_closing_shift",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Auto Set Batch",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-20 20:25:37.627551",
+  "module": null,
+  "name": "POS Profile-posa_auto_set_batch",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_display_item_code",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_auto_set_batch",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Display Item Code",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-05-17 02:45:24.071753",
+  "module": null,
+  "name": "POS Profile-posa_display_item_code",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_zero_rated_items",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_display_item_code",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Zero Rated Items",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-20 15:09:09.652861",
+  "module": null,
+  "name": "POS Profile-posa_allow_zero_rated_items",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "hide_expected_amount",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_zero_rated_items",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Hide Expected Amount",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-12-15 16:57:46.117639",
+  "module": null,
+  "name": "POS Profile-hide_expected_amount",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_column_break_112",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "hide_expected_amount",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-23 22:48:40.886230",
+  "module": null,
+  "name": "POS Profile-posa_column_break_112",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_sales_order",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_column_break_112",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Create Sales Order",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-22 03:02:27.784096",
+  "module": null,
+  "name": "POS Profile-posa_allow_sales_order",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+    "allow_in_quick_entry": 0,
+    "allow_on_submit": 0,
+    "bold": 0,
+    "collapsible": 0,
+    "collapsible_depends_on": null,
+    "columns": 0,
+    "default": null,
+    "depends_on": null,
+    "description": null,
+    "docstatus": 0,
+    "doctype": "Custom Field",
+    "dt": "POS Profile",
+    "fetch_from": null,
+    "fetch_if_empty": 0,
+    "fieldname": "custom_allow_select_sales_order",
+    "fieldtype": "Check",
+    "hidden": 0,
+    "hide_border": 0,
+    "hide_days": 0,
+    "hide_seconds": 0,
+    "ignore_user_permissions": 0,
+    "ignore_xss_filter": 0,
+    "in_global_search": 0,
+    "in_list_view": 0,
+    "in_preview": 0,
+    "in_standard_filter": 0,
+    "insert_after": "posa_allow_sales_order",
+    "is_system_generated": 0,
+    "is_virtual": 0,
+    "label": "Allow Select Sales Order",
+    "length": 0,
+    "mandatory_depends_on": null,
+    "modified": "2023-11-13 12:16:27.784096",
+    "module": null,
+    "name": "POS Profile-custom_allow_select_sales_order",
+    "no_copy": 0,
+    "non_negative": 0,
+    "options": null,
+    "permlevel": 0,
+    "precision": "",
+    "print_hide": 0,
+    "print_hide_if_no_value": 0,
+    "print_width": null,
+    "read_only": 0,
+    "read_only_depends_on": null,
+    "report_hide": 0,
+    "reqd": 0,
+    "search_index": 0,
+    "translatable": 0,
+    "unique": 0,
+    "width": null
+},
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_referral_section",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "total_monthly_sales",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Referral Code",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:04:22.290849",
+  "module": null,
+  "name": "Company-posa_referral_section",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_show_template_items",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_sales_order",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Show Template Items",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-23 22:48:41.288938",
+  "module": null,
+  "name": "POS Profile-posa_show_template_items",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_auto_referral",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_referral_section",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Auto Create Referral For New Customers",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:07:08.681215",
+  "module": null,
+  "name": "Company-posa_auto_referral",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "posa_show_template_items",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_hide_variants_items",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_show_template_items",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Hide Variants Items",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-24 03:24:52.591942",
+  "module": null,
+  "name": "POS Profile-posa_hide_variants_items",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_additional_notes_section",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "items",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 16:11:59.366893",
+  "module": null,
+  "name": "Sales Order-posa_additional_notes_section",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_column_break_22",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_auto_referral",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:11:04.558635",
+  "module": null,
+  "name": "Company-posa_column_break_22",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_fetch_coupon",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_hide_variants_items",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Auto Fetch Coupon Gifts",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 22:58:10.372543",
+  "module": null,
+  "name": "POS Profile-posa_fetch_coupon",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_notes",
+  "fieldtype": "Small Text",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_additional_notes_section",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 16:11:59.829304",
+  "module": null,
+  "name": "Sales Order-posa_notes",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "posa_auto_referral",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_customer_offer",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_column_break_22",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Final Customer Offer",
+  "length": 0,
+  "mandatory_depends_on": "posa_auto_referral",
+  "modified": "2021-07-29 23:11:04.891539",
+  "module": null,
+  "name": "Company-posa_customer_offer",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Offer",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Customer",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_birthday",
+  "fieldtype": "Date",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "contact_html",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Birthday",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-31 00:12:09.417519",
+  "module": null,
+  "name": "Customer-posa_birthday",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_customer_purchase_order",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_fetch_coupon",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Customer Purchase Order",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-12-16 16:27:32.300240",
+  "module": null,
+  "name": "POS Profile-posa_allow_customer_purchase_order",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "posa_auto_referral",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_primary_offer",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_customer_offer",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Primary Customer Offer",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:11:05.290809",
+  "module": null,
+  "name": "Company-posa_primary_offer",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Offer",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Customer",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_referral_section",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_birthday",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Referral Code",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:23:04.910503",
+  "module": null,
+  "name": "Customer-posa_referral_section",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_print_last_invoice",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_customer_purchase_order",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Print Last Invoice",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-12-16 18:00:40.631156",
+  "module": null,
+  "name": "POS Profile-posa_allow_print_last_invoice",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "",
+  "depends_on": "posa_auto_referral",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Company",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_referral_campaign",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_primary_offer",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Referral Campaign",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:11:05.723688",
+  "module": null,
+  "name": "Company-posa_referral_campaign",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "Campaign",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 1,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Customer",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_referral_code",
+  "fieldtype": "Data",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_referral_section",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Referral Code",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 22:42:57.772021",
+  "module": null,
+  "name": "Customer-posa_referral_code",
+  "no_copy": 1,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_display_additional_notes",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_print_last_invoice",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Display Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-12-19 16:54:32.986600",
+  "module": null,
+  "name": "POS Profile-posa_display_additional_notes",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 1,
+  "allow_on_submit": 0,
+  "bold": 1,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Customer",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_referral_company",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_referral_code",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Referral Company",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-29 23:24:11.207034",
+  "module": null,
+  "name": "Customer-posa_referral_company",
+  "no_copy": 1,
+  "non_negative": 0,
+  "options": "Company",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_write_off_change",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_display_additional_notes",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Write Off Change",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-02-12 04:26:04.003374",
+  "module": null,
+  "name": "POS Profile-posa_allow_write_off_change",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_offers",
+  "fieldtype": "Small Text",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "pricing_rules",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Offers",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-07 01:51:16.390447",
+  "module": null,
+  "name": "Sales Invoice Item-posa_offers",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_new_line",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_write_off_change",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow add New Items on New Line",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-05-17 01:01:52.106645",
+  "module": null,
+  "name": "POS Profile-posa_new_line",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_offer_applied",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_offers",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Offer Applied",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-12 00:12:28.473489",
+  "module": null,
+  "name": "Sales Invoice Item-posa_offer_applied",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_input_qty",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_new_line",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use QTY Input",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-05-17 02:17:13.591004",
+  "module": null,
+  "name": "POS Profile-posa_input_qty",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_is_offer",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 1,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_offer_applied",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Is Offer",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-12 00:14:20.894553",
+  "module": null,
+  "name": "Sales Invoice Item-posa_is_offer",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_print_draft_invoices",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_input_qty",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Print Draft Invoices",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-22 11:51:07.782265",
+  "module": null,
+  "name": "POS Profile-posa_allow_print_draft_invoices",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice Item",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_is_replace",
+  "fieldtype": "Data",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_is_offer",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Is Offer Replace For item Row ID",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-17 18:10:36.233226",
+  "module": null,
+  "name": "Sales Invoice Item-posa_is_replace",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_use_delivery_charges",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_print_draft_invoices",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Delivery Charges",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-25 11:57:17.864203",
+  "module": null,
+  "name": "POS Profile-posa_use_delivery_charges",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_auto_set_delivery_charges",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_use_delivery_charges",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Auto Set Delivery Charges",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-25 11:57:18.367414",
+  "module": null,
+  "name": "POS Profile-posa_auto_set_delivery_charges",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_duplicate_customer_names",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_auto_set_delivery_charges",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Duplicate Customer Names",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-05 15:55:21.190823",
+  "module": null,
+  "name": "POS Profile-posa_allow_duplicate_customer_names",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "pos_awesome_payments",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_duplicate_customer_names",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Awesome Payments",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:25:42.983974",
+  "module": null,
+  "name": "POS Profile-pos_awesome_payments",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_use_pos_awesome_payments",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "pos_awesome_payments",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use POS Awesome Payments",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:25:43.339584",
+  "module": null,
+  "name": "POS Profile-posa_use_pos_awesome_payments",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "column_break_uolvm",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_use_pos_awesome_payments",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": null,
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:29:44.857287",
+  "module": null,
+  "name": "POS Profile-column_break_uolvm",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "1",
+  "depends_on": "posa_use_pos_awesome_payments",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_make_new_payments",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "column_break_uolvm",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Make New Payments",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:28:20.478033",
+  "module": null,
+  "name": "POS Profile-posa_allow_make_new_payments",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "1",
+  "depends_on": "posa_use_pos_awesome_payments",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_reconcile_payments",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_make_new_payments",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Reconcile Payments",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:28:20.897560",
+  "module": null,
+  "name": "POS Profile-posa_allow_reconcile_payments",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "posa_use_pos_awesome_payments",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_mpesa_reconcile_payments",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_reconcile_payments",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Mpesa Reconcile Payments",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-11 23:44:22.343030",
+  "module": null,
+  "name": "POS Profile-posa_allow_mpesa_reconcile_payments",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": "",
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_pos_awesome_advance_settings",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_mpesa_reconcile_payments",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Awesome Advance Settings",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-10-11 15:13:10.899536",
+  "module": null,
+  "name": "POS Profile-posa_pos_awesome_advance_settings",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": "Send invoice to submit after printing",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_allow_submissions_in_background_job",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_pos_awesome_advance_settings",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Allow Submissions in background job",
+  "length": 0,
+  "mandatory_depends_on": "0",
+  "modified": "2020-10-09 16:05:54.332880",
+  "module": null,
+  "name": "POS Profile-posa_allow_submissions_in_background_job",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_search_serial_no",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_allow_submissions_in_background_job",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Search by Serial Number",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-20 20:47:47.966800",
+  "module": null,
+  "name": "POS Profile-posa_search_serial_no",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_search_batch_no",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_search_serial_no",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Search by Batch Number",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-05 23:50:13.126933",
+  "module": null,
+  "name": "POS Profile-posa_search_batch_no",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": "shipping_address_name.posa_delivery_charges",
+  "fetch_if_empty": 1,
+  "fieldname": "posa_delivery_charges",
+  "fieldtype": "Link",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "taxes_and_charges",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Delivery Charges",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-25 11:49:02.312879",
+  "module": null,
+  "name": "Sales Invoice-posa_delivery_charges",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "Delivery Charges",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "1",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_tax_inclusive",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_search_batch_no",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Tax Inclusive",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-09-06 16:33:33.398280",
+  "module": null,
+  "name": "POS Profile-posa_tax_inclusive",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_delivery_charges_rate",
+  "fieldtype": "Currency",
+  "hidden": 1,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_delivery_charges",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Delivery Charges Rate",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2022-07-25 11:49:04.797031",
+  "module": null,
+  "name": "Sales Invoice-posa_delivery_charges_rate",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "currency",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "column_break_dqsba",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_tax_inclusive",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": null,
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-04-24 14:44:48.969896",
+  "module": null,
+  "name": "POS Profile-column_break_dqsba",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "1",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_local_storage",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "column_break_dqsba",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Browser Local Storage",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2020-11-13 22:14:13.683091",
+  "module": null,
+  "name": "POS Profile-posa_local_storage",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "0",
+  "depends_on": null,
+  "description": "Use Redis cache on the server to speedup initial loads of POS Awesome ",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_use_server_cache",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_local_storage",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Server Cache",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-04-24 14:44:49.219453",
+  "module": null,
+  "name": "POS Profile-posa_use_server_cache",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "30",
+  "depends_on": "posa_use_server_cache",
+  "description": "Cache the values for n minutes",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_server_cache_duration",
+  "fieldtype": "Int",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_use_server_cache",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Server Cache Duration",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-04-24 14:44:49.341660",
+  "module": null,
+  "name": "POS Profile-posa_server_cache_duration",
+  "no_copy": 0,
+  "non_negative": 1,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "column_break_anyol",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_server_cache_duration",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": null,
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-05 16:59:17.793139",
+  "module": null,
+  "name": "POS Profile-column_break_anyol",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": "Use Search Limit for Items",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "pose_use_limit_search",
+  "fieldtype": "Check",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "column_break_anyol",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Use Limit Search",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2023-06-05 16:59:18.429778",
+  "module": null,
+  "name": "POS Profile-pose_use_limit_search",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "500",
+  "depends_on": "pose_use_limit_search",
+  "description": "Search Limit for Items\nFor best performance keep this under 1500",
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "POS Profile",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_search_limit",
+  "fieldtype": "Int",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "pose_use_limit_search",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Search Limit Number",
+  "length": 0,
+  "mandatory_depends_on": "pose_use_limit_search",
+  "modified": "2023-06-05 16:59:18.717131",
+  "module": null,
+  "name": "POS Profile-posa_search_limit",
+  "no_copy": 0,
+  "non_negative": 1,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_offers",
+  "fieldtype": "Table",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "pricing_rules",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Offers Detail",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-08-06 15:33:25.550091",
+  "module": null,
+  "name": "Sales Order-posa_offers",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Offer Detail",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Order",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_coupons",
+  "fieldtype": "Table",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_offers",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Coupons Detail",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-08-06 15:32:56.710167",
+  "module": null,
+  "name": "Sales Order-posa_coupons",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Coupon Detail",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_offers",
+  "fieldtype": "Table",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "pricing_rules",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Offers Detail",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-07 01:47:11.410905",
+  "module": null,
+  "name": "Sales Invoice-posa_offers",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Offer Detail",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": "",
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_coupons",
+  "fieldtype": "Table",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_offers",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "POS Coupons Detail",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-07-25 01:18:29.588465",
+  "module": null,
+  "name": "Sales Invoice-posa_coupons",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": "POS Coupon Detail",
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 1,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 1,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_additional_notes_section",
+  "fieldtype": "Section Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "against_income_account",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:22:41.138670",
+  "module": null,
+  "name": "Sales Invoice-posa_additional_notes_section",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_notes",
+  "fieldtype": "Small Text",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_additional_notes_section",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Additional Notes",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:23:30.034080",
+  "module": null,
+  "name": "Sales Invoice-posa_notes",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 1,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_column_break_111",
+  "fieldtype": "Column Break",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_notes",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:34:20.311391",
+  "module": null,
+  "name": "Sales Invoice-posa_column_break_111",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ },
+ {
+  "allow_in_quick_entry": 0,
+  "allow_on_submit": 0,
+  "bold": 0,
+  "collapsible": 0,
+  "collapsible_depends_on": null,
+  "columns": 0,
+  "default": null,
+  "depends_on": null,
+  "description": null,
+  "docstatus": 0,
+  "doctype": "Custom Field",
+  "dt": "Sales Invoice",
+  "fetch_from": null,
+  "fetch_if_empty": 0,
+  "fieldname": "posa_delivery_date",
+  "fieldtype": "Date",
+  "hidden": 0,
+  "hide_border": 0,
+  "hide_days": 0,
+  "hide_seconds": 0,
+  "ignore_user_permissions": 0,
+  "ignore_xss_filter": 0,
+  "in_global_search": 0,
+  "in_list_view": 0,
+  "in_preview": 0,
+  "in_standard_filter": 0,
+  "insert_after": "posa_column_break_111",
+  "is_system_generated": 0,
+  "is_virtual": 0,
+  "label": "Delivery Date",
+  "length": 0,
+  "mandatory_depends_on": null,
+  "modified": "2021-06-21 15:34:20.754955",
+  "module": null,
+  "name": "Sales Invoice-posa_delivery_date",
+  "no_copy": 0,
+  "non_negative": 0,
+  "options": null,
+  "permlevel": 0,
+  "precision": "",
+  "print_hide": 0,
+  "print_hide_if_no_value": 0,
+  "print_width": null,
+  "read_only": 0,
+  "read_only_depends_on": null,
+  "report_hide": 0,
+  "reqd": 0,
+  "search_index": 0,
+  "sort_options": 0,
+  "translatable": 0,
+  "unique": 0,
+  "width": null
+ }
+]
\ No newline at end of file
diff --git a/posawesome/fixtures/property_setter.json b/posawesome/fixtures/property_setter.json
new file mode 100644
index 0000000..39fc1f0
--- /dev/null
+++ b/posawesome/fixtures/property_setter.json
@@ -0,0 +1,18 @@
+[
+ {
+  "default_value": null,
+  "doc_type": "Sales Invoice",
+  "docstatus": 0,
+  "doctype": "Property Setter",
+  "doctype_or_field": "DocField",
+  "field_name": "posa_pos_opening_shift",
+  "is_system_generated": 0,
+  "modified": "2020-10-26 15:35:40.861492",
+  "module": null,
+  "name": "Sales Invoice-posa_pos_opening_shift-no_copy",
+  "property": "no_copy",
+  "property_type": "Check",
+  "row_name": null,
+  "value": "1"
+ }
+]
\ No newline at end of file
diff --git a/posawesome/hooks.py b/posawesome/hooks.py
new file mode 100644
index 0000000..7515839
--- /dev/null
+++ b/posawesome/hooks.py
@@ -0,0 +1,268 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+from . import __version__ as app_version
+
+app_name = "posawesome"
+app_title = "POS Awesome"
+app_publisher = "Youssef Restom"
+app_description = "POS Awesome"
+app_icon = "octicon octicon-file-directory"
+app_color = "grey"
+app_email = "youssef@totrox.com"
+app_license = "GPLv3"
+
+# Includes in <head>
+# ------------------
+
+# include js, css files in header of desk.html
+# app_include_css = "/assets/posawesome/css/posawesome.css"
+# app_include_js = "/assets/posawesome/js/posawesome.js"
+app_include_js = [
+    "/assets/posawesome/node_modules/vuetify/dist/vuetify.js",
+    "posawesome.bundle.js",
+]
+
+# include js, css files in header of web template
+# web_include_css = "/assets/posawesome/css/posawesome.css"
+# web_include_js = "/assets/posawesome/js/posawesome.js"
+
+# include js, css files in header of web form
+# webform_include_js = {"doctype": "public/js/doctype.js"}
+# webform_include_css = {"doctype": "public/css/doctype.css"}
+
+# include js in page
+# page_js = {"page" : "public/js/file.js"}
+
+# include js in doctype views
+doctype_js = {
+    "POS Profile": "posawesome/api/pos_profile.js",
+    "Sales Invoice": "posawesome/api/invoice.js",
+    "Company": "posawesome/api/company.js",
+}
+# doctype_list_js = {"doctype" : "public/js/doctype_list.js"}
+# doctype_tree_js = {"doctype" : "public/js/doctype_tree.js"}
+# doctype_calendar_js = {"doctype" : "public/js/doctype_calendar.js"}
+
+# Home Pages
+# ----------
+
+# application home page (will override Website Settings)
+# home_page = "login"
+
+# website user home page (by Role)
+# role_home_page = {
+# 	"Role": "home_page"
+# }
+
+# Website user home page (by function)
+# get_website_user_home_page = "posawesome.utils.get_home_page"
+
+# Generators
+# ----------
+
+# automatically create page for each record of this doctype
+# website_generators = ["Web Page"]
+
+# Installation
+# ------------
+
+# before_install = "posawesome.install.before_install"
+# after_install = "posawesome.install.after_install"
+# before_uninstall = "posawesome.uninstall.before_uninstall"
+after_uninstall = "posawesome.uninstall.after_uninstall"
+
+# Desk Notifications
+# ------------------
+# See frappe.core.notifications.get_notification_config
+
+# notification_config = "posawesome.notifications.get_notification_config"
+
+# Permissions
+# -----------
+# Permissions evaluated in scripted ways
+
+# permission_query_conditions = {
+# 	"Event": "frappe.desk.doctype.event.event.get_permission_query_conditions",
+# }
+#
+# has_permission = {
+# 	"Event": "frappe.desk.doctype.event.event.has_permission",
+# }
+
+# Document Events
+# ---------------
+# Hook on document methods and events
+
+doc_events = {
+    "Sales Invoice": {
+        "validate": "posawesome.posawesome.api.invoice.validate",
+        "before_submit": "posawesome.posawesome.api.invoice.before_submit",
+        "before_cancel": "posawesome.posawesome.api.invoice.before_cancel",
+    },
+    "Customer": {
+        "validate": "posawesome.posawesome.api.customer.validate",
+        "after_insert": "posawesome.posawesome.api.customer.after_insert",
+    },
+}
+
+# Scheduled Tasks
+# ---------------
+
+# scheduler_events = {
+# 	"all": [
+# 		"posawesome.tasks.all"
+# 	],
+# 	"daily": [
+# 		"posawesome.tasks.daily"
+# 	],
+# 	"hourly": [
+# 		"posawesome.tasks.hourly"
+# 	],
+# 	"weekly": [
+# 		"posawesome.tasks.weekly"
+# 	]
+# 	"monthly": [
+# 		"posawesome.tasks.monthly"
+# 	]
+# }
+
+# Testing
+# -------
+
+# before_tests = "posawesome.install.before_tests"
+
+# Overriding Methods
+# ------------------------------
+#
+# override_whitelisted_methods = {
+# 	"frappe.desk.doctype.event.event.get_events": "posawesome.event.get_events"
+# }
+#
+# each overriding function accepts a `data` argument;
+# generated from the base implementation of the doctype dashboard,
+# along with any modifications made in other Frappe apps
+# override_doctype_dashboards = {
+# 	"Task": "posawesome.task.get_dashboard_data"
+# }
+
+# override_doctype_class = {
+# "doctype": "method",
+# }
+
+# exempt linked doctypes from being automatically cancelled
+#
+# auto_cancel_exempted_doctypes = ["Auto Repeat"]
+
+fixtures = [
+    {
+        "doctype": "Custom Field",
+        "filters": [
+            [
+                "name",
+                "in",
+                (
+                    "Sales Invoice-posa_pos_opening_shift",
+                    "Item Barcode-posa_uom",
+                    "POS Profile-posa_pos_awesome_settings",
+                    "POS Profile-posa_allow_delete",
+                    "POS Profile-posa_allow_user_to_edit_rate",
+                    "POS Profile-posa_allow_user_to_edit_additional_discount",
+                    "POS Profile-posa_allow_user_to_edit_item_discount",
+                    "POS Profile-posa_display_items_in_stock",
+                    "POS Profile-posa_allow_submissions_in_background_job",
+                    "POS Profile-posa_allow_partial_payment",
+                    "POS Profile-posa_allow_credit_sale",
+                    "POS Profile-posa_pos_awesome_advance_settings",
+                    "Batch-posa_batch_price",
+                    "POS Profile-posa_max_discount_allowed",
+                    "POS Profile-posa_allow_return",
+                    "POS Profile-posa_col_1",
+                    "POS Profile-posa_scale_barcode_start",
+                    "Sales Invoice-posa_is_printed",
+                    "POS Profile-posa_local_storage",
+                    "POS Profile-posa_cash_mode_of_payment",
+                    "POS Profile-use_customer_credit",
+                    "POS Profile-use_cashback",
+                    "POS Profile-posa_hide_closing_shift",
+                    "Customer-posa_discount",
+                    "POS Profile-posa_apply_customer_discount",
+                    "Sales Invoice-posa_offers",
+                    "Sales Invoice-posa_coupons",
+                    "Sales Invoice Item-posa_offers",
+                    "Sales Invoice Item-posa_row_id",
+                    "Sales Invoice Item-posa_offer_applied",
+                    "Sales Invoice Item-posa_is_offer",
+                    "Sales Invoice Item-posa_is_replace",
+                    "POS Profile-posa_auto_set_batch",
+                    "POS Profile-posa_search_serial_no",
+                    "Sales Invoice-posa_additional_notes_section",
+                    "Sales Invoice-posa_notes",
+                    "Sales Invoice-posa_column_break_111",
+                    "Sales Invoice-posa_delivery_date",
+                    "Sales Invoice Item-posa_notes",
+                    "Sales Invoice Item-posa_delivery_date",
+                    "Sales Order-posa_additional_notes_section",
+                    "Sales Order-posa_notes",
+                    "Sales Order Item-posa_notes",
+                    "POS Profile-posa_allow_sales_order",
+                    "POS Profile-custom_allow_select_sales_order",
+                    "POS Profile-posa_column_break_112",
+                    "POS Profile-posa_show_template_items",
+                    "POS Profile-posa_hide_variants_items",
+                    "Customer-posa_referral_code",
+                    "POS Profile-posa_fetch_coupon",
+                    "Company-posa_referral_section",
+                    "Company-posa_auto_referral",
+                    "Company-posa_column_break_22",
+                    "Company-posa_customer_offer",
+                    "Company-posa_primary_offer",
+                    "Company-posa_referral_campaign",
+                    "Customer-posa_referral_company",
+                    "Customer-posa_referral_section",
+                    "Customer-posa_birthday",
+                    "Sales Order-posa_offers",
+                    "Sales Order-posa_coupons",
+                    "Sales Order Item-posa_row_id",
+                    "POS Profile-posa_tax_inclusive",
+                    "POS Profile-posa_use_percentage_discount",
+                    "POS Profile-posa_allow_customer_purchase_order",
+                    "POS Profile-posa_allow_print_last_invoice",
+                    "POS Profile-posa_display_additional_notes",
+                    "POS Profile-posa_allow_write_off_change",
+                    "POS Profile-posa_new_line",
+                    "POS Profile-posa_input_qty",
+                    "POS Profile-posa_display_item_code",
+                    "POS Profile-posa_allow_zero_rated_items",
+                    "POS Profile-posa_allow_print_draft_invoices",
+                    "Address-posa_delivery_charges",
+                    "Sales Invoice-posa_delivery_charges",
+                    "Sales Invoice-posa_delivery_charges_rate",
+                    "POS Profile-posa_auto_set_delivery_charges",
+                    "POS Profile-posa_use_delivery_charges",
+                    "POS Profile-hide_expected_amount",
+                    "POS Profile-posa_allow_change_posting_date",
+                    "POS Profile-posa_default_card_view",
+                    "POS Profile-posa_default_sales_order",
+                    "POS Profile-column_break_dqsba",
+                    "POS Profile-posa_use_server_cache",
+                    "POS Profile-posa_server_cache_duration",
+                    "POS Profile-posa_allow_duplicate_customer_names",
+                    "POS Profile-column_break_anyol",
+                    "POS Profile-pose_use_limit_search",
+                    "POS Profile-posa_search_limit",
+                    "POS Profile-posa_search_batch_no",
+                    "POS Profile-pos_awesome_payments",
+                    "POS Profile-posa_use_pos_awesome_payments",
+                    "POS Profile-posa_allow_make_new_payments",
+                    "POS Profile-posa_allow_reconcile_payments",
+                    "POS Profile-column_break_uolvm",
+                    "POS Profile-posa_allow_mpesa_reconcile_payments",
+                ),
+            ]
+        ],
+    },
+    {
+        "doctype": "Property Setter",
+        "filters": [["name", "in", ("Sales Invoice-posa_pos_opening_shift-no_copy")]],
+    },
+]
diff --git a/posawesome/modules.txt b/posawesome/modules.txt
new file mode 100644
index 0000000..c0ce2d7
--- /dev/null
+++ b/posawesome/modules.txt
@@ -0,0 +1 @@
+POSAwesome
\ No newline at end of file
diff --git a/posawesome/patches.txt b/posawesome/patches.txt
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/__init__.py b/posawesome/posawesome/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/api/__init__.py b/posawesome/posawesome/api/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/api/company.js b/posawesome/posawesome/api/company.js
new file mode 100644
index 0000000..8de3e7a
--- /dev/null
+++ b/posawesome/posawesome/api/company.js
@@ -0,0 +1,25 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Company', {
+    setup: function (frm) {
+        frm.set_query("posa_customer_offer", function () {
+            return {
+                filters: {
+                    "company": frm.doc.name,
+                    "coupon_based": 1,
+                    "disable": 0,
+                }
+            };
+        });
+        frm.set_query("posa_primary_offer", function () {
+            return {
+                filters: {
+                    "company": frm.doc.name,
+                    "coupon_based": 1,
+                    "disable": 0,
+                }
+            };
+        });
+    },
+});
\ No newline at end of file
diff --git a/posawesome/posawesome/api/customer.py b/posawesome/posawesome/api/customer.py
new file mode 100644
index 0000000..2646905
--- /dev/null
+++ b/posawesome/posawesome/api/customer.py
@@ -0,0 +1,51 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe
+from frappe import _
+from posawesome.posawesome.doctype.referral_code.referral_code import (
+    create_referral_code,
+)
+
+
+def after_insert(doc, method):
+    create_customer_referral_code(doc)
+    create_gift_coupon(doc)
+
+
+def validate(doc, method):
+    validate_referral_code(doc)
+
+
+def create_customer_referral_code(doc):
+    if doc.posa_referral_company:
+        company = frappe.get_cached_doc("Company", doc.posa_referral_company)
+        if not company.posa_auto_referral:
+            return
+        create_referral_code(
+            doc.posa_referral_company,
+            doc.name,
+            company.posa_customer_offer,
+            company.posa_primary_offer,
+            company.posa_referral_campaign,
+        )
+
+
+def create_gift_coupon(doc):
+    if doc.posa_referral_code:
+        coupon = frappe.new_doc("POS Coupon")
+        coupon.customer = doc.name
+        coupon.referral_code = doc.posa_referral_code
+        coupon.create_coupon_from_referral()
+
+
+def validate_referral_code(doc):
+    referral_code = doc.posa_referral_code
+    exist = None
+    if referral_code:
+        exist = frappe.db.exists("Referral Code", referral_code)
+        if not exist:
+            exist = frappe.db.exists("Referral Code", {"referral_code": referral_code})
+        if not exist:
+            frappe.throw(_("This Referral Code {0} not exists").format(referral_code))
diff --git a/posawesome/posawesome/api/invoice.js b/posawesome/posawesome/api/invoice.js
new file mode 100644
index 0000000..afcbfe7
--- /dev/null
+++ b/posawesome/posawesome/api/invoice.js
@@ -0,0 +1,12 @@
+// Copyright (c) 20201 Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Sales Invoice', {
+    setup: function (frm) {
+        frm.set_query("posa_delivery_charges", function (doc) {
+            return {
+                filters: { 'company': doc.company, 'disabled': 0 }
+            };
+        });
+    },
+});
\ No newline at end of file
diff --git a/posawesome/posawesome/api/invoice.py b/posawesome/posawesome/api/invoice.py
new file mode 100644
index 0000000..6e7ddc1
--- /dev/null
+++ b/posawesome/posawesome/api/invoice.py
@@ -0,0 +1,267 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+
+from __future__ import unicode_literals
+import frappe
+from frappe import _
+from frappe.model.mapper import get_mapped_doc
+from frappe.utils import flt, add_days
+from posawesome.posawesome.doctype.pos_coupon.pos_coupon import update_coupon_code_count
+from posawesome.posawesome.api.posapp import get_company_domain
+from posawesome.posawesome.doctype.delivery_charges.delivery_charges import (
+    get_applicable_delivery_charges,
+)
+
+
+def validate(doc, method):
+    validate_shift(doc)
+    set_patient(doc)
+    auto_set_delivery_charges(doc)
+    calc_delivery_charges(doc)
+
+
+def before_submit(doc, method):
+    add_loyalty_point(doc)
+    create_sales_order(doc)
+    update_coupon(doc, "used")
+
+
+def before_cancel(doc, method):
+    update_coupon(doc, "cancelled")
+
+
+def add_loyalty_point(invoice_doc):
+    for offer in invoice_doc.posa_offers:
+        if offer.offer == "Loyalty Point":
+            original_offer = frappe.get_doc("POS Offer", offer.offer_name)
+            if original_offer.loyalty_points > 0:
+                loyalty_program = frappe.get_value(
+                    "Customer", invoice_doc.customer, "loyalty_program"
+                )
+                if not loyalty_program:
+                    loyalty_program = original_offer.loyalty_program
+                doc = frappe.get_doc(
+                    {
+                        "doctype": "Loyalty Point Entry",
+                        "loyalty_program": loyalty_program,
+                        "loyalty_program_tier": original_offer.name,
+                        "customer": invoice_doc.customer,
+                        "invoice_type": "Sales Invoice",
+                        "invoice": invoice_doc.name,
+                        "loyalty_points": original_offer.loyalty_points,
+                        "expiry_date": add_days(invoice_doc.posting_date, 10000),
+                        "posting_date": invoice_doc.posting_date,
+                        "company": invoice_doc.company,
+                    }
+                )
+                doc.insert(ignore_permissions=True)
+
+
+def create_sales_order(doc):
+    if (
+        doc.posa_pos_opening_shift
+        and doc.pos_profile
+        and doc.is_pos
+        and doc.posa_delivery_date
+        and not doc.update_stock
+        and frappe.get_value("POS Profile", doc.pos_profile, "posa_allow_sales_order")
+    ):
+        sales_order_doc = make_sales_order(doc.name)
+        if sales_order_doc:
+            sales_order_doc.posa_notes = doc.posa_notes
+            sales_order_doc.flags.ignore_permissions = True
+            sales_order_doc.flags.ignore_account_permission = True
+            sales_order_doc.save()
+            sales_order_doc.submit()
+            url = frappe.utils.get_url_to_form(
+                sales_order_doc.doctype, sales_order_doc.name
+            )
+            msgprint = "Sales Order Created at <a href='{0}'>{1}</a>".format(
+                url, sales_order_doc.name
+            )
+            frappe.msgprint(
+                _(msgprint), title="Sales Order Created", indicator="green", alert=True
+            )
+            i = 0
+            for item in sales_order_doc.items:
+                doc.items[i].sales_order = sales_order_doc.name
+                doc.items[i].so_detail = item.name
+                i += 1
+
+
+def make_sales_order(source_name, target_doc=None, ignore_permissions=True):
+    def set_missing_values(source, target):
+        target.ignore_pricing_rule = 1
+        target.flags.ignore_permissions = ignore_permissions
+        target.run_method("set_missing_values")
+        target.run_method("calculate_taxes_and_totals")
+
+    def update_item(obj, target, source_parent):
+        target.stock_qty = flt(obj.qty) * flt(obj.conversion_factor)
+        target.delivery_date = (
+            obj.posa_delivery_date or source_parent.posa_delivery_date
+        )
+
+    doclist = get_mapped_doc(
+        "Sales Invoice",
+        source_name,
+        {
+            "Sales Invoice": {
+                "doctype": "Sales Order",
+            },
+            "Sales Invoice Item": {
+                "doctype": "Sales Order Item",
+                "field_map": {
+                    "cost_center": "cost_center",
+                    "Warehouse": "warehouse",
+                    "delivery_date": "posa_delivery_date",
+                    "posa_notes": "posa_notes",
+                },
+                "postprocess": update_item,
+            },
+            "Sales Taxes and Charges": {
+                "doctype": "Sales Taxes and Charges",
+                "add_if_empty": True,
+            },
+            "Sales Team": {"doctype": "Sales Team", "add_if_empty": True},
+            "Payment Schedule": {"doctype": "Payment Schedule", "add_if_empty": True},
+        },
+        target_doc,
+        set_missing_values,
+        ignore_permissions=ignore_permissions,
+    )
+
+    return doclist
+
+
+def update_coupon(doc, transaction_type):
+    for coupon in doc.posa_coupons:
+        if not coupon.applied:
+            continue
+        update_coupon_code_count(coupon.coupon, transaction_type)
+
+
+def set_patient(doc):
+    domain = get_company_domain(doc.company)
+    if domain != "Healthcare":
+        return
+    patient_list = frappe.get_all(
+        "Patient", filters={"customer": doc.customer}, page_length=1
+    )
+    if len(patient_list) > 0:
+        doc.patient = patient_list[0].name
+
+
+def auto_set_delivery_charges(doc):
+    if not doc.pos_profile:
+        return
+    if not frappe.get_cached_value(
+        "POS Profile", doc.pos_profile, "posa_auto_set_delivery_charges"
+    ):
+        return
+
+    delivery_charges = get_applicable_delivery_charges(
+        doc.company,
+        doc.pos_profile,
+        doc.customer,
+        doc.shipping_address_name,
+        doc.posa_delivery_charges,
+        restrict=True,
+    )
+
+    if doc.posa_delivery_charges:
+        if doc.posa_delivery_charges_rate:
+            return
+        else:
+            if len(delivery_charges) > 0:
+                doc.posa_delivery_charges_rate = delivery_charges[0].rate
+    else:
+        if len(delivery_charges) > 0:
+            doc.posa_delivery_charges = delivery_charges[0].name
+            doc.posa_delivery_charges_rate = delivery_charges[0].rate
+        else:
+            doc.posa_delivery_charges = None
+            doc.posa_delivery_charges_rate = None
+
+
+def calc_delivery_charges(doc):
+    if not doc.pos_profile:
+        return
+
+    old_doc = None
+    calculate_taxes_and_totals = False
+    if not doc.is_new():
+        old_doc = doc.get_doc_before_save()
+        if not doc.posa_delivery_charges and not old_doc.posa_delivery_charges:
+            return
+    else:
+        if not doc.posa_delivery_charges:
+            return
+    if not doc.posa_delivery_charges:
+        doc.posa_delivery_charges_rate = 0
+
+    charges_doc = None
+    if doc.posa_delivery_charges:
+        charges_doc = frappe.get_cached_doc(
+            "Delivery Charges", doc.posa_delivery_charges
+        )
+        doc.posa_delivery_charges_rate = charges_doc.default_rate
+        charges_profile = next(
+            (i for i in charges_doc.profiles if i.pos_profile == doc.pos_profile), None
+        )
+        if charges_profile:
+            doc.posa_delivery_charges_rate = charges_profile.rate
+
+    if old_doc and old_doc.posa_delivery_charges:
+        old_charges = next(
+            (
+                i
+                for i in doc.taxes
+                if i.charge_type == "Actual"
+                and i.description == old_doc.posa_delivery_charges
+            ),
+            None,
+        )
+        if old_charges:
+            doc.taxes.remove(old_charges)
+            calculate_taxes_and_totals = True
+
+    if doc.posa_delivery_charges:
+        doc.append(
+            "taxes",
+            {
+                "charge_type": "Actual",
+                "description": doc.posa_delivery_charges,
+                "tax_amount": doc.posa_delivery_charges_rate,
+                "cost_center": charges_doc.cost_center,
+                "account_head": charges_doc.shipping_account,
+            },
+        )
+        calculate_taxes_and_totals = True
+
+    if calculate_taxes_and_totals:
+        doc.calculate_taxes_and_totals()
+
+
+def validate_shift(doc):
+    if doc.posa_pos_opening_shift and doc.pos_profile and doc.is_pos:
+        # check if shift is open
+        shift = frappe.get_cached_doc("POS Opening Shift", doc.posa_pos_opening_shift)
+        if shift.status != "Open":
+            frappe.throw(_("POS Shift {0} is not open").format(shift.name))
+        # check if shift is for the same profile
+        if shift.pos_profile != doc.pos_profile:
+            frappe.throw(
+                _("POS Opening Shift {0} is not for the same POS Profile").format(
+                    shift.name
+                )
+            )
+        # check if shift is for the same company
+        if shift.company != doc.company:
+            frappe.throw(
+                _("POS Opening Shift {0} is not for the same company").format(
+                    shift.name
+                )
+            )
diff --git a/posawesome/posawesome/api/m_pesa.py b/posawesome/posawesome/api/m_pesa.py
new file mode 100644
index 0000000..66b1dcf
--- /dev/null
+++ b/posawesome/posawesome/api/m_pesa.py
@@ -0,0 +1,112 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe, requests
+from frappe import _
+from requests.auth import HTTPBasicAuth
+import json
+
+
+def get_token(app_key, app_secret, base_url):
+    authenticate_uri = "/oauth/v1/generate?grant_type=client_credentials"
+    authenticate_url = "{0}{1}".format(base_url, authenticate_uri)
+
+    r = requests.get(authenticate_url, auth=HTTPBasicAuth(app_key, app_secret))
+
+    return r.json()["access_token"]
+
+
+@frappe.whitelist(allow_guest=True)
+def confirmation(**kwargs):
+    try:
+        args = __dict(kwargs)
+        doc = frappe.new_doc("Mpesa Payment Register")
+        doc.transactiontype = args.get("TransactionType")
+        doc.transid = args.get("TransID")
+        doc.transtime = args.get("TransTime")
+        doc.transamount = args.get("TransAmount")
+        doc.businessshortcode = args.get("BusinessShortCode")
+        doc.billrefnumber = args.get("BillRefNumber")
+        doc.invoicenumber = args.get("InvoiceNumber")
+        doc.orgaccountbalance = args.get("OrgAccountBalance")
+        doc.thirdpartytransid = args.get("ThirdPartyTransID")
+        doc.msisdn = args.get("MSISDN")
+        doc.firstname = args.get("FirstName")
+        doc.middlename = args.get("MiddleName")
+        doc.lastname = args.get("LastName")
+        doc.insert(ignore_permissions=True)
+        frappe.db.commit()
+        context = {"ResultCode": 0, "ResultDesc": "Accepted"}
+        return dict(context)
+    except Exception as e:
+        frappe.log_error(frappe.get_traceback(), str(e)[:140])
+        context = {"ResultCode": 1, "ResultDesc": "Rejected"}
+        return dict(context)
+
+
+@frappe.whitelist(allow_guest=True)
+def validation(**kwargs):
+    context = {"ResultCode": 0, "ResultDesc": "Accepted"}
+    return dict(context)
+
+
+@frappe.whitelist()
+def get_mpesa_mode_of_payment(company):
+    modes = frappe.get_all(
+        "Mpesa C2B Register URL",
+        filters={"company": company, "register_status": "Success"},
+        fields=["mode_of_payment"],
+    )
+    modes_of_payment = []
+    for mode in modes:
+        if mode.mode_of_payment not in modes_of_payment:
+            modes_of_payment.append(mode.mode_of_payment)
+    return modes_of_payment
+
+
+@frappe.whitelist()
+def get_mpesa_draft_payments(
+    company,
+    mode_of_payment=None,
+    mobile_no=None,
+    full_name=None,
+    payment_methods_list=None,
+):
+    filters = {"company": company, "docstatus": 0}
+    if mode_of_payment:
+        filters["mode_of_payment"] = mode_of_payment
+    if mobile_no:
+        filters["msisdn"] = ["like", f"%{mobile_no}%"]
+    if full_name:
+        filters["full_name"] = ["like", f"%{full_name}%"]
+    if payment_methods_list:
+        filters["mode_of_payment"] = ["in", json.loads(payment_methods_list)]
+
+    payments = frappe.get_all(
+        "Mpesa Payment Register",
+        filters=filters,
+        fields=[
+            "name",
+            "transid",
+            "msisdn as mobile_no",
+            "full_name",
+            "posting_date",
+            "transamount as amount",
+            "currency",
+            "mode_of_payment",
+            "company",
+        ],
+        order_by="posting_date desc",
+    )
+    return payments
+
+
+@frappe.whitelist()
+def submit_mpesa_payment(mpesa_payment, customer):
+    doc = frappe.get_doc("Mpesa Payment Register", mpesa_payment)
+    doc.customer = customer
+    doc.submit_payment = 1
+    doc.submit()
+    doc.reload()
+    return frappe.get_doc("Payment Entry", doc.payment_entry)
diff --git a/posawesome/posawesome/api/payment_entry.py b/posawesome/posawesome/api/payment_entry.py
new file mode 100644
index 0000000..dd54fff
--- /dev/null
+++ b/posawesome/posawesome/api/payment_entry.py
@@ -0,0 +1,429 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+import frappe, erpnext, json
+from frappe import _
+from frappe.utils import nowdate, getdate, flt
+from erpnext.accounts.party import get_party_account
+from erpnext.accounts.utils import get_account_currency
+from erpnext.accounts.doctype.journal_entry.journal_entry import (
+    get_default_bank_cash_account,
+)
+from erpnext.setup.utils import get_exchange_rate
+from erpnext.accounts.doctype.bank_account.bank_account import get_party_bank_account
+from posawesome.posawesome.api.m_pesa import submit_mpesa_payment
+from erpnext.accounts.utils import QueryPaymentLedger, get_outstanding_invoices as _get_outstanding_invoices
+
+
+def create_payment_entry(
+    company,
+    customer,
+    amount,
+    currency,
+    mode_of_payment,
+    reference_date=None,
+    reference_no=None,
+    posting_date=None,
+    cost_center=None,
+    submit=0,
+):
+    # TODO : need to have a better way to handle currency
+    date = nowdate() if not posting_date else posting_date
+    party_type = "Customer"
+    party_account = get_party_account(party_type, customer, company)
+    party_account_currency = get_account_currency(party_account)
+    if party_account_currency != currency:
+        frappe.throw(
+            _(
+                "Currency is not correct, party account currency is {party_account_currency} and transaction currency is {currency}"
+            ).format(party_account_currency=party_account_currency, currency=currency)
+        )
+    payment_type = "Receive"
+
+    bank = get_bank_cash_account(company, mode_of_payment)
+    company_currency = frappe.get_value("Company", company, "default_currency")
+    conversion_rate = get_exchange_rate(currency, company_currency, date, "for_selling")
+    paid_amount, received_amount = set_paid_amount_and_received_amount(
+        party_account_currency, bank, amount, payment_type, None, conversion_rate
+    )
+
+    pe = frappe.new_doc("Payment Entry")
+    pe.payment_type = payment_type
+    pe.company = company
+    pe.cost_center = cost_center or erpnext.get_default_cost_center(company)
+    pe.posting_date = date
+    pe.mode_of_payment = mode_of_payment
+    pe.party_type = party_type
+    pe.party = customer
+
+    pe.paid_from = party_account if payment_type == "Receive" else bank.account
+    pe.paid_to = party_account if payment_type == "Pay" else bank.account
+    pe.paid_from_account_currency = (
+        party_account_currency if payment_type == "Receive" else bank.account_currency
+    )
+    pe.paid_to_account_currency = (
+        party_account_currency if payment_type == "Pay" else bank.account_currency
+    )
+    pe.paid_amount = paid_amount
+    pe.received_amount = received_amount
+    pe.letter_head = frappe.get_value("Company", company, "default_letter_head")
+    pe.reference_date = reference_date
+    pe.reference_no = reference_no
+    if pe.party_type in ["Customer", "Supplier"]:
+        bank_account = get_party_bank_account(pe.party_type, pe.party)
+        pe.set("bank_account", bank_account)
+        pe.set_bank_account_data()
+
+    pe.setup_party_account_field()
+    pe.set_missing_values()
+
+    if party_account and bank:
+        pe.set_amounts()
+    if submit:
+        pe.docstatus = 1
+    pe.insert(ignore_permissions=True)
+    return pe
+
+
+def get_bank_cash_account(company, mode_of_payment, bank_account=None):
+    bank = get_default_bank_cash_account(
+        company, "Bank", mode_of_payment=mode_of_payment, account=bank_account
+    )
+
+    if not bank:
+        bank = get_default_bank_cash_account(
+            company, "Cash", mode_of_payment=mode_of_payment, account=bank_account
+        )
+
+    return bank
+
+
+def set_paid_amount_and_received_amount(
+    party_account_currency,
+    bank,
+    outstanding_amount,
+    payment_type,
+    bank_amount,
+    conversion_rate,
+):
+    paid_amount = received_amount = 0
+    if party_account_currency == bank.account_currency:
+        paid_amount = received_amount = abs(outstanding_amount)
+    elif payment_type == "Receive":
+        paid_amount = abs(outstanding_amount)
+        if bank_amount:
+            received_amount = bank_amount
+        else:
+            received_amount = paid_amount * conversion_rate
+
+    else:
+        received_amount = abs(outstanding_amount)
+        if bank_amount:
+            paid_amount = bank_amount
+        else:
+            # if party account currency and bank currency is different then populate paid amount as well
+            paid_amount = received_amount * conversion_rate
+
+    return paid_amount, received_amount
+
+
+@frappe.whitelist()
+def get_outstanding_invoices(company, currency, customer=None, pos_profile_name=None):
+    if customer:
+        precision = frappe.get_precision("Sales Invoice", "outstanding_amount") or 2
+        outstanding_invoices = _get_outstanding_invoices(
+            party_type="Customer",
+            party=customer,
+            account=get_party_account("Customer", customer, company),
+        )
+        invoices_list = []
+        customer_name = frappe.get_cached_value("Customer", customer, "customer_name")
+        for invoice in outstanding_invoices:
+            if invoice.get("currency") == currency:
+                if pos_profile_name and frappe.get_cached_value(
+                    "Sales Invoice", invoice.get("voucher_no"), "pos_profile"
+                ) != pos_profile_name:
+                    continue
+                outstanding_amount = invoice.outstanding_amount
+                if outstanding_amount > 0.5 / (10**precision):
+                    invoice_dict = {
+                        "name": invoice.get("voucher_no"),
+                        "customer": customer,
+                        "customer_name": customer_name,
+                        "outstanding_amount": invoice.get("outstanding_amount"),
+                        "grand_total": invoice.get("invoice_amount"),
+                        "due_date": invoice.get("due_date"),
+                        "posting_date": invoice.get("posting_date"),
+                        "currency": invoice.get("currency"),
+                        "pos_profile": pos_profile_name,
+
+                    }
+                    invoices_list.append(invoice_dict)
+        return invoices_list
+    else:
+        filters = {
+            "company": company,
+            "outstanding_amount": (">", 0),
+            "docstatus": 1,
+            "is_return": 0,
+            "currency": currency,
+        }
+        if customer:
+            filters.update({"customer": customer})
+        if pos_profile_name:
+            filters.update({"pos_profile": pos_profile_name})
+        invoices = frappe.get_all(
+            "Sales Invoice",
+            filters=filters,
+            fields=[
+                "name",
+                "customer",
+                "customer_name",
+                "outstanding_amount",
+                "grand_total",
+                "due_date",
+                "posting_date",
+                "currency",
+                "pos_profile",
+            ],
+            order_by="due_date asc",
+        )
+        return invoices
+
+
+@frappe.whitelist()
+def get_unallocated_payments(customer, company, currency, mode_of_payment=None):
+    filters = {
+        "party": customer,
+        "company": company,
+        "docstatus": 1,
+        "party_type": "Customer",
+        "payment_type": "Receive",
+        "unallocated_amount": [">", 0],
+        "paid_from_account_currency": currency,
+    }
+    if mode_of_payment:
+        filters.update({"mode_of_payment": mode_of_payment})
+    unallocated_payment = frappe.get_all(
+        "Payment Entry",
+        filters=filters,
+        fields=[
+            "name",
+            "paid_amount",
+            "party_name as customer_name",
+            "received_amount",
+            "posting_date",
+            "unallocated_amount",
+            "mode_of_payment",
+            "paid_from_account_currency as currency",
+        ],
+        order_by="posting_date asc",
+    )
+    return unallocated_payment
+
+
+@frappe.whitelist()
+def process_pos_payment(payload):
+    data = json.loads(payload)
+    data = __dict(data)
+    if not data.pos_profile.get("posa_use_pos_awesome_payments"):
+        frappe.throw(_("POS Awesome Payments is not enabled for this POS Profile"))
+
+    # validate data
+    if not data.customer:
+        frappe.throw(_("Customer is required"))
+    if not data.company:
+        frappe.throw(_("Company is required"))
+    if not data.currency:
+        frappe.throw(_("Currency is required"))
+    if not data.pos_profile_name:
+        frappe.throw(_("POS Profile is required"))
+    if not data.pos_opening_shift_name:
+        frappe.throw(_("POS Opening Shift is required"))
+
+    company = data.company
+    currency = data.currency
+    customer = data.customer
+    pos_opening_shift_name = data.pos_opening_shift_name
+    allow_make_new_payments = data.pos_profile.get("posa_allow_make_new_payments")
+    allow_reconcile_payments = data.pos_profile.get("posa_allow_reconcile_payments")
+    allow_mpesa_reconcile_payments = data.pos_profile.get(
+        "posa_allow_mpesa_reconcile_payments"
+    )
+    today = nowdate()
+
+    new_payments_entry = []
+    all_payments_entry = []
+    errors = []
+    reconcile_doc = None
+
+    # first process mpesa payments
+    if (
+        allow_mpesa_reconcile_payments
+        and len(data.selected_mpesa_payments) > 0
+        and data.total_selected_mpesa_payments > 0
+    ):
+        for mpesa_payment in data.selected_mpesa_payments:
+            try:
+                new_mpesa_payment = submit_mpesa_payment(
+                    mpesa_payment.get("name"), customer
+                )
+                new_payments_entry.append(new_mpesa_payment)
+                all_payments_entry.append(new_mpesa_payment)
+            except Exception as e:
+                errors.append(e)
+
+    # then process the new payments
+    if (
+        allow_make_new_payments
+        and len(data.payment_methods) > 0
+        and data.total_payment_methods > 0
+    ):
+        for payment_method in data.payment_methods:
+            try:
+                if not payment_method.get("amount"):
+                    continue
+                new_payment_entry = create_payment_entry(
+                    company=company,
+                    customer=customer,
+                    currency=currency,
+                    amount=flt(payment_method.get("amount")),
+                    mode_of_payment=payment_method.get("mode_of_payment"),
+                    posting_date=today,
+                    reference_no=pos_opening_shift_name,
+                    reference_date=today,
+                    cost_center=data.pos_profile.get("cost_center"),
+                    submit=1,
+                )
+                new_payments_entry.append(new_payment_entry)
+                all_payments_entry.append(new_payment_entry)
+            except Exception as e:
+                errors.append(e)
+
+    # then then reconcile the new payments and the unallocated payments with the outstanding invoices
+    if len(data.selected_invoices) > 0 and data.total_selected_invoices > 0:
+        if (
+            allow_reconcile_payments
+            and len(data.selected_payments) > 0
+            and data.total_selected_payments > 0
+        ):
+            # add the unallocated payments to the all payments entry
+            for selected_payment in data.selected_payments:
+                all_payments_entry.append(selected_payment)
+
+        if len(all_payments_entry) > 0:
+            # sort the all payments entry by posting date
+            all_payments_entry = sorted(
+                all_payments_entry,
+                key=lambda k: getdate(str(k.get("posting_date"))),
+                reverse=True,
+            )
+            all_invoices_list = sorted(
+                data.selected_invoices,
+                key=lambda k: getdate(k.get("posting_date")),
+                reverse=True,
+            )
+            reconcile_doc = frappe.new_doc("Payment Reconciliation")
+            reconcile_doc.party_type = "Customer"
+            reconcile_doc.party = customer
+            reconcile_doc.company = company
+            reconcile_doc.receivable_payable_account = get_party_account(
+                "Customer", customer, company
+            )
+            reconcile_doc.get_unreconciled_entries()
+            args = {
+                "invoices": [],
+                "payments": [],
+            }
+            for invoice in all_invoices_list:
+                args["invoices"].append(
+                    {
+                        "invoice_type": "Sales Invoice",
+                        "invoice_number": invoice.get("name"),
+                        "invoice_date": invoice.get("posting_date"),
+                        "amount": invoice.get("grand_total"),
+                        "outstanding_amount": invoice.get("outstanding_amount"),
+                        "currency": invoice.get("currency"),
+                        "exchange_rate": 0,
+                    }
+                )
+            for payment in all_payments_entry:
+                args["payments"].append(
+                    {
+                        "reference_type": "Payment Entry",
+                        "reference_name": payment.get("name"),
+                        "posting_date": payment.get("posting_date"),
+                        "amount": payment.get("unallocated_amount"),
+                        "unallocated_amount": payment.get("unallocated_amount"),
+                        "difference_amount": 0,
+                        "currency": payment.get("currency"),
+                        "exchange_rate": 0,
+                    }
+                )
+            reconcile_doc.allocate_entries(args)
+            reconcile_doc.reconcile()
+
+    # then show the results
+    msg = ""
+    if len(new_payments_entry) > 0:
+        msg += "<h4>New Payments</h4>"
+        msg += "<table class='table table-bordered'>"
+        msg += "<thead><tr><th>Payment Entry</th><th>Amount</th></tr></thead>"
+        msg += "<tbody>"
+        for payment_entry in new_payments_entry:
+            msg += "<tr><td>{0}</td><td>{1}</td></tr>".format(
+                payment_entry.get("name"), payment_entry.get("unallocated_amount")
+            )
+        msg += "</tbody>"
+        msg += "</table>"
+    if len(all_payments_entry) > 0 and len(data.selected_invoices) > 0:
+        msg += "<h4>Reconciled Payments</h4>"
+        msg += "<table class='table table-bordered'>"
+        msg += "<thead><tr><th>Payment Entry</th><th>Amount</th></tr></thead>"
+        msg += "<tbody>"
+        for payment_entry in all_payments_entry:
+            msg += "<tr><td>{0}</td><td>{1}</td></tr>".format(
+                payment_entry.get("name"), payment_entry.get("unallocated_amount")
+            )
+        msg += "</tbody>"
+        msg += "</table>"
+    if len(data.selected_invoices) > 0 and data.total_selected_invoices > 0:
+        msg += "<h4>Reconciled Invoices</h4>"
+        msg += "<table class='table table-bordered'>"
+        msg += "<thead><tr><th>Invoice</th><th>Amount</th></tr></thead>"
+        msg += "<tbody>"
+        for invoice in data.selected_invoices:
+            msg += "<tr><td>{0}</td><td>{1}</td></tr>".format(
+                invoice.get("name"), invoice.get("outstanding_amount")
+            )
+        msg += "</tbody>"
+        msg += "</table>"
+    if len(errors) > 0:
+        msg += "<h4>Errors</h4>"
+        msg += "<table class='table table-bordered'>"
+        msg += "<thead><tr><th>Error</th></tr></thead>"
+        msg += "<tbody>"
+        for error in errors:
+            msg += "<tr><td>{0}</td></tr>".format(error)
+        msg += "</tbody>"
+        msg += "</table>"
+    if len(msg) > 0:
+        frappe.msgprint(msg)
+
+    return {
+        "new_payments_entry": new_payments_entry,
+        "all_payments_entry": all_payments_entry,
+        "errors": errors,
+        "reconcile_doc": reconcile_doc,
+    }
+
+
+@frappe.whitelist()
+def get_available_pos_profiles(company, currency):
+    pos_profiles_list = frappe.get_list(
+        "POS Profile",
+        filters={"disabled": 0, "company": company, "currency": currency},
+        page_length=1000,
+        pluck="name",
+    )
+    return pos_profiles_list
diff --git a/posawesome/posawesome/api/pos_profile.js b/posawesome/posawesome/api/pos_profile.js
new file mode 100644
index 0000000..3286ef4
--- /dev/null
+++ b/posawesome/posawesome/api/pos_profile.js
@@ -0,0 +1,12 @@
+// Copyright (c) 20201 Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('POS Profile', {
+    setup: function (frm) {
+        frm.set_query("posa_cash_mode_of_payment", function (doc) {
+            return {
+                filters: { 'type': 'Cash' }
+            };
+        });
+    },
+});
\ No newline at end of file
diff --git a/posawesome/posawesome/api/posapp.py b/posawesome/posawesome/api/posapp.py
new file mode 100644
index 0000000..8c1310b
--- /dev/null
+++ b/posawesome/posawesome/api/posapp.py
@@ -0,0 +1,1836 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import json
+import frappe
+from frappe.utils import nowdate, flt, cstr, getdate
+from frappe import _
+from erpnext.accounts.doctype.sales_invoice.sales_invoice import get_bank_cash_account
+from erpnext.stock.get_item_details import get_item_details
+from erpnext.accounts.doctype.pos_profile.pos_profile import get_item_groups
+from frappe.utils.background_jobs import enqueue
+from erpnext.accounts.party import get_party_bank_account
+from erpnext.stock.doctype.batch.batch import (
+    get_batch_no,
+    get_batch_qty,
+)
+from erpnext.accounts.doctype.payment_request.payment_request import (
+    get_dummy_message,
+    get_existing_payment_request_amount,
+)
+
+from erpnext.selling.doctype.sales_order.sales_order import make_sales_invoice
+from erpnext.accounts.doctype.loyalty_program.loyalty_program import (
+    get_loyalty_program_details_with_points,
+)
+from posawesome.posawesome.doctype.pos_coupon.pos_coupon import check_coupon_code
+from posawesome.posawesome.doctype.delivery_charges.delivery_charges import (
+    get_applicable_delivery_charges as _get_applicable_delivery_charges,
+)
+from frappe.utils.caching import redis_cache
+
+
+@frappe.whitelist()
+def get_opening_dialog_data():
+    data = {}
+    data["companies"] = frappe.get_list("Company", limit_page_length=0, order_by="name")
+    data["pos_profiles_data"] = frappe.get_list(
+        "POS Profile",
+        filters={"disabled": 0},
+        fields=["name", "company", "currency"],
+        limit_page_length=0,
+        order_by="name",
+    )
+
+    pos_profiles_list = []
+    for i in data["pos_profiles_data"]:
+        pos_profiles_list.append(i.name)
+
+    payment_method_table = (
+        "POS Payment Method" if get_version() == 13 else "Sales Invoice Payment"
+    )
+    data["payments_method"] = frappe.get_list(
+        payment_method_table,
+        filters={"parent": ["in", pos_profiles_list]},
+        fields=["*"],
+        limit_page_length=0,
+        order_by="parent",
+        ignore_permissions=True,
+    )
+    # set currency from pos profile
+    for mode in data["payments_method"]:
+        mode["currency"] = frappe.get_cached_value(
+            "POS Profile", mode["parent"], "currency"
+        )
+
+    return data
+
+
+@frappe.whitelist()
+def create_opening_voucher(pos_profile, company, balance_details):
+    balance_details = json.loads(balance_details)
+
+    new_pos_opening = frappe.get_doc(
+        {
+            "doctype": "POS Opening Shift",
+            "period_start_date": frappe.utils.get_datetime(),
+            "posting_date": frappe.utils.getdate(),
+            "user": frappe.session.user,
+            "pos_profile": pos_profile,
+            "company": company,
+            "docstatus": 1,
+        }
+    )
+    new_pos_opening.set("balance_details", balance_details)
+    new_pos_opening.insert(ignore_permissions=True)
+
+    data = {}
+    data["pos_opening_shift"] = new_pos_opening.as_dict()
+    update_opening_shift_data(data, new_pos_opening.pos_profile)
+    return data
+
+
+@frappe.whitelist()
+def check_opening_shift(user):
+    open_vouchers = frappe.db.get_all(
+        "POS Opening Shift",
+        filters={
+            "user": user,
+            "pos_closing_shift": ["in", ["", None]],
+            "docstatus": 1,
+            "status": "Open",
+        },
+        fields=["name", "pos_profile"],
+        order_by="period_start_date desc",
+    )
+    data = ""
+    if len(open_vouchers) > 0:
+        data = {}
+        data["pos_opening_shift"] = frappe.get_doc(
+            "POS Opening Shift", open_vouchers[0]["name"]
+        )
+        update_opening_shift_data(data, open_vouchers[0]["pos_profile"])
+    return data
+
+
+def update_opening_shift_data(data, pos_profile):
+    data["pos_profile"] = frappe.get_doc("POS Profile", pos_profile)
+    data["company"] = frappe.get_doc("Company", data["pos_profile"].company)
+    allow_negative_stock = frappe.get_value(
+        "Stock Settings", None, "allow_negative_stock"
+    )
+    data["stock_settings"] = {}
+    data["stock_settings"].update({"allow_negative_stock": allow_negative_stock})
+
+
+@frappe.whitelist()
+def get_items(
+    pos_profile, price_list=None, item_group="", search_value="", customer=None
+):
+    _pos_profile = json.loads(pos_profile)
+    ttl = _pos_profile.get("posa_server_cache_duration")
+    if ttl:
+        ttl = int(ttl) * 30
+
+    @redis_cache(ttl=ttl or 1800)
+    def __get_items(pos_profile, price_list, item_group, search_value, customer=None):
+        return _get_items(pos_profile, price_list, item_group, search_value, customer)
+
+    def _get_items(pos_profile, price_list, item_group, search_value, customer=None):
+        pos_profile = json.loads(pos_profile)
+        today = nowdate()
+        data = dict()
+        posa_display_items_in_stock = pos_profile.get("posa_display_items_in_stock")
+        search_serial_no = pos_profile.get("posa_search_serial_no")
+        search_batch_no = pos_profile.get("posa_search_batch_no")
+        posa_show_template_items = pos_profile.get("posa_show_template_items")
+        warehouse = pos_profile.get("warehouse")
+        use_limit_search = pos_profile.get("pose_use_limit_search")
+        search_limit = 0
+
+        if not price_list:
+            price_list = pos_profile.get("selling_price_list")
+
+        limit = ""
+
+        condition = ""
+        condition += get_item_group_condition(pos_profile.get("name"))
+
+        if use_limit_search:
+            search_limit = pos_profile.get("posa_search_limit") or 500
+            if search_value:
+                data = search_serial_or_batch_or_barcode_number(
+                    search_value, search_serial_no
+                )
+
+            item_code = data.get("item_code") if data.get("item_code") else search_value
+            serial_no = data.get("serial_no") if data.get("serial_no") else ""
+            batch_no = data.get("batch_no") if data.get("batch_no") else ""
+            barcode = data.get("barcode") if data.get("barcode") else ""
+
+            condition += get_seearch_items_conditions(
+                item_code, serial_no, batch_no, barcode
+            )
+            if item_group:
+                condition += " AND item_group like '%{item_group}%'".format(
+                    item_group=item_group
+                )
+            limit = " LIMIT {search_limit}".format(search_limit=search_limit)
+
+        if not posa_show_template_items:
+            condition += " AND has_variants = 0"
+
+        result = []
+
+        items_data = frappe.db.sql(
+            """
+            SELECT
+                name AS item_code,
+                item_name,
+                description,
+                stock_uom,
+                image,
+                is_stock_item,
+                has_variants,
+                variant_of,
+                item_group,
+                idx as idx,
+                has_batch_no,
+                has_serial_no,
+                max_discount,
+                brand
+            FROM
+                `tabItem`
+            WHERE
+                disabled = 0
+                    AND is_sales_item = 1
+                    AND is_fixed_asset = 0
+                    {condition}
+            ORDER BY
+                item_name asc
+            {limit}
+                """.format(
+                condition=condition, limit=limit
+            ),
+            as_dict=1,
+        )
+
+        if items_data:
+            items = [d.item_code for d in items_data]
+            item_prices_data = frappe.get_all(
+                "Item Price",
+                fields=["item_code", "price_list_rate", "currency", "uom"],
+                filters={
+                    "price_list": price_list,
+                    "item_code": ["in", items],
+                    "currency": pos_profile.get("currency"),
+                    "selling": 1,
+                    "valid_from": ["<=", today],
+                    "customer": ["in", ["", None, customer]],
+                },
+                or_filters=[
+                    ["valid_upto", ">=", today],
+                    ["valid_upto", "in", ["", None]],
+                ],
+                order_by="valid_from ASC, valid_upto DESC",
+            )
+
+            item_prices = {}
+            for d in item_prices_data:
+                item_prices.setdefault(d.item_code, {})
+                item_prices[d.item_code][d.get("uom") or "None"] = d
+
+            for item in items_data:
+                item_code = item.item_code
+                item_price = {}
+                if item_prices.get(item_code):
+                    item_price = (
+                        item_prices.get(item_code).get(item.stock_uom)
+                        or item_prices.get(item_code).get("None")
+                        or {}
+                    )
+                item_barcode = frappe.get_all(
+                    "Item Barcode",
+                    filters={"parent": item_code},
+                    fields=["barcode", "posa_uom"],
+                )
+                batch_no_data = []
+                if search_batch_no:
+                    batch_list = get_batch_qty(warehouse=warehouse, item_code=item_code)
+                    if batch_list:
+                        for batch in batch_list:
+                            if batch.qty > 0 and batch.batch_no:
+                                batch_doc = frappe.get_cached_doc(
+                                    "Batch", batch.batch_no
+                                )
+                                if (
+                                    str(batch_doc.expiry_date) > str(today)
+                                    or batch_doc.expiry_date in ["", None]
+                                ) and batch_doc.disabled == 0:
+                                    batch_no_data.append(
+                                        {
+                                            "batch_no": batch.batch_no,
+                                            "batch_qty": batch.qty,
+                                            "expiry_date": batch_doc.expiry_date,
+                                            "batch_price": batch_doc.posa_batch_price,
+                                            "manufacturing_date": batch_doc.manufacturing_date,
+                                        }
+                                    )
+                serial_no_data = []
+                if search_serial_no:
+                    serial_no_data = frappe.get_all(
+                        "Serial No",
+                        filters={
+                            "item_code": item_code,
+                            "status": "Active",
+                            "warehouse": warehouse,
+                        },
+                        fields=["name as serial_no"],
+                    )
+                item_stock_qty = 0
+                if pos_profile.get("posa_display_items_in_stock") or use_limit_search:
+                    item_stock_qty = get_stock_availability(
+                        item_code, pos_profile.get("warehouse")
+                    )
+                attributes = ""
+                if pos_profile.get("posa_show_template_items") and item.has_variants:
+                    attributes = get_item_attributes(item.item_code)
+                item_attributes = ""
+                if pos_profile.get("posa_show_template_items") and item.variant_of:
+                    item_attributes = frappe.get_all(
+                        "Item Variant Attribute",
+                        fields=["attribute", "attribute_value"],
+                        filters={"parent": item.item_code, "parentfield": "attributes"},
+                    )
+                if posa_display_items_in_stock and (
+                    not item_stock_qty or item_stock_qty < 0
+                ):
+                    pass
+                else:
+                    row = {}
+                    row.update(item)
+                    row.update(
+                        {
+                            "rate": item_price.get("price_list_rate") or 0,
+                            "currency": item_price.get("currency")
+                            or pos_profile.get("currency"),
+                            "item_barcode": item_barcode or [],
+                            "actual_qty": item_stock_qty or 0,
+                            "serial_no_data": serial_no_data or [],
+                            "batch_no_data": batch_no_data or [],
+                            "attributes": attributes or "",
+                            "item_attributes": item_attributes or "",
+                        }
+                    )
+                    result.append(row)
+        return result
+
+    if _pos_profile.get("posa_use_server_cache"):
+        return __get_items(pos_profile, price_list, item_group, search_value, customer)
+    else:
+        return _get_items(pos_profile, price_list, item_group, search_value, customer)
+
+
+def get_item_group_condition(pos_profile):
+    cond = " and 1=1"
+    item_groups = get_item_groups(pos_profile)
+    if item_groups:
+        cond = " and item_group in (%s)" % (", ".join(["%s"] * len(item_groups)))
+
+    return cond % tuple(item_groups)
+
+
+def get_root_of(doctype):
+    """Get root element of a DocType with a tree structure"""
+    result = frappe.db.sql(
+        """select t1.name from `tab{0}` t1 where
+		(select count(*) from `tab{1}` t2 where
+			t2.lft < t1.lft and t2.rgt > t1.rgt) = 0
+		and t1.rgt > t1.lft""".format(
+            doctype, doctype
+        )
+    )
+    return result[0][0] if result else None
+
+
+@frappe.whitelist()
+def get_items_groups():
+    return frappe.db.sql(
+        """
+        select name 
+        from `tabItem Group`
+        where is_group = 0
+        order by name
+        LIMIT 0, 200 """,
+        as_dict=1,
+    )
+
+
+def get_customer_groups(pos_profile):
+    customer_groups = []
+    if pos_profile.get("customer_groups"):
+        # Get items based on the item groups defined in the POS profile
+        for data in pos_profile.get("customer_groups"):
+            customer_groups.extend(
+                [
+                    "%s" % frappe.db.escape(d.get("name"))
+                    for d in get_child_nodes(
+                        "Customer Group", data.get("customer_group")
+                    )
+                ]
+            )
+
+    return list(set(customer_groups))
+
+
+def get_child_nodes(group_type, root):
+    lft, rgt = frappe.db.get_value(group_type, root, ["lft", "rgt"])
+    return frappe.db.sql(
+        """ Select name, lft, rgt from `tab{tab}` where
+			lft >= {lft} and rgt <= {rgt} order by lft""".format(
+            tab=group_type, lft=lft, rgt=rgt
+        ),
+        as_dict=1,
+    )
+
+
+def get_customer_group_condition(pos_profile):
+    cond = "disabled = 0"
+    customer_groups = get_customer_groups(pos_profile)
+    if customer_groups:
+        cond = " customer_group in (%s)" % (", ".join(["%s"] * len(customer_groups)))
+
+    return cond % tuple(customer_groups)
+
+
+@frappe.whitelist()
+def get_customer_names(pos_profile):
+    _pos_profile = json.loads(pos_profile)
+    ttl = _pos_profile.get("posa_server_cache_duration")
+    if ttl:
+        ttl = int(ttl) * 60
+
+    @redis_cache(ttl=ttl or 1800)
+    def __get_customer_names(pos_profile):
+        return _get_customer_names(pos_profile)
+
+    def _get_customer_names(pos_profile):
+        pos_profile = json.loads(pos_profile)
+        condition = ""
+        condition += get_customer_group_condition(pos_profile)
+        customers = frappe.db.sql(
+            """
+            SELECT name, mobile_no, email_id, tax_id, customer_name, primary_address
+            FROM `tabCustomer`
+            WHERE {0}
+            ORDER by name
+            """.format(
+                condition
+            ),
+            as_dict=1,
+        )
+        return customers
+
+    if _pos_profile.get("posa_use_server_cache"):
+        return __get_customer_names(pos_profile)
+    else:
+        return _get_customer_names(pos_profile)
+
+
+@frappe.whitelist()
+def get_sales_person_names():
+    sales_persons = frappe.get_list(
+        "Sales Person",
+        filters={"enabled": 1},
+        fields=["name", "sales_person_name"],
+        limit_page_length=100000,
+    )
+    return sales_persons
+
+
+def add_taxes_from_tax_template(item, parent_doc):
+    accounts_settings = frappe.get_cached_doc("Accounts Settings")
+    add_taxes_from_item_tax_template = (
+        accounts_settings.add_taxes_from_item_tax_template
+    )
+    if item.get("item_tax_template") and add_taxes_from_item_tax_template:
+        item_tax_template = item.get("item_tax_template")
+        taxes_template_details = frappe.get_all(
+            "Item Tax Template Detail",
+            filters={"parent": item_tax_template},
+            fields=["tax_type"],
+        )
+
+        for tax_detail in taxes_template_details:
+            tax_type = tax_detail.get("tax_type")
+
+            found = any(tax.account_head == tax_type for tax in parent_doc.taxes)
+            if not found:
+                tax_row = parent_doc.append("taxes", {})
+                tax_row.update(
+                    {
+                        "description": str(tax_type).split(" - ")[0],
+                        "charge_type": "On Net Total",
+                        "account_head": tax_type,
+                    }
+                )
+
+                if parent_doc.doctype == "Purchase Order":
+                    tax_row.update({"category": "Total", "add_deduct_tax": "Add"})
+                tax_row.db_insert()
+
+
+@frappe.whitelist()
+def update_invoice_from_order(data):
+    data = json.loads(data)
+    invoice_doc = frappe.get_doc("Sales Invoice", data.get("name"))
+    invoice_doc.update(data)
+    invoice_doc.save()
+    return invoice_doc
+
+
+@frappe.whitelist()
+def update_invoice(data):
+    data = json.loads(data)
+    if data.get("name"):
+        invoice_doc = frappe.get_doc("Sales Invoice", data.get("name"))
+        invoice_doc.update(data)
+    else:
+        invoice_doc = frappe.get_doc(data)
+
+    invoice_doc.set_missing_values()
+    invoice_doc.flags.ignore_permissions = True
+    frappe.flags.ignore_account_permission = True
+
+    if invoice_doc.is_return and invoice_doc.return_against:
+        ref_doc = frappe.get_cached_doc(invoice_doc.doctype, invoice_doc.return_against)
+        if not ref_doc.update_stock:
+            invoice_doc.update_stock = 0
+        if len(invoice_doc.payments) == 0:
+            invoice_doc.payments = ref_doc.payments
+        invoice_doc.paid_amount = (
+            invoice_doc.rounded_total or invoice_doc.grand_total or invoice_doc.total
+        )
+        for payment in invoice_doc.payments:
+            if payment.default:
+                payment.amount = invoice_doc.paid_amount
+    allow_zero_rated_items = frappe.get_cached_value(
+        "POS Profile", invoice_doc.pos_profile, "posa_allow_zero_rated_items"
+    )
+    for item in invoice_doc.items:
+        if not item.rate or item.rate == 0:
+            if allow_zero_rated_items:
+                item.price_list_rate = 0.00
+                item.is_free_item = 1
+            else:
+                frappe.throw(
+                    _("Rate cannot be zero for item {0}").format(item.item_code)
+                )
+        else:
+            item.is_free_item = 0
+        add_taxes_from_tax_template(item, invoice_doc)
+
+    if frappe.get_cached_value(
+        "POS Profile", invoice_doc.pos_profile, "posa_tax_inclusive"
+    ):
+        if invoice_doc.get("taxes"):
+            for tax in invoice_doc.taxes:
+                tax.included_in_print_rate = 1
+
+    today_date = getdate()
+    if (
+        invoice_doc.get("posting_date")
+        and getdate(invoice_doc.posting_date) != today_date
+    ):
+        invoice_doc.set_posting_time = 1
+
+    invoice_doc.save()
+    return invoice_doc
+
+
+@frappe.whitelist()
+def submit_invoice(invoice, data):
+    data = json.loads(data)
+    invoice = json.loads(invoice)
+    invoice_doc = frappe.get_doc("Sales Invoice", invoice.get("name"))
+    invoice_doc.update(invoice)
+    if invoice.get("posa_delivery_date"):
+        invoice_doc.update_stock = 0
+    mop_cash_list = [
+        i.mode_of_payment
+        for i in invoice_doc.payments
+        if "cash" in i.mode_of_payment.lower() and i.type == "Cash"
+    ]
+    if len(mop_cash_list) > 0:
+        cash_account = get_bank_cash_account(mop_cash_list[0], invoice_doc.company)
+    else:
+        cash_account = {
+            "account": frappe.get_value(
+                "Company", invoice_doc.company, "default_cash_account"
+            )
+        }
+
+    # creating advance payment
+    if data.get("credit_change"):
+        advance_payment_entry = frappe.get_doc(
+            {
+                "doctype": "Payment Entry",
+                "mode_of_payment": "Cash",
+                "paid_to": cash_account["account"],
+                "payment_type": "Receive",
+                "party_type": "Customer",
+                "party": invoice_doc.get("customer"),
+                "paid_amount": invoice_doc.get("credit_change"),
+                "received_amount": invoice_doc.get("credit_change"),
+                "company": invoice_doc.get("company"),
+            }
+        )
+
+        advance_payment_entry.flags.ignore_permissions = True
+        frappe.flags.ignore_account_permission = True
+        advance_payment_entry.save()
+        advance_payment_entry.submit()
+
+    # calculating cash
+    total_cash = 0
+    if data.get("redeemed_customer_credit"):
+        total_cash = invoice_doc.total - float(data.get("redeemed_customer_credit"))
+
+    is_payment_entry = 0
+    if data.get("redeemed_customer_credit"):
+        for row in data.get("customer_credit_dict"):
+            if row["type"] == "Advance" and row["credit_to_redeem"]:
+                advance = frappe.get_doc("Payment Entry", row["credit_origin"])
+
+                advance_payment = {
+                    "reference_type": "Payment Entry",
+                    "reference_name": advance.name,
+                    "remarks": advance.remarks,
+                    "advance_amount": advance.unallocated_amount,
+                    "allocated_amount": row["credit_to_redeem"],
+                }
+
+                invoice_doc.append("advances", advance_payment)
+                invoice_doc.is_pos = 0
+                is_payment_entry = 1
+
+    payments = invoice_doc.payments
+
+    if frappe.get_value("POS Profile", invoice_doc.pos_profile, "posa_auto_set_batch"):
+        set_batch_nos(invoice_doc, "warehouse", throw=True)
+    set_batch_nos_for_bundels(invoice_doc, "warehouse", throw=True)
+    invoice_doc.cost_center = frappe.get_value("POS Profile", invoice_doc.pos_profile, "cost_center")
+    invoice_doc.flags.ignore_permissions = True
+    frappe.flags.ignore_account_permission = True
+    invoice_doc.posa_is_printed = 1
+    invoice_doc.save()
+
+    if data.get("due_date"):
+        frappe.db.set_value(
+            "Sales Invoice",
+            invoice_doc.name,
+            "due_date",
+            data.get("due_date"),
+            update_modified=False,
+        )
+
+    if frappe.get_value(
+        "POS Profile",
+        invoice_doc.pos_profile,
+        "posa_allow_submissions_in_background_job",
+    ):
+        invoices_list = frappe.get_all(
+            "Sales Invoice",
+            filters={
+                "posa_pos_opening_shift": invoice_doc.posa_pos_opening_shift,
+                "docstatus": 0,
+                "posa_is_printed": 1,
+            },
+        )
+        for invoice in invoices_list:
+            enqueue(
+                method=submit_in_background_job,
+                queue="short",
+                timeout=1000,
+                is_async=True,
+                kwargs={
+                    "invoice": invoice.name,
+                    "data": data,
+                    "is_payment_entry": is_payment_entry,
+                    "total_cash": total_cash,
+                    "cash_account": cash_account,
+                    "payments": payments,
+                },
+            )
+    else:
+        invoice_doc.submit()
+        redeeming_customer_credit(
+            invoice_doc, data, is_payment_entry, total_cash, cash_account, payments
+        )
+
+    return {"name": invoice_doc.name, "status": invoice_doc.docstatus}
+
+
+def set_batch_nos_for_bundels(doc, warehouse_field, throw=False):
+    """Automatically select `batch_no` for outgoing items in item table"""
+    for d in doc.packed_items:
+        qty = d.get("stock_qty") or d.get("transfer_qty") or d.get("qty") or 0
+        has_batch_no = frappe.db.get_value("Item", d.item_code, "has_batch_no")
+        warehouse = d.get(warehouse_field, None)
+        if has_batch_no and warehouse and qty > 0:
+            if not d.batch_no:
+                d.batch_no = get_batch_no(
+                    d.item_code, warehouse, qty, throw, d.serial_no
+                )
+            else:
+                batch_qty = get_batch_qty(batch_no=d.batch_no, warehouse=warehouse)
+                if flt(batch_qty, d.precision("qty")) < flt(qty, d.precision("qty")):
+                    frappe.throw(
+                        _(
+                            "Row #{0}: The batch {1} has only {2} qty. Please select another batch which has {3} qty available or split the row into multiple rows, to deliver/issue from multiple batches"
+                        ).format(d.idx, d.batch_no, batch_qty, qty)
+                    )
+
+def set_batch_nos(doc, warehouse_field, throw=False, child_table="items"):
+    """Automatically select `batch_no` for outgoing items in item table"""
+    for d in doc.get(child_table):
+        qty = d.get("stock_qty") or d.get("transfer_qty") or d.get("qty") or 0
+        warehouse = d.get(warehouse_field, None)
+        if warehouse and qty > 0 and frappe.db.get_value("Item", d.item_code, "has_batch_no"):
+            if not d.batch_no:
+                d.batch_no = get_batch_no(d.item_code, warehouse, qty, throw, d.serial_no)
+            else:
+                batch_qty = get_batch_qty(batch_no=d.batch_no, warehouse=warehouse)
+                if flt(batch_qty, d.precision("qty")) < flt(qty, d.precision("qty")):
+                    frappe.throw(
+                        _(
+                            "Row #{0}: The batch {1} has only {2} qty. Please select another batch which has {3} qty available or split the row into multiple rows, to deliver/issue from multiple batches"
+                        ).format(d.idx, d.batch_no, batch_qty, qty)
+                    )
+
+
+def redeeming_customer_credit(
+    invoice_doc, data, is_payment_entry, total_cash, cash_account, payments
+):
+    # redeeming customer credit with journal voucher
+    today = nowdate()
+    if data.get("redeemed_customer_credit"):
+        cost_center = frappe.get_value(
+            "POS Profile", invoice_doc.pos_profile, "cost_center"
+        )
+        if not cost_center:
+            cost_center = frappe.get_value(
+                "Company", invoice_doc.company, "cost_center"
+            )
+        if not cost_center:
+            frappe.throw(
+                _("Cost Center is not set in pos profile {}").format(
+                    invoice_doc.pos_profile
+                )
+            )
+        for row in data.get("customer_credit_dict"):
+            if row["type"] == "Invoice" and row["credit_to_redeem"]:
+                outstanding_invoice = frappe.get_doc(
+                    "Sales Invoice", row["credit_origin"]
+                )
+
+                jv_doc = frappe.get_doc(
+                    {
+                        "doctype": "Journal Entry",
+                        "voucher_type": "Journal Entry",
+                        "posting_date": today,
+                        "company": invoice_doc.company,
+                    }
+                )
+
+                jv_debit_entry = {
+                    "account": outstanding_invoice.debit_to,
+                    "party_type": "Customer",
+                    "party": invoice_doc.customer,
+                    "reference_type": "Sales Invoice",
+                    "reference_name": outstanding_invoice.name,
+                    "debit_in_account_currency": row["credit_to_redeem"],
+                    "cost_center": cost_center,
+                }
+
+                jv_credit_entry = {
+                    "account": invoice_doc.debit_to,
+                    "party_type": "Customer",
+                    "party": invoice_doc.customer,
+                    "reference_type": "Sales Invoice",
+                    "reference_name": invoice_doc.name,
+                    "credit_in_account_currency": row["credit_to_redeem"],
+                    "cost_center": cost_center,
+                }
+
+                jv_doc.append("accounts", jv_debit_entry)
+                jv_doc.append("accounts", jv_credit_entry)
+
+                jv_doc.flags.ignore_permissions = True
+                frappe.flags.ignore_account_permission = True
+                jv_doc.set_missing_values()
+                jv_doc.save()
+                jv_doc.submit()
+
+    if is_payment_entry and total_cash > 0:
+        for payment in payments:
+            if not payment.amount:
+                continue
+            payment_entry_doc = frappe.get_doc(
+                {
+                    "doctype": "Payment Entry",
+                    "posting_date": today,
+                    "payment_type": "Receive",
+                    "party_type": "Customer",
+                    "party": invoice_doc.customer,
+                    "paid_amount": payment.amount,
+                    "received_amount": payment.amount,
+                    "paid_from": invoice_doc.debit_to,
+                    "paid_to": payment.account,
+                    "company": invoice_doc.company,
+                    "mode_of_payment": payment.mode_of_payment,
+                    "reference_no": invoice_doc.posa_pos_opening_shift,
+                    "reference_date": today,
+                }
+            )
+
+            payment_reference = {
+                "allocated_amount": payment.amount,
+                "due_date": data.get("due_date"),
+                "reference_doctype": "Sales Invoice",
+                "reference_name": invoice_doc.name,
+            }
+
+            payment_entry_doc.append("references", payment_reference)
+            payment_entry_doc.flags.ignore_permissions = True
+            frappe.flags.ignore_account_permission = True
+            payment_entry_doc.save()
+            payment_entry_doc.submit()
+
+
+def submit_in_background_job(kwargs):
+    invoice = kwargs.get("invoice")
+    invoice_doc = kwargs.get("invoice_doc")
+    data = kwargs.get("data")
+    is_payment_entry = kwargs.get("is_payment_entry")
+    total_cash = kwargs.get("total_cash")
+    cash_account = kwargs.get("cash_account")
+    payments = kwargs.get("payments")
+
+    invoice_doc = frappe.get_doc("Sales Invoice", invoice)
+    invoice_doc.submit()
+    redeeming_customer_credit(
+        invoice_doc, data, is_payment_entry, total_cash, cash_account, payments
+    )
+
+
+@frappe.whitelist()
+def get_available_credit(customer, company):
+    total_credit = []
+
+    outstanding_invoices = frappe.get_all(
+        "Sales Invoice",
+        {
+            "outstanding_amount": ["<", 0],
+            "docstatus": 1,
+            "is_return": 0,
+            "customer": customer,
+            "company": company,
+        },
+        ["name", "outstanding_amount"],
+    )
+
+    for row in outstanding_invoices:
+        outstanding_amount = -(row.outstanding_amount)
+        row = {
+            "type": "Invoice",
+            "credit_origin": row.name,
+            "total_credit": outstanding_amount,
+            "credit_to_redeem": 0,
+        }
+
+        total_credit.append(row)
+
+    advances = frappe.get_all(
+        "Payment Entry",
+        {
+            "unallocated_amount": [">", 0],
+            "party_type": "Customer",
+            "party": customer,
+            "company": company,
+            "docstatus": 1,
+        },
+        ["name", "unallocated_amount"],
+    )
+
+    for row in advances:
+        row = {
+            "type": "Advance",
+            "credit_origin": row.name,
+            "total_credit": row.unallocated_amount,
+            "credit_to_redeem": 0,
+        }
+
+        total_credit.append(row)
+
+    return total_credit
+
+
+@frappe.whitelist()
+def get_draft_invoices(pos_opening_shift):
+    invoices_list = frappe.get_list(
+        "Sales Invoice",
+        filters={
+            "posa_pos_opening_shift": pos_opening_shift,
+            "docstatus": 0,
+            "posa_is_printed": 0,
+        },
+        fields=["name"],
+        limit_page_length=0,
+        order_by="modified desc",
+    )
+    data = []
+    for invoice in invoices_list:
+        data.append(frappe.get_cached_doc("Sales Invoice", invoice["name"]))
+    return data
+
+
+@frappe.whitelist()
+def delete_invoice(invoice):
+    if frappe.get_value("Sales Invoice", invoice, "posa_is_printed"):
+        frappe.throw(_("This invoice {0} cannot be deleted").format(invoice))
+    frappe.delete_doc("Sales Invoice", invoice, force=1)
+    return _("Invoice {0} Deleted").format(invoice)
+
+
+@frappe.whitelist()
+def get_items_details(pos_profile, items_data):
+    _pos_profile = json.loads(pos_profile)
+    ttl = _pos_profile.get("posa_server_cache_duration")
+    if ttl:
+        ttl = int(ttl) * 60
+
+    @redis_cache(ttl=ttl or 1800)
+    def __get_items_details(pos_profile, items_data):
+        return _get_items_details(pos_profile, items_data)
+
+    def _get_items_details(pos_profile, items_data):
+        today = nowdate()
+        pos_profile = json.loads(pos_profile)
+        items_data = json.loads(items_data)
+        warehouse = pos_profile.get("warehouse")
+        result = []
+
+        if len(items_data) > 0:
+            for item in items_data:
+                item_code = item.get("item_code")
+                item_stock_qty = get_stock_availability(item_code, warehouse)
+                has_batch_no = frappe.get_value(
+                    "Item", item_code, "has_batch_no"
+                )
+                has_serial_no = frappe.get_value(
+                    "Item", item_code, "has_serial_no"
+                )
+
+                uoms = frappe.get_all(
+                    "UOM Conversion Detail",
+                    filters={"parent": item_code},
+                    fields=["uom", "conversion_factor"],
+                )
+
+                serial_no_data = frappe.get_all(
+                    "Serial No",
+                    filters={
+                        "item_code": item_code,
+                        "status": "Active",
+                        "warehouse": warehouse,
+                    },
+                    fields=["name as serial_no"],
+                )
+
+                batch_no_data = []
+
+                batch_list = get_batch_qty(warehouse=warehouse, item_code=item_code)
+
+                if batch_list:
+                    for batch in batch_list:
+                        if batch.qty > 0 and batch.batch_no:
+                            batch_doc = frappe.get_cached_doc("Batch", batch.batch_no)
+                            if (
+                                str(batch_doc.expiry_date) > str(today)
+                                or batch_doc.expiry_date in ["", None]
+                            ) and batch_doc.disabled == 0:
+                                batch_no_data.append(
+                                    {
+                                        "batch_no": batch.batch_no,
+                                        "batch_qty": batch.qty,
+                                        "expiry_date": batch_doc.expiry_date,
+                                        "batch_price": batch_doc.posa_batch_price,
+                                        "manufacturing_date": batch_doc.manufacturing_date,
+                                    }
+                                )
+
+                row = {}
+                row.update(item)
+                row.update(
+                    {
+                        "item_uoms": uoms or [],
+                        "serial_no_data": serial_no_data or [],
+                        "batch_no_data": batch_no_data or [],
+                        "actual_qty": item_stock_qty or 0,
+                        "has_batch_no": has_batch_no,
+                        "has_serial_no": has_serial_no,
+                    }
+                )
+
+                result.append(row)
+
+        return result
+
+    if _pos_profile.get("posa_use_server_cache"):
+        return __get_items_details(pos_profile, items_data)
+    else:
+        return _get_items_details(pos_profile, items_data)
+
+
+@frappe.whitelist()
+def get_item_detail(item, doc=None, warehouse=None, price_list=None):
+    item = json.loads(item)
+    today = nowdate()
+    item_code = item.get("item_code")
+    batch_no_data = []
+    if warehouse and item.get("has_batch_no"):
+        batch_list = get_batch_qty(warehouse=warehouse, item_code=item_code)
+        if batch_list:
+            for batch in batch_list:
+                if batch.qty > 0 and batch.batch_no:
+                    batch_doc = frappe.get_cached_doc("Batch", batch.batch_no)
+                    if (
+                        str(batch_doc.expiry_date) > str(today)
+                        or batch_doc.expiry_date in ["", None]
+                    ) and batch_doc.disabled == 0:
+                        batch_no_data.append(
+                            {
+                                "batch_no": batch.batch_no,
+                                "batch_qty": batch.qty,
+                                "expiry_date": batch_doc.expiry_date,
+                                "batch_price": batch_doc.posa_batch_price,
+                                "manufacturing_date": batch_doc.manufacturing_date,
+                            }
+                        )
+
+    item["selling_price_list"] = price_list
+
+    max_discount = frappe.get_value("Item", item_code, "max_discount")
+    res = get_item_details(
+        item,
+        doc,
+        overwrite_warehouse=False,
+    )
+    if item.get("is_stock_item") and warehouse:
+        res["actual_qty"] = get_stock_availability(item_code, warehouse)
+    res["max_discount"] = max_discount
+    res["batch_no_data"] = batch_no_data
+    return res
+
+
+def get_stock_availability(item_code, warehouse):
+    actual_qty = (
+        frappe.db.get_value(
+            "Stock Ledger Entry",
+            filters={
+                "item_code": item_code,
+                "warehouse": warehouse,
+                "is_cancelled": 0,
+            },
+            fieldname="qty_after_transaction",
+            order_by="posting_date desc, posting_time desc, creation desc",
+        )
+        or 0.0
+    )
+    return actual_qty
+
+
+@frappe.whitelist()
+def create_customer(
+    customer_id,
+    customer_name,
+    company,
+    pos_profile_doc,
+    tax_id=None,
+    mobile_no=None,
+    email_id=None,
+    referral_code=None,
+    birthday=None,
+    customer_group=None,
+    territory=None,
+    customer_type=None,
+    gender=None,
+    method="create",
+):
+    pos_profile = json.loads(pos_profile_doc)
+    if method == "create":
+        is_exist = frappe.db.exists("Customer", {"customer_name": customer_name})
+        if pos_profile.get("posa_allow_duplicate_customer_names") or not is_exist:
+            customer = frappe.get_doc(
+                {
+                    "doctype": "Customer",
+                    "customer_name": customer_name,
+                    "posa_referral_company": company,
+                    "tax_id": tax_id,
+                    "mobile_no": mobile_no,
+                    "email_id": email_id,
+                    "posa_referral_code": referral_code,
+                    "posa_birthday": birthday,
+                    "customer_type": customer_type,
+                    "gender": gender,
+                }
+            )
+            if customer_group:
+                customer.customer_group = customer_group
+            else:
+                customer.customer_group = "All Customer Groups"
+            if territory:
+                customer.territory = territory
+            else:
+                customer.territory = "All Territories"
+            customer.save()
+            return customer
+        else:
+            frappe.throw(_("Customer already exists"))
+
+    elif method == "update":
+        customer_doc = frappe.get_doc("Customer", customer_id)
+        customer_doc.customer_name = customer_name
+        customer_doc.posa_referral_company = company
+        customer_doc.tax_id = tax_id
+        customer_doc.posa_referral_code = referral_code
+        customer_doc.posa_birthday = birthday
+        customer_doc.customer_type = customer_type
+        customer_doc.territory = territory
+        customer_doc.customer_group = customer_group
+        customer_doc.gender = gender
+        customer_doc.save()
+        if mobile_no != customer_doc.mobile_no:
+            set_customer_info(customer_doc.name, "mobile_no", mobile_no)
+        if email_id != customer_doc.email_id:
+            set_customer_info(customer_doc.name, "email_id", email_id)
+        return customer_doc
+
+
+@frappe.whitelist()
+def get_items_from_barcode(selling_price_list, currency, barcode):
+    search_item = frappe.get_all(
+        "Item Barcode",
+        filters={"barcode": barcode},
+        fields=["parent", "barcode", "posa_uom"],
+    )
+    if len(search_item) == 0:
+        return ""
+    item_code = search_item[0].parent
+    item_list = frappe.get_all(
+        "Item",
+        filters={"name": item_code},
+        fields=[
+            "name",
+            "item_name",
+            "description",
+            "stock_uom",
+            "image",
+            "is_stock_item",
+            "has_variants",
+            "variant_of",
+            "item_group",
+            "has_batch_no",
+            "has_serial_no",
+        ],
+    )
+
+    if item_list[0]:
+        item = item_list[0]
+        filters = {"price_list": selling_price_list, "item_code": item_code}
+        prices_with_uom = frappe.db.count(
+            "Item Price",
+            filters={
+                "price_list": selling_price_list,
+                "item_code": item_code,
+                "uom": item.stock_uom,
+            },
+        )
+
+        if prices_with_uom > 0:
+            filters["uom"] = item.stock_uom
+        else:
+            filters["uom"] = ["in", ["", None, item.stock_uom]]
+
+        item_prices_data = frappe.get_all(
+            "Item Price",
+            fields=["item_code", "price_list_rate", "currency"],
+            filters=filters,
+        )
+
+        item_price = 0
+        if len(item_prices_data):
+            item_price = item_prices_data[0].get("price_list_rate")
+            currency = item_prices_data[0].get("currency")
+
+        item.update(
+            {
+                "rate": item_price,
+                "currency": currency,
+                "item_code": item_code,
+                "barcode": barcode,
+                "actual_qty": 0,
+                "item_barcode": search_item,
+            }
+        )
+        return item
+
+
+@frappe.whitelist()
+def set_customer_info(customer, fieldname, value=""):
+    if fieldname == "loyalty_program":
+        frappe.db.set_value("Customer", customer, "loyalty_program", value)
+
+    contact = (
+        frappe.get_cached_value("Customer", customer, "customer_primary_contact") or ""
+    )
+
+    if contact:
+        contact_doc = frappe.get_doc("Contact", contact)
+        if fieldname == "email_id":
+            contact_doc.set("email_ids", [{"email_id": value, "is_primary": 1}])
+            frappe.db.set_value("Customer", customer, "email_id", value)
+        elif fieldname == "mobile_no":
+            contact_doc.set("phone_nos", [{"phone": value, "is_primary_mobile_no": 1}])
+            frappe.db.set_value("Customer", customer, "mobile_no", value)
+        contact_doc.save()
+
+    else:
+        contact_doc = frappe.new_doc("Contact")
+        contact_doc.first_name = customer
+        contact_doc.is_primary_contact = 1
+        contact_doc.is_billing_contact = 1
+        if fieldname == "mobile_no":
+            contact_doc.add_phone(value, is_primary_mobile_no=1, is_primary_phone=1)
+
+        if fieldname == "email_id":
+            contact_doc.add_email(value, is_primary=1)
+
+        contact_doc.append("links", {"link_doctype": "Customer", "link_name": customer})
+
+        contact_doc.flags.ignore_mandatory = True
+        contact_doc.save()
+        frappe.set_value(
+            "Customer", customer, "customer_primary_contact", contact_doc.name
+        )
+
+
+@frappe.whitelist()
+def search_invoices_for_return(invoice_name, company):
+    invoices_list = frappe.get_list(
+        "Sales Invoice",
+        filters={
+            "name": ["like", f"%{invoice_name}%"],
+            "company": company,
+            "docstatus": 1,
+            "is_return": 0,
+        },
+        fields=["name"],
+        limit_page_length=0,
+        order_by="customer",
+    )
+    data = []
+    is_returned = frappe.get_all(
+        "Sales Invoice",
+        filters={"return_against": invoice_name, "docstatus": 1},
+        fields=["name"],
+        order_by="customer",
+    )
+    if len(is_returned):
+        return data
+    for invoice in invoices_list:
+        data.append(frappe.get_doc("Sales Invoice", invoice["name"]))
+    return data
+
+
+@frappe.whitelist()
+def search_orders(company, currency, order_name=None):
+    filters = {
+        "billing_status": ["in", ["Not Billed", "Partly Billed"]],
+        "docstatus": 1,
+        "company": company,
+        "currency": currency,
+    }
+    if order_name:
+        filters["name"] = ["like", f"%{order_name}%"]
+    orders_list = frappe.get_list(
+        "Sales Order",
+        filters=filters,
+        fields=["name"],
+        limit_page_length=0,
+        order_by="customer",
+    )
+    data = []
+    for order in orders_list:
+        data.append(frappe.get_doc("Sales Order", order["name"]))
+    return data
+
+
+def get_version():
+    branch_name = get_app_branch("erpnext")
+    if "12" in branch_name:
+        return 12
+    elif "13" in branch_name:
+        return 13
+    else:
+        return 13
+
+
+def get_app_branch(app):
+    """Returns branch of an app"""
+    import subprocess
+
+    try:
+        branch = subprocess.check_output(
+            "cd ../apps/{0} && git rev-parse --abbrev-ref HEAD".format(app), shell=True
+        )
+        branch = branch.decode("utf-8")
+        branch = branch.strip()
+        return branch
+    except Exception:
+        return ""
+
+
+@frappe.whitelist()
+def get_offers(profile):
+    pos_profile = frappe.get_doc("POS Profile", profile)
+    company = pos_profile.company
+    warehouse = pos_profile.warehouse
+    date = nowdate()
+
+    values = {
+        "company": company,
+        "pos_profile": profile,
+        "warehouse": warehouse,
+        "valid_from": date,
+        "valid_upto": date,
+    }
+    data = frappe.db.sql(
+        """
+        SELECT *
+        FROM `tabPOS Offer`
+        WHERE 
+        disable = 0 AND
+        company = %(company)s AND
+        (pos_profile is NULL OR pos_profile  = '' OR  pos_profile = %(pos_profile)s) AND
+        (warehouse is NULL OR warehouse  = '' OR  warehouse = %(warehouse)s) AND
+        (valid_from is NULL OR valid_from  = '' OR  valid_from <= %(valid_from)s) AND
+        (valid_upto is NULL OR valid_from  = '' OR  valid_upto >= %(valid_upto)s)
+    """,
+        values=values,
+        as_dict=1,
+    )
+    return data
+
+
+@frappe.whitelist()
+def get_customer_addresses(customer):
+    return frappe.db.sql(
+        """
+        SELECT 
+            address.name,
+            address.address_line1,
+            address.address_line2,
+            address.address_title,
+            address.city,
+            address.state,
+            address.country,
+            address.address_type
+        FROM `tabAddress` as address
+        INNER JOIN `tabDynamic Link` AS link
+				ON address.name = link.parent
+        WHERE link.link_doctype = 'Customer'
+            AND link.link_name = '{0}'
+            AND address.disabled = 0
+        ORDER BY address.name
+        """.format(
+            customer
+        ),
+        as_dict=1,
+    )
+
+
+@frappe.whitelist()
+def make_address(args):
+    args = json.loads(args)
+    address = frappe.get_doc(
+        {
+            "doctype": "Address",
+            "address_title": args.get("name"),
+            "address_line1": args.get("address_line1"),
+            "address_line2": args.get("address_line2"),
+            "city": args.get("city"),
+            "state": args.get("state"),
+            "pincode": args.get("pincode"),
+            "country": args.get("country"),
+            "address_type": "Shipping",
+            "links": [
+                {"link_doctype": args.get("doctype"), "link_name": args.get("customer")}
+            ],
+        }
+    ).insert()
+
+    return address
+
+
+def build_item_cache(item_code):
+    parent_item_code = item_code
+
+    attributes = [
+        a.attribute
+        for a in frappe.db.get_all(
+            "Item Variant Attribute",
+            {"parent": parent_item_code},
+            ["attribute"],
+            order_by="idx asc",
+        )
+    ]
+
+    item_variants_data = frappe.db.get_all(
+        "Item Variant Attribute",
+        {"variant_of": parent_item_code},
+        ["parent", "attribute", "attribute_value"],
+        order_by="name",
+        as_list=1,
+    )
+
+    disabled_items = set([i.name for i in frappe.db.get_all("Item", {"disabled": 1})])
+
+    attribute_value_item_map = __dict({})
+    item_attribute_value_map = __dict({})
+
+    item_variants_data = [r for r in item_variants_data if r[0] not in disabled_items]
+    for row in item_variants_data:
+        item_code, attribute, attribute_value = row
+        # (attr, value) => [item1, item2]
+        attribute_value_item_map.setdefault((attribute, attribute_value), []).append(
+            item_code
+        )
+        # item => {attr1: value1, attr2: value2}
+        item_attribute_value_map.setdefault(item_code, {})[attribute] = attribute_value
+
+    optional_attributes = set()
+    for item_code, attr_dict in item_attribute_value_map.items():
+        for attribute in attributes:
+            if attribute not in attr_dict:
+                optional_attributes.add(attribute)
+
+    frappe.cache().hset(
+        "attribute_value_item_map", parent_item_code, attribute_value_item_map
+    )
+    frappe.cache().hset(
+        "item_attribute_value_map", parent_item_code, item_attribute_value_map
+    )
+    frappe.cache().hset("item_variants_data", parent_item_code, item_variants_data)
+    frappe.cache().hset("optional_attributes", parent_item_code, optional_attributes)
+
+
+def get_item_optional_attributes(item_code):
+    val = frappe.cache().hget("optional_attributes", item_code)
+
+    if not val:
+        build_item_cache(item_code)
+
+    return frappe.cache().hget("optional_attributes", item_code)
+
+
+@frappe.whitelist()
+def get_item_attributes(item_code):
+    attributes = frappe.db.get_all(
+        "Item Variant Attribute",
+        fields=["attribute"],
+        filters={"parenttype": "Item", "parent": item_code},
+        order_by="idx asc",
+    )
+
+    optional_attributes = get_item_optional_attributes(item_code)
+
+    for a in attributes:
+        values = frappe.db.get_all(
+            "Item Attribute Value",
+            fields=["attribute_value", "abbr"],
+            filters={"parenttype": "Item Attribute", "parent": a.attribute},
+            order_by="idx asc",
+        )
+        a.values = values
+        if a.attribute in optional_attributes:
+            a.optional = True
+
+    return attributes
+
+
+@frappe.whitelist()
+def create_payment_request(doc):
+    doc = json.loads(doc)
+    for pay in doc.get("payments"):
+        if pay.get("type") == "Phone":
+            if pay.get("amount") <= 0:
+                frappe.throw(_("Payment amount cannot be less than or equal to 0"))
+
+            if not doc.get("contact_mobile"):
+                frappe.throw(_("Please enter the phone number first"))
+
+            pay_req = get_existing_payment_request(doc, pay)
+            if not pay_req:
+                pay_req = get_new_payment_request(doc, pay)
+                pay_req.submit()
+            else:
+                pay_req.request_phone_payment()
+
+            return pay_req
+
+
+def get_new_payment_request(doc, mop):
+    payment_gateway_account = frappe.db.get_value(
+        "Payment Gateway Account",
+        {
+            "payment_account": mop.get("account"),
+        },
+        ["name"],
+    )
+
+    args = {
+        "dt": "Sales Invoice",
+        "dn": doc.get("name"),
+        "recipient_id": doc.get("contact_mobile"),
+        "mode_of_payment": mop.get("mode_of_payment"),
+        "payment_gateway_account": payment_gateway_account,
+        "payment_request_type": "Inward",
+        "party_type": "Customer",
+        "party": doc.get("customer"),
+        "return_doc": True,
+    }
+    return make_payment_request(**args)
+
+
+def get_payment_gateway_account(args):
+    return frappe.db.get_value(
+        "Payment Gateway Account",
+        args,
+        ["name", "payment_gateway", "payment_account", "message"],
+        as_dict=1,
+    )
+
+
+def get_existing_payment_request(doc, pay):
+    payment_gateway_account = frappe.db.get_value(
+        "Payment Gateway Account",
+        {
+            "payment_account": pay.get("account"),
+        },
+        ["name"],
+    )
+
+    args = {
+        "doctype": "Payment Request",
+        "reference_doctype": "Sales Invoice",
+        "reference_name": doc.get("name"),
+        "payment_gateway_account": payment_gateway_account,
+        "email_to": doc.get("contact_mobile"),
+    }
+    pr = frappe.db.exists(args)
+    if pr:
+        return frappe.get_doc("Payment Request", pr)
+
+
+def make_payment_request(**args):
+    """Make payment request"""
+
+    args = __dict(args)
+
+    ref_doc = frappe.get_doc(args.dt, args.dn)
+    gateway_account = get_payment_gateway_account(args.get("payment_gateway_account"))
+    if not gateway_account:
+        frappe.throw(_("Payment Gateway Account not found"))
+
+    grand_total = get_amount(ref_doc, gateway_account.get("payment_account"))
+    if args.loyalty_points and args.dt == "Sales Order":
+        from erpnext.accounts.doctype.loyalty_program.loyalty_program import (
+            validate_loyalty_points,
+        )
+
+        loyalty_amount = validate_loyalty_points(ref_doc, int(args.loyalty_points))
+        frappe.db.set_value(
+            "Sales Order",
+            args.dn,
+            "loyalty_points",
+            int(args.loyalty_points),
+            update_modified=False,
+        )
+        frappe.db.set_value(
+            "Sales Order",
+            args.dn,
+            "loyalty_amount",
+            loyalty_amount,
+            update_modified=False,
+        )
+        grand_total = grand_total - loyalty_amount
+
+    bank_account = (
+        get_party_bank_account(args.get("party_type"), args.get("party"))
+        if args.get("party_type")
+        else ""
+    )
+
+    existing_payment_request = None
+    if args.order_type == "Shopping Cart":
+        existing_payment_request = frappe.db.get_value(
+            "Payment Request",
+            {
+                "reference_doctype": args.dt,
+                "reference_name": args.dn,
+                "docstatus": ("!=", 2),
+            },
+        )
+
+    if existing_payment_request:
+        frappe.db.set_value(
+            "Payment Request",
+            existing_payment_request,
+            "grand_total",
+            grand_total,
+            update_modified=False,
+        )
+        pr = frappe.get_doc("Payment Request", existing_payment_request)
+    else:
+        if args.order_type != "Shopping Cart":
+            existing_payment_request_amount = get_existing_payment_request_amount(
+                args.dt, args.dn
+            )
+
+            if existing_payment_request_amount:
+                grand_total -= existing_payment_request_amount
+
+        pr = frappe.new_doc("Payment Request")
+        pr.update(
+            {
+                "payment_gateway_account": gateway_account.get("name"),
+                "payment_gateway": gateway_account.get("payment_gateway"),
+                "payment_account": gateway_account.get("payment_account"),
+                "payment_channel": gateway_account.get("payment_channel"),
+                "payment_request_type": args.get("payment_request_type"),
+                "currency": ref_doc.currency,
+                "grand_total": grand_total,
+                "mode_of_payment": args.mode_of_payment,
+                "email_to": args.recipient_id or ref_doc.owner,
+                "subject": _("Payment Request for {0}").format(args.dn),
+                "message": gateway_account.get("message") or get_dummy_message(ref_doc),
+                "reference_doctype": args.dt,
+                "reference_name": args.dn,
+                "party_type": args.get("party_type") or "Customer",
+                "party": args.get("party") or ref_doc.get("customer"),
+                "bank_account": bank_account,
+            }
+        )
+
+        if args.order_type == "Shopping Cart" or args.mute_email:
+            pr.flags.mute_email = True
+
+        pr.insert(ignore_permissions=True)
+        if args.submit_doc:
+            pr.submit()
+
+    if args.order_type == "Shopping Cart":
+        frappe.db.commit()
+        frappe.local.response["type"] = "redirect"
+        frappe.local.response["location"] = pr.get_payment_url()
+
+    if args.return_doc:
+        return pr
+
+    return pr.as_dict()
+
+
+def get_amount(ref_doc, payment_account=None):
+    """get amount based on doctype"""
+    grand_total = 0
+    for pay in ref_doc.payments:
+        if pay.type == "Phone" and pay.account == payment_account:
+            grand_total = pay.amount
+            break
+
+    if grand_total > 0:
+        return grand_total
+
+    else:
+        frappe.throw(
+            _("Payment Entry is already created or payment account is not matched")
+        )
+
+
+@frappe.whitelist()
+def get_pos_coupon(coupon, customer, company):
+    res = check_coupon_code(coupon, customer, company)
+    return res
+
+
+@frappe.whitelist()
+def get_active_gift_coupons(customer, company):
+    coupons = []
+    coupons_data = frappe.get_all(
+        "POS Coupon",
+        filters={
+            "company": company,
+            "coupon_type": "Gift Card",
+            "customer": customer,
+            "used": 0,
+        },
+        fields=["coupon_code"],
+    )
+    if len(coupons_data):
+        coupons = [i.coupon_code for i in coupons_data]
+    return coupons
+
+
+@frappe.whitelist()
+def get_customer_info(customer):
+    customer = frappe.get_doc("Customer", customer)
+
+    res = {"loyalty_points": None, "conversion_factor": None}
+
+    res["email_id"] = customer.email_id
+    res["mobile_no"] = customer.mobile_no
+    res["image"] = customer.image
+    res["loyalty_program"] = customer.loyalty_program
+    res["customer_price_list"] = customer.default_price_list
+    res["customer_group"] = customer.customer_group
+    res["customer_type"] = customer.customer_type
+    res["territory"] = customer.territory
+    res["birthday"] = customer.posa_birthday
+    res["gender"] = customer.gender
+    res["tax_id"] = customer.tax_id
+    res["posa_discount"] = customer.posa_discount
+    res["name"] = customer.name
+    res["customer_name"] = customer.customer_name
+    res["customer_group_price_list"] = frappe.get_value(
+        "Customer Group", customer.customer_group, "default_price_list"
+    )
+
+    if customer.loyalty_program:
+        lp_details = get_loyalty_program_details_with_points(
+            customer.name,
+            customer.loyalty_program,
+            silent=True,
+            include_expired_entry=False,
+        )
+        res["loyalty_points"] = lp_details.get("loyalty_points")
+        res["conversion_factor"] = lp_details.get("conversion_factor")
+
+    return res
+
+
+def get_company_domain(company):
+    return frappe.get_cached_value("Company", cstr(company), "domain")
+
+
+@frappe.whitelist()
+def get_applicable_delivery_charges(
+    company, pos_profile, customer, shipping_address_name=None
+):
+    return _get_applicable_delivery_charges(
+        company, pos_profile, customer, shipping_address_name
+    )
+
+
+def auto_create_items():
+    # create 20000 items
+    for i in range(20000):
+        item_code = "AUTO-ITEM-{}".format(i)
+        item = frappe.get_doc(
+            {
+                "doctype": "Item",
+                "item_code": item_code,
+                "item_name": item_code,
+                "description": item_code,
+                "item_group": "Auto Items",
+                "is_stock_item": 0,
+                "stock_uom": "Nos",
+                "is_sales_item": 1,
+                "is_purchase_item": 0,
+                "is_fixed_asset": 0,
+                "is_sub_contracted_item": 0,
+                "is_pro_applicable": 0,
+                "is_manufactured_item": 0,
+                "is_service_item": 0,
+                "is_non_stock_item": 0,
+                "is_batch_item": 0,
+                "is_table_item": 0,
+                "is_variant_item": 0,
+                "is_stock_item": 1,
+                "opening_stock": 1000,
+                "valuation_rate": 50 + i,
+                "standard_rate": 100 + i,
+            }
+        )
+        print("Creating Item: {}".format(item_code))
+        item.insert(ignore_permissions=True)
+        frappe.db.commit()
+
+
+@frappe.whitelist()
+def search_serial_or_batch_or_barcode_number(search_value, search_serial_no):
+    # search barcode no
+    barcode_data = frappe.db.get_value(
+        "Item Barcode",
+        {"barcode": search_value},
+        ["barcode", "parent as item_code"],
+        as_dict=True,
+    )
+    if barcode_data:
+        return barcode_data
+    # search serial no
+    if search_serial_no:
+        serial_no_data = frappe.db.get_value(
+            "Serial No", search_value, ["name as serial_no", "item_code"], as_dict=True
+        )
+        if serial_no_data:
+            return serial_no_data
+    # search batch no
+    batch_no_data = frappe.db.get_value(
+        "Batch", search_value, ["name as batch_no", "item as item_code"], as_dict=True
+    )
+    if batch_no_data:
+        return batch_no_data
+    return {}
+
+
+def get_seearch_items_conditions(item_code, serial_no, batch_no, barcode):
+    if serial_no or batch_no or barcode:
+        return " and name = {0}".format(frappe.db.escape(item_code))
+    return """ and (name like {item_code} or item_name like {item_code})""".format(
+        item_code=frappe.db.escape("%" + item_code + "%")
+    )
+
+
+@frappe.whitelist()
+def create_sales_invoice_from_order(sales_order):
+    sales_invoice = make_sales_invoice(sales_order, ignore_permissions=True)
+    sales_invoice.save()
+    return sales_invoice
+
+
+@frappe.whitelist()
+def delete_sales_invoice(sales_invoice):
+    frappe.delete_doc("Sales Invoice", sales_invoice)
+
+
+@frappe.whitelist()
+def get_sales_invoice_child_table(sales_invoice, sales_invoice_item):
+    parent_doc = frappe.get_doc("Sales Invoice", sales_invoice)
+    child_doc = frappe.get_doc(
+        "Sales Invoice Item", {"parent": parent_doc.name, "name": sales_invoice_item}
+    )
+    return child_doc
diff --git a/posawesome/posawesome/api/status_updater.py b/posawesome/posawesome/api/status_updater.py
new file mode 100644
index 0000000..c266218
--- /dev/null
+++ b/posawesome/posawesome/api/status_updater.py
@@ -0,0 +1,59 @@
+## -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe
+from frappe.utils import comma_or, nowdate, getdate
+from frappe import _
+from frappe.model.document import Document
+
+class OverAllowanceError(frappe.ValidationError): pass
+
+def validate_status(status, options):
+	if status not in options:
+		frappe.throw(_("Status must be one of {0}").format(comma_or(options)))
+
+status_map = {
+	"POS Opening Shift": [
+		["Draft", None],
+		["Open", "eval:self.docstatus == 1 and not self.pos_closing_shift"],
+		["Closed", "eval:self.docstatus == 1 and self.pos_closing_shift"],
+		["Cancelled", "eval:self.docstatus == 2"],
+	]
+}
+
+class StatusUpdater(Document):
+
+	def set_status(self, update=False, status=None, update_modified=True):
+		if self.is_new():
+			if self.get('amended_from'):
+				self.status = 'Draft'
+			return
+
+		if self.doctype in status_map:
+			_status = self.status
+			if status and update:
+				self.db_set("status", status)
+
+			sl = status_map[self.doctype][:]
+			sl.reverse()
+			for s in sl:
+				if not s[1]:
+					self.status = s[0]
+					break
+				elif s[1].startswith("eval:"):
+					if frappe.safe_eval(s[1][5:], None, { "self": self.as_dict(), "getdate": getdate,
+							"nowdate": nowdate, "get_value": frappe.db.get_value }):
+						self.status = s[0]
+						break
+				elif getattr(self, s[1])():
+					self.status = s[0]
+					break
+
+			if self.status != _status and self.status not in ("Cancelled", "Partially Ordered",
+																"Ordered", "Issued", "Transferred"):
+				self.add_comment("Label", _(self.status))
+
+			if update:
+				self.db_set('status', self.status, update_modified = update_modified)
diff --git a/posawesome/posawesome/api/taxes.py b/posawesome/posawesome/api/taxes.py
new file mode 100644
index 0000000..59409c0
--- /dev/null
+++ b/posawesome/posawesome/api/taxes.py
@@ -0,0 +1,24 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2023, Youssef Restom and contributors
+# For license information, please see license.txt
+
+
+from __future__ import unicode_literals
+
+# import frappe
+from frappe.utils import flt
+from erpnext.controllers.taxes_and_totals import calculate_taxes_and_totals
+from erpnext.accounts.doctype.sales_invoice.sales_invoice import SalesInvoice
+
+
+class custom_calculate_taxes_and_totals(calculate_taxes_and_totals):
+    def _get_tax_rate(self, tax, item_tax_map):
+        if tax.account_head in item_tax_map:
+            return flt(item_tax_map.get(tax.account_head), self.doc.precision("rate", tax))
+        else:
+            return 0
+
+
+class customSalesInvoice(SalesInvoice):
+    def calculate_taxes_and_totals(object):
+        return custom_calculate_taxes_and_totals(object)
diff --git a/posawesome/posawesome/doctype/__init__.py b/posawesome/posawesome/doctype/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/delivery_charges/__init__.py b/posawesome/posawesome/doctype/delivery_charges/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/delivery_charges/delivery_charges.js b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.js
new file mode 100644
index 0000000..0aa3c29
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.js
@@ -0,0 +1,22 @@
+// Copyright (c) 2022, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Delivery Charges', {
+	setup: function (frm) {
+		frm.set_query("shipping_account", function (doc) {
+			return {
+				filters: { 'company': doc.company }
+			};
+		});
+		frm.set_query("cost_center", function (doc) {
+			return {
+				filters: { 'company': doc.company }
+			};
+		});
+		frm.set_query("pos_profile", "profiles", function (doc) {
+			return {
+				filters: { 'company': doc.company }
+			};
+		});
+	},
+});
diff --git a/posawesome/posawesome/doctype/delivery_charges/delivery_charges.json b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.json
new file mode 100644
index 0000000..f02616a
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.json
@@ -0,0 +1,112 @@
+{
+ "actions": [],
+ "allow_rename": 1,
+ "autoname": "field:label",
+ "creation": "2022-07-23 14:23:06.194196",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "label",
+  "company",
+  "default_rate",
+  "disabled",
+  "column_break_3",
+  "shipping_account",
+  "cost_center",
+  "apply_for_pos_profile_section",
+  "profiles",
+  "profiles_list"
+ ],
+ "fields": [
+  {
+   "default": "0",
+   "fieldname": "disabled",
+   "fieldtype": "Check",
+   "label": "Disabled"
+  },
+  {
+   "fieldname": "column_break_3",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "default_rate",
+   "fieldtype": "Currency",
+   "label": "Default Rate",
+   "non_negative": 1,
+   "options": "currency",
+   "reqd": 1
+  },
+  {
+   "fieldname": "shipping_account",
+   "fieldtype": "Link",
+   "label": "Shipping Account",
+   "options": "Account",
+   "reqd": 1
+  },
+  {
+   "fieldname": "cost_center",
+   "fieldtype": "Link",
+   "label": "Cost Center",
+   "options": "Cost Center",
+   "reqd": 1
+  },
+  {
+   "fieldname": "label",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "label": "Label",
+   "reqd": 1,
+   "unique": 1
+  },
+  {
+   "fieldname": "apply_for_pos_profile_section",
+   "fieldtype": "Section Break",
+   "label": "Apply For POS Profiles"
+  },
+  {
+   "fieldname": "profiles",
+   "fieldtype": "Table",
+   "label": "POS Profiles",
+   "options": "Delivery Charges POS Profile"
+  },
+  {
+   "fieldname": "profiles_list",
+   "fieldtype": "Code",
+   "hidden": 1,
+   "label": "Profiles List",
+   "read_only": 1
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "links": [],
+ "modified": "2022-07-25 15:38:25.771590",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Delivery Charges",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  }
+ ],
+ "sort_field": "modified",
+ "sort_order": "DESC"
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/delivery_charges/delivery_charges.py b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.py
new file mode 100644
index 0000000..5ff1444
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges/delivery_charges.py
@@ -0,0 +1,100 @@
+# Copyright (c) 2022, Youssef Restom and contributors
+# For license information, please see license.txt
+
+import frappe
+from frappe import _
+import json
+from frappe.model.document import Document
+
+
+class DeliveryCharges(Document):
+    def validate(self):
+        if not self.default_rate or self.default_rate <= 0:
+            frappe.throw(_("Default Rate is required"))
+        self.validate_profiles()
+
+    def validate_profiles(self):
+        profiles = []
+        for row in self.profiles:
+            if row.pos_profile not in profiles:
+                profiles.append(row.pos_profile)
+            else:
+                frappe.throw("Duplicate POS Profile in Delivery Charges")
+        self.set_profiles_list(profiles)
+
+    def set_profiles_list(self, profiles_list):
+        if len(profiles_list) > 0:
+            self.profiles_list = json.dumps(profiles_list)
+        else:
+            self.profiles_list = None
+
+
+def get_applicable_delivery_charges(
+    company,
+    pos_profile=None,
+    customer=None,
+    address=None,
+    delivery_charges=None,
+    restrict=False,
+):
+    charges = []
+    address_list = []
+    delivery_charges_list = []
+    if address:
+        address_list.append(address)
+    if customer:
+        address_list.extend(
+            frappe.get_all(
+                "Dynamic Link",
+                filters={
+                    "link_doctype": "Customer",
+                    "link_name": customer,
+                    "parentfield": "links",
+                    "parenttype": "Address",
+                },
+                pluck="parent",
+            )
+        )
+    for address in address_list:
+        address_charges = frappe.get_cached_value(
+            "Address", address, "posa_delivery_charges"
+        )
+        if address_charges:
+            delivery_charges_list.append(address_charges)
+
+    delivery_charges_filters = {"disabled": 0, "company": company}
+    if delivery_charges:
+        delivery_charges_list.append(delivery_charges)
+
+    if len(delivery_charges_list) > 0:
+        delivery_charges_filters["name"] = ["in", delivery_charges_list]
+    if restrict:
+        delivery_charges_filters["profiles_list"] = ["not in", ["", None]]
+
+    delivery_charges_items = frappe.get_all(
+        "Delivery Charges",
+        filters=delivery_charges_filters,
+        fields=["*"],
+    )
+    delivery_charges_list = [i.name for i in delivery_charges_items]
+
+    delivery_profiels_filters = {"parent": ("in", delivery_charges_list)}
+    if pos_profile:
+        delivery_profiels_filters["pos_profile"] = pos_profile
+    delivery_profiels = frappe.get_all(
+        "Delivery Charges POS Profile",
+        filters=delivery_profiels_filters,
+        fields=["*"],
+    )
+    for charge in delivery_charges_items:
+        profile = next((i for i in delivery_profiels if i.parent == charge.name), None)
+        if profile:
+            charge.rate = profile.rate
+            charges.append(charge)
+        else:
+            if not restrict:
+                if not charge.profiles_list:
+                    charge.rate = charge.default_rate
+                    charges.append(charge)
+
+    return charges
diff --git a/posawesome/posawesome/doctype/delivery_charges/test_delivery_charges.py b/posawesome/posawesome/doctype/delivery_charges/test_delivery_charges.py
new file mode 100644
index 0000000..04fc346
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges/test_delivery_charges.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2022, Youssef Restom and Contributors
+# See license.txt
+
+# import frappe
+import unittest
+
+class TestDeliveryCharges(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/delivery_charges_pos_profile/__init__.py b/posawesome/posawesome/doctype/delivery_charges_pos_profile/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.json b/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.json
new file mode 100644
index 0000000..bb4acd2
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.json
@@ -0,0 +1,40 @@
+{
+ "actions": [],
+ "allow_rename": 1,
+ "creation": "2022-07-23 15:06:07.819645",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "pos_profile",
+  "rate"
+ ],
+ "fields": [
+  {
+   "fieldname": "pos_profile",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "POS Profile",
+   "options": "POS Profile",
+   "reqd": 1
+  },
+  {
+   "fieldname": "rate",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Rate",
+   "options": "currency"
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "istable": 1,
+ "links": [],
+ "modified": "2022-07-24 16:29:28.981655",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Delivery Charges POS Profile",
+ "owner": "Administrator",
+ "permissions": [],
+ "sort_field": "modified",
+ "sort_order": "DESC"
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.py b/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.py
new file mode 100644
index 0000000..92b7da3
--- /dev/null
+++ b/posawesome/posawesome/doctype/delivery_charges_pos_profile/delivery_charges_pos_profile.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2022, Youssef Restom and contributors
+# For license information, please see license.txt
+
+# import frappe
+from frappe.model.document import Document
+
+class DeliveryChargesPOSProfile(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/mpesa_c2b_register_url/__init__.py b/posawesome/posawesome/doctype/mpesa_c2b_register_url/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.js b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.js
new file mode 100644
index 0000000..5d2918f
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.js
@@ -0,0 +1,8 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Mpesa C2B Register URL', {
+	// refresh: function(frm) {
+
+	// }
+});
diff --git a/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.json b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.json
new file mode 100644
index 0000000..e801df0
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.json
@@ -0,0 +1,130 @@
+{
+ "actions": [],
+ "autoname": "field:mpesa_settings",
+ "creation": "2021-11-10 03:59:38.274817",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "mpesa_settings",
+  "till_number",
+  "business_shortcode",
+  "column_break_4",
+  "company",
+  "mode_of_payment",
+  "register_status"
+ ],
+ "fields": [
+  {
+   "fieldname": "mpesa_settings",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Mpesa Settings",
+   "options": "Mpesa Settings",
+   "reqd": 1,
+   "unique": 1
+  },
+  {
+   "fetch_from": "mpesa_settings.till_number",
+   "fieldname": "till_number",
+   "fieldtype": "Data",
+   "label": "Till Number",
+   "read_only": 1
+  },
+  {
+   "fetch_from": "mpesa_settings.business_shortcode",
+   "fieldname": "business_shortcode",
+   "fieldtype": "Data",
+   "label": "Business Shortcode",
+   "read_only": 1
+  },
+  {
+   "fieldname": "column_break_4",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "mode_of_payment",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Mode of Payment",
+   "options": "Mode of Payment",
+   "reqd": 1
+  },
+  {
+   "default": "Pending",
+   "fieldname": "register_status",
+   "fieldtype": "Select",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Register Status",
+   "options": "Pending\nSuccess\nFailed",
+   "read_only": 1
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "links": [],
+ "modified": "2023-06-07 17:56:04.569137",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Mpesa C2B Register URL",
+ "naming_rule": "By fieldname",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales User",
+   "share": 1
+  }
+ ],
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.py b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.py
new file mode 100644
index 0000000..85ead66
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_c2b_register_url/mpesa_c2b_register_url.py
@@ -0,0 +1,55 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+import frappe, requests
+from frappe.model.document import Document
+from frappe.utils import get_request_site_address
+from posawesome.posawesome.api.m_pesa import get_token
+
+
+class MpesaC2BRegisterURL(Document):
+    def validate(self):
+        sandbox_url = "https://sandbox.safaricom.co.ke"
+        live_url = "https://api.safaricom.co.ke"
+        mpesa_settings = frappe.get_doc("Mpesa Settings", self.mpesa_settings)
+        env = "production" if not mpesa_settings.sandbox else "sandbox"
+        business_shortcode = (
+            mpesa_settings.business_shortcode
+            if env == "production"
+            else mpesa_settings.till_number
+        )
+        if env == "sandbox":
+            base_url = sandbox_url
+        else:
+            base_url = live_url
+        token = get_token(
+            app_key=mpesa_settings.consumer_key,
+            app_secret=mpesa_settings.get_password("consumer_secret"),
+            base_url=base_url,
+        )
+        site_url = get_request_site_address(True)
+        validation_url = (
+            site_url + "/api/method/posawesome.posawesome.api.m_pesa.validation"
+        )
+        confirmation_url = (
+            site_url + "/api/method/posawesome.posawesome.api.m_pesa.confirmation"
+        )
+        register_url = base_url + "/mpesa/c2b/v2/registerurl"
+
+        payload = {
+            "ShortCode": business_shortcode,
+            "ResponseType": "Completed",
+            "ConfirmationURL": confirmation_url,
+            "ValidationURL": validation_url,
+        }
+        headers = {
+            "Authorization": "Bearer {0}".format(token),
+            "Content-Type": "application/json",
+        }
+        r = requests.post(register_url, headers=headers, json=payload)
+        res = r.json()
+        if res.get("ResponseDescription") == "Success":
+            self.register_status = "Success"
+        else:
+            self.register_status = "Failed"
+            frappe.msgprint(str(res))
diff --git a/posawesome/posawesome/doctype/mpesa_c2b_register_url/test_mpesa_c2b_register_url.py b/posawesome/posawesome/doctype/mpesa_c2b_register_url/test_mpesa_c2b_register_url.py
new file mode 100644
index 0000000..ae903c7
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_c2b_register_url/test_mpesa_c2b_register_url.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2021, Youssef Restom and Contributors
+# See license.txt
+
+# import frappe
+import unittest
+
+class TestMpesaC2BRegisterURL(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/mpesa_payment_register/__init__.py b/posawesome/posawesome/doctype/mpesa_payment_register/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.js b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.js
new file mode 100644
index 0000000..a43b92a
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.js
@@ -0,0 +1,8 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Mpesa Payment Register', {
+	// refresh: function(frm) {
+
+	// }
+});
diff --git a/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.json b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.json
new file mode 100644
index 0000000..35f5bf2
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.json
@@ -0,0 +1,296 @@
+{
+ "actions": [],
+ "allow_copy": 1,
+ "autoname": "MPRE.-.YY.-.MM.-.######",
+ "creation": "2021-11-10 03:47:20.144127",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "full_name",
+  "transactiontype",
+  "transid",
+  "transtime",
+  "transamount",
+  "businessshortcode",
+  "billrefnumber",
+  "invoicenumber",
+  "orgaccountbalance",
+  "thirdpartytransid",
+  "msisdn",
+  "firstname",
+  "middlename",
+  "lastname",
+  "column_break_14",
+  "posting_date",
+  "posting_time",
+  "company",
+  "default_currency",
+  "customer",
+  "mode_of_payment",
+  "currency",
+  "submit_payment",
+  "payment_entry",
+  "amended_from"
+ ],
+ "fields": [
+  {
+   "fieldname": "transactiontype",
+   "fieldtype": "Data",
+   "label": "Transaction Type",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "transid",
+   "fieldtype": "Data",
+   "label": "Trans ID",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "transtime",
+   "fieldtype": "Data",
+   "label": "Trans Time",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "transamount",
+   "fieldtype": "Float",
+   "in_list_view": 1,
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "Trans Amount",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "businessshortcode",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Business Short Code",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "billrefnumber",
+   "fieldtype": "Data",
+   "label": "Bill Ref Number",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "invoicenumber",
+   "fieldtype": "Data",
+   "label": "Invoice Number",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "orgaccountbalance",
+   "fieldtype": "Data",
+   "label": "Org Account Balance",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "thirdpartytransid",
+   "fieldtype": "Data",
+   "label": "Third Party Trans ID",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "msisdn",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "MSISDN",
+   "no_copy": 1,
+   "options": "Phone",
+   "read_only": 1
+  },
+  {
+   "fieldname": "firstname",
+   "fieldtype": "Data",
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "First Name",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "middlename",
+   "fieldtype": "Data",
+   "label": "Middle Name",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "lastname",
+   "fieldtype": "Data",
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "Last Name",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "column_break_14",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "label": "Company",
+   "options": "Company"
+  },
+  {
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "Customer",
+   "options": "Customer"
+  },
+  {
+   "default": "Today",
+   "fieldname": "posting_date",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "in_preview": 1,
+   "in_standard_filter": 1,
+   "label": "Posting Date",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "payment_entry",
+   "fieldtype": "Link",
+   "label": "Payment Entry",
+   "options": "Payment Entry",
+   "read_only": 1
+  },
+  {
+   "fetch_from": "company.default_currency",
+   "fieldname": "default_currency",
+   "fieldtype": "Data",
+   "label": "Default Currency",
+   "read_only": 1
+  },
+  {
+   "fieldname": "amended_from",
+   "fieldtype": "Link",
+   "label": "Amended From",
+   "no_copy": 1,
+   "options": "Mpesa Payment Register",
+   "print_hide": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "mode_of_payment",
+   "fieldtype": "Link",
+   "label": "Mode of Payment",
+   "options": "Mode of Payment"
+  },
+  {
+   "default": "KES",
+   "fieldname": "currency",
+   "fieldtype": "Link",
+   "label": "Currency",
+   "options": "Currency",
+   "read_only": 1
+  },
+  {
+   "fieldname": "full_name",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Full Name",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "submit_payment",
+   "fieldtype": "Check",
+   "label": "Submit Payment "
+  },
+  {
+   "default": "Now",
+   "fieldname": "posting_time",
+   "fieldtype": "Time",
+   "label": "Posting Time",
+   "no_copy": 1,
+   "read_only": 1
+  }
+ ],
+ "in_create": 1,
+ "index_web_pages_for_search": 1,
+ "is_submittable": 1,
+ "links": [],
+ "modified": "2023-06-07 22:24:09.518620",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Mpesa Payment Register",
+ "naming_rule": "Expression (old style)",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "amend": 1,
+   "cancel": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts Manager",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales User",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  }
+ ],
+ "show_preview_popup": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "title_field": "customer",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.py b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.py
new file mode 100644
index 0000000..02f15fd
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_payment_register/mpesa_payment_register.py
@@ -0,0 +1,60 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+import frappe
+from frappe import _
+from frappe.model.document import Document
+from posawesome.posawesome.api.payment_entry import create_payment_entry
+
+
+class MpesaPaymentRegister(Document):
+    def before_insert(self):
+        self.set_missing_values()
+
+    def set_missing_values(self):
+        self.currency = "KES"
+        self.full_name = ""
+        if self.firstname:
+            self.full_name = self.firstname
+        if self.middlename:
+            self.full_name += " " + self.middlename
+        if self.lastname:
+            self.full_name += " " + self.lastname
+
+        register_url_list = frappe.get_all(
+            "Mpesa C2B Register URL",
+            filters={
+                "business_shortcode": self.businessshortcode,
+                "register_status": "Success",
+            },
+            fields=["company", "mode_of_payment"],
+        )
+        if len(register_url_list) > 0:
+            self.company = register_url_list[0].company
+            self.mode_of_payment = register_url_list[0].mode_of_payment
+
+    def before_submit(self):
+        if not self.transamount:
+            frappe.throw(_("Trans Amount is required"))
+        if not self.company:
+            frappe.throw(_("Company is required"))
+        if not self.customer:
+            frappe.throw(_("Customer is required"))
+        if not self.mode_of_payment:
+            frappe.throw(_("Mode of Payment is required"))
+        self.payment_entry = self.create_payment_entry()
+
+    def create_payment_entry(self):
+        payment_entry = create_payment_entry(
+            self.company,
+            self.customer,
+            self.transamount,
+            self.currency,
+            self.mode_of_payment,
+            self.posting_date,
+            self.transid,
+            self.posting_date,
+            None,
+            self.submit_payment,
+        )
+        return payment_entry.name
diff --git a/posawesome/posawesome/doctype/mpesa_payment_register/test_mpesa_payment_register.py b/posawesome/posawesome/doctype/mpesa_payment_register/test_mpesa_payment_register.py
new file mode 100644
index 0000000..218b9a0
--- /dev/null
+++ b/posawesome/posawesome/doctype/mpesa_payment_register/test_mpesa_payment_register.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2021, Youssef Restom and Contributors
+# See license.txt
+
+# import frappe
+import unittest
+
+class TestMpesaPaymentRegister(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/__init__.py b/posawesome/posawesome/doctype/pos_closing_shift/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html b/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html
new file mode 100644
index 0000000..983f495
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html
@@ -0,0 +1,88 @@
+<div class="clearfix"></div>
+<div class="box">
+		<div class="grid-body">
+			<div class="rows text-center">
+
+				<!-- Sales summary section -->
+				<div>
+						<h6 class="text-center uppercase" style="color: #8D99A6">{{ _("Sales Summary") }}</h6>
+						<div class="tax-break-up" style="overflow-x: auto;">
+							<table class="table table-bordered table-hover">
+								<thead>
+								</thead>
+								<tbody>
+									<tr>
+										<td class="text-left font-bold">{{ _('Grand Total') }}</td>
+										<td class='text-right'> {{ frappe.utils.fmt_money(data.grand_total or '', currency=currency) }}</td>
+									</tr>
+									<tr>
+										<td class="text-left font-bold">{{ _('Net Total') }}</td>
+										<td class='text-right'> {{ frappe.utils.fmt_money(data.net_total or '', currency=currency) }}</td>
+									</tr>
+									<tr>
+										<td class="text-left font-bold">{{ _('Total Quantity') }}</td>
+										<td class='text-right'>{{ data.total_quantity or '' }}</td>
+									</tr>
+
+							</tbody>
+						</table>
+					</div>
+				</div>
+				<!-- Section end -->
+
+				<!-- Mode of payment section -->
+				<div>
+						<h6 class="text-center uppercase" style="color: #8D99A6">{{ _("Mode of Payments") }}</h6>
+						<div class="tax-break-up" style="overflow-x: auto;">
+							<table class="table table-bordered table-hover">
+								<thead>
+									<tr>
+										<th class="text-left">{{ _("Mode of Payment") }}</th>
+										<th class="text-right">{{ _("Amount") }}</th>
+									</tr>
+								</thead>
+								<tbody>
+								{% for d in data.payment_reconciliation %}
+									<tr>
+										<td class="text-left">{{ d.mode_of_payment }}</td>
+										<td class='text-right'> {{ frappe.utils.fmt_money(d.expected_amount - d.opening_amount, currency=currency) }}</td>
+									</tr>
+								{% endfor %}
+							</tbody>
+						</table>
+					</div>
+				</div>
+				<!-- Section end -->
+
+				<!-- Taxes section -->
+				{% if data.taxes %}
+				<div>
+						<h6 class="text-center uppercase" style="color: #8D99A6">{{ _("Taxes") }}</h6>
+						<div class="tax-break-up" style="overflow-x: auto;">
+							<table class="table table-bordered table-hover">
+								<thead>
+									<tr>
+										<th class="text-left">{{ _("Account") }}</th>
+										<th class="text-left">{{ _("Rate") }}</th>
+										<th class="text-right">{{ _("Amount") }}</th>
+									</tr>
+								</thead>
+								<tbody>
+								{% for d in data.taxes %}
+									<tr>
+										<td class="text-left">{{ d.account_head }}</td>
+										<td class="text-left">{{ d.rate }} %</td>
+										<td class='text-right'> {{ frappe.utils.fmt_money(d.amount, currency=currency) }}</td>
+									</tr>
+								{% endfor %}
+							</tbody>
+						</table>
+					</div>
+				</div>
+				{% endif %}
+				<!-- Section end -->
+
+			</div>
+		</div>
+	</div>
+</div>
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.js b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.js
new file mode 100644
index 0000000..b6cb8c1
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.js
@@ -0,0 +1,226 @@
+// Copyright (c) 2020, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('POS Closing Shift', {
+	onload: function (frm) {
+		frm.set_query("pos_profile", function (doc) {
+			return {
+				filters: { 'user': doc.user }
+			};
+		});
+
+		frm.set_query("user", function (doc) {
+			return {
+				query: "posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.get_cashiers",
+				filters: { 'parent': doc.pos_profile }
+			};
+		});
+
+		frm.set_query("pos_opening_shift", function (doc) {
+			return { filters: { 'status': 'Open', 'docstatus': 1 } };
+		});
+
+		if (frm.doc.docstatus === 0) frm.set_value("period_end_date", frappe.datetime.now_datetime());
+		if (frm.doc.docstatus === 1) set_html_data(frm);
+	},
+
+	pos_opening_shift (frm) {
+		if (frm.doc.pos_opening_shift && frm.doc.user) {
+			reset_values(frm);
+			frappe.run_serially([
+				() => frm.trigger("set_opening_amounts"),
+				() => frm.trigger("get_pos_invoices"),
+				() => frm.trigger("get_pos_payments")
+			]);
+		}
+	},
+
+	set_opening_amounts (frm) {
+		frappe.db.get_doc("POS Opening Shift", frm.doc.pos_opening_shift)
+			.then(({ balance_details }) => {
+				balance_details.forEach(detail => {
+					frm.add_child("payment_reconciliation", {
+						mode_of_payment: detail.mode_of_payment,
+						opening_amount: detail.amount || 0,
+						expected_amount: detail.amount || 0
+					});
+				});
+			});
+	},
+
+	get_pos_invoices (frm) {
+		frappe.call({
+			method: 'posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.get_pos_invoices',
+			args: {
+				pos_opening_shift: frm.doc.pos_opening_shift,
+			},
+			callback: (r) => {
+				let pos_docs = r.message;
+				set_form_data(pos_docs, frm);
+				refresh_fields(frm);
+				set_html_data(frm);
+			}
+		});
+	},
+
+	get_pos_payments (frm) {
+		frappe.call({
+			method: 'posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.get_payments_entries',
+			args: {
+				pos_opening_shift: frm.doc.pos_opening_shift,
+			},
+			callback: (r) => {
+				let pos_payments = r.message;
+				set_form_payments_data(pos_payments, frm);
+				refresh_fields(frm);
+				set_html_data(frm);
+			}
+		});
+	}
+});
+
+frappe.ui.form.on('POS Closing Shift Detail', {
+	closing_amount: (frm, cdt, cdn) => {
+		const row = locals[cdt][cdn];
+		frappe.model.set_value(cdt, cdn, "difference", flt(row.expected_amount - row.closing_amount));
+	}
+});
+
+function set_form_data (data, frm) {
+	data.forEach(d => {
+		add_to_pos_transaction(d, frm);
+		frm.doc.grand_total += flt(d.grand_total);
+		frm.doc.net_total += flt(d.net_total);
+		frm.doc.total_quantity += flt(d.total_qty);
+		add_to_payments(d, frm);
+		add_to_taxes(d, frm);
+	});
+}
+
+function set_form_payments_data (data, frm) {
+	data.forEach(d => {
+		add_to_pos_payments(d, frm);
+		add_pos_payment_to_payments(d, frm);
+	});
+}
+
+function add_to_pos_transaction (d, frm) {
+	frm.add_child("pos_transactions", {
+		sales_invoice: d.name,
+		posting_date: d.posting_date,
+		grand_total: d.grand_total,
+		customer: d.customer
+	});
+}
+
+function add_to_pos_payments (d, frm) {
+	frm.add_child("pos_payments", {
+		payment_entry: d.name,
+		posting_date: d.posting_date,
+		paid_amount: d.paid_amount,
+		customer: d.party,
+		mode_of_payment: d.mode_of_payment
+	});
+}
+
+function add_to_payments (d, frm) {
+	d.payments.forEach(p => {
+		const payment = frm.doc.payment_reconciliation.find(pay => pay.mode_of_payment === p.mode_of_payment);
+		if (payment) {
+			let amount = p.amount;
+			let cash_mode_of_payment = get_value("POS Profile", frm.doc.pos_profile, 'posa_cash_mode_of_payment');
+			if (!cash_mode_of_payment) {
+				cash_mode_of_payment = 'Cash';
+			}
+			if (payment.mode_of_payment == cash_mode_of_payment) {
+				amount = p.amount - d.change_amount;
+			}
+			payment.expected_amount += flt(amount);
+		} else {
+			frm.add_child("payment_reconciliation", {
+				mode_of_payment: p.mode_of_payment,
+				opening_amount: 0,
+				expected_amount: p.amount || 0
+			});
+		}
+	});
+}
+
+function add_pos_payment_to_payments (p, frm) {
+	const payment = frm.doc.payment_reconciliation.find(pay => pay.mode_of_payment === p.mode_of_payment);
+	if (payment) {
+		let amount = p.paid_amount;
+		payment.expected_amount += flt(amount);
+	} else {
+		frm.add_child("payment_reconciliation", {
+			mode_of_payment: p.mode_of_payment,
+			opening_amount: 0,
+			expected_amount: p.amount || 0
+		});
+	}
+};
+
+
+function add_to_taxes (d, frm) {
+	d.taxes.forEach(t => {
+		const tax = frm.doc.taxes.find(tx => tx.account_head === t.account_head && tx.rate === t.rate);
+		if (tax) {
+			tax.amount += flt(t.tax_amount);
+		} else {
+			frm.add_child("taxes", {
+				account_head: t.account_head,
+				rate: t.rate,
+				amount: t.tax_amount
+			});
+		}
+	});
+}
+
+function reset_values (frm) {
+	frm.set_value("pos_transactions", []);
+	frm.set_value("payment_reconciliation", []);
+	frm.set_value("pos_payments", []);
+	frm.set_value("taxes", []);
+	frm.set_value("grand_total", 0);
+	frm.set_value("net_total", 0);
+	frm.set_value("total_quantity", 0);
+}
+
+function refresh_fields (frm) {
+	frm.refresh_field("pos_transactions");
+	frm.refresh_field("payment_reconciliation");
+	frm.refresh_field("pos_payments");
+	frm.refresh_field("taxes");
+	frm.refresh_field("grand_total");
+	frm.refresh_field("net_total");
+	frm.refresh_field("total_quantity");
+}
+
+function set_html_data (frm) {
+	frappe.call({
+		method: "get_payment_reconciliation_details",
+		doc: frm.doc,
+		callback: (r) => {
+			frm.get_field("payment_reconciliation_details").$wrapper.html(r.message);
+		}
+	});
+}
+
+const get_value = (doctype, name, field) => {
+	let value;
+	frappe.call({
+		method: 'frappe.client.get_value',
+		args: {
+			'doctype': doctype,
+			'filters': { 'name': name },
+			'fieldname': field
+		},
+		async: false,
+		callback: function (r) {
+			if (!r.exc) {
+				value = r.message[field];
+			}
+		}
+	});
+	return value;
+};
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.json b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.json
new file mode 100644
index 0000000..ca835d0
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.json
@@ -0,0 +1,256 @@
+{
+ "actions": [],
+ "allow_copy": 1,
+ "autoname": "POSA-CS-.YY.-.#######",
+ "creation": "2020-09-29 02:38:20.917434",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "period_start_date",
+  "period_end_date",
+  "column_break_3",
+  "posting_date",
+  "pos_opening_shift",
+  "section_break_5",
+  "company",
+  "column_break_7",
+  "pos_profile",
+  "user",
+  "section_break_12",
+  "pos_transactions",
+  "section_break_9",
+  "pos_payments",
+  "section_break_if3m1",
+  "payment_reconciliation_details",
+  "section_break_11",
+  "payment_reconciliation",
+  "section_break_13",
+  "grand_total",
+  "net_total",
+  "total_quantity",
+  "column_break_16",
+  "taxes",
+  "section_break_14",
+  "amended_from"
+ ],
+ "fields": [
+  {
+   "fetch_from": "pos_opening_shift.period_start_date",
+   "fieldname": "period_start_date",
+   "fieldtype": "Datetime",
+   "in_list_view": 1,
+   "label": "Period Start Date",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "default": "Today",
+   "fieldname": "period_end_date",
+   "fieldtype": "Datetime",
+   "in_list_view": 1,
+   "label": "Period End Date",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_3",
+   "fieldtype": "Column Break"
+  },
+  {
+   "default": "Today",
+   "fieldname": "posting_date",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "label": "Posting Date",
+   "reqd": 1
+  },
+  {
+   "fieldname": "section_break_5",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_7",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fetch_from": "pos_opening_shift.pos_profile",
+   "fieldname": "pos_profile",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "POS Profile",
+   "options": "POS Profile",
+   "reqd": 1
+  },
+  {
+   "fetch_from": "pos_opening_shift.user",
+   "fieldname": "user",
+   "fieldtype": "Link",
+   "label": "Cashier",
+   "options": "User",
+   "reqd": 1
+  },
+  {
+   "fieldname": "section_break_12",
+   "fieldtype": "Section Break",
+   "label": "Linked Invoices"
+  },
+  {
+   "fieldname": "pos_transactions",
+   "fieldtype": "Table",
+   "label": "POS Transactions",
+   "options": "Sales Invoice Reference"
+  },
+  {
+   "fieldname": "section_break_9",
+   "fieldtype": "Section Break",
+   "read_only": 1
+  },
+  {
+   "depends_on": "eval:doc.docstatus==1",
+   "fieldname": "payment_reconciliation_details",
+   "fieldtype": "HTML"
+  },
+  {
+   "fieldname": "section_break_11",
+   "fieldtype": "Section Break",
+   "label": "Modes of Payment"
+  },
+  {
+   "fieldname": "payment_reconciliation",
+   "fieldtype": "Table",
+   "label": "Payment Reconciliation",
+   "options": "POS Closing Shift Detail"
+  },
+  {
+   "collapsible": 1,
+   "collapsible_depends_on": "eval:doc.docstatus==0",
+   "fieldname": "section_break_13",
+   "fieldtype": "Section Break",
+   "label": "Details"
+  },
+  {
+   "default": "0",
+   "fieldname": "grand_total",
+   "fieldtype": "Currency",
+   "label": "Grand Total",
+   "read_only": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "net_total",
+   "fieldtype": "Currency",
+   "label": "Net Total",
+   "read_only": 1
+  },
+  {
+   "fieldname": "total_quantity",
+   "fieldtype": "Float",
+   "label": "Total Quantity",
+   "read_only": 1
+  },
+  {
+   "fieldname": "column_break_16",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "taxes",
+   "fieldtype": "Table",
+   "label": "Taxes",
+   "options": "POS Closing Shift Taxes",
+   "read_only": 1
+  },
+  {
+   "fieldname": "section_break_14",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "amended_from",
+   "fieldtype": "Link",
+   "label": "Amended From",
+   "no_copy": 1,
+   "options": "POS Closing Shift",
+   "print_hide": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "pos_opening_shift",
+   "fieldtype": "Link",
+   "label": "POS Opening Shift",
+   "options": "POS Opening Shift",
+   "reqd": 1
+  },
+  {
+   "fieldname": "pos_payments",
+   "fieldtype": "Table",
+   "label": "POS Payments",
+   "options": "POS Payment Entry Reference"
+  },
+  {
+   "fieldname": "section_break_if3m1",
+   "fieldtype": "Section Break"
+  }
+ ],
+ "is_submittable": 1,
+ "links": [],
+ "modified": "2023-06-12 03:01:49.146706",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Closing Shift",
+ "naming_rule": "Expression (old style)",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "cancel": 1,
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "cancel": 1,
+   "create": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Manager",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "cancel": 1,
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Administrator",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  }
+ ],
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py
new file mode 100644
index 0000000..06848dc
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py
@@ -0,0 +1,312 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe
+import json
+from frappe import _
+from frappe.model.document import Document
+from frappe.utils import flt
+
+
+class POSClosingShift(Document):
+    def validate(self):
+        user = frappe.get_all(
+            "POS Closing Shift",
+            filters={
+                "user": self.user,
+                "docstatus": 1,
+                "pos_opening_shift": self.pos_opening_shift,
+                "name": ["!=", self.name],
+            },
+        )
+
+        if user:
+            frappe.throw(
+                _(
+                    "POS Closing Shift {} against {} between selected period".format(
+                        frappe.bold("already exists"), frappe.bold(self.user)
+                    )
+                ),
+                title=_("Invalid Period"),
+            )
+
+        if (
+            frappe.db.get_value("POS Opening Shift", self.pos_opening_shift, "status")
+            != "Open"
+        ):
+            frappe.throw(
+                _("Selected POS Opening Shift should be open."),
+                title=_("Invalid Opening Entry"),
+            )
+        self.update_payment_reconciliation()
+
+    def update_payment_reconciliation(self):
+        # update the difference values in Payment Reconciliation child table
+        # get default precision for site
+        precision = (
+            frappe.get_cached_value("System Settings", None, "currency_precision") or 3
+        )
+        for d in self.payment_reconciliation:
+            d.difference = +flt(d.closing_amount, precision) - flt(
+                d.expected_amount, precision
+            )
+
+    def on_submit(self):
+        opening_entry = frappe.get_doc("POS Opening Shift", self.pos_opening_shift)
+        opening_entry.pos_closing_shift = self.name
+        opening_entry.set_status()
+        self.delete_draft_invoices()
+        opening_entry.save()
+
+    def delete_draft_invoices(self):
+        if frappe.get_value("POS Profile", self.pos_profile, "posa_allow_delete"):
+            data = frappe.db.sql(
+                """
+                select
+                    name
+                from
+                    `tabSales Invoice`
+                where
+                    docstatus = 0 and posa_is_printed = 0 and posa_pos_opening_shift = %s
+                """,
+                (self.pos_opening_shift),
+                as_dict=1,
+            )
+
+            for invoice in data:
+                frappe.delete_doc("Sales Invoice", invoice.name, force=1)
+
+    @frappe.whitelist()
+    def get_payment_reconciliation_details(self):
+        currency = frappe.get_cached_value("Company", self.company, "default_currency")
+        return frappe.render_template(
+            "posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html",
+            {"data": self, "currency": currency},
+        )
+
+
+@frappe.whitelist()
+def get_cashiers(doctype, txt, searchfield, start, page_len, filters):
+    doctype = "User"
+    conditions = []
+    cashiers_list = frappe.get_all("POS Profile User", filters=filters, fields=["user as name"])
+    fields = ["user"]
+
+    return frappe.db.sql(
+        """select {fields} from `tabPOS Profile User`
+        where
+            docstatus < 2
+            and ({key} like %(txt)s)
+            and parent = %(pos_profile)s
+        order by
+            (case when locate(%(_txt)s, user) > 0 then locate(%(_txt)s, user) else 99999 end),
+            idx desc,
+            user
+        limit %(page_len)s offset %(start)s""".format(
+            **{
+                "fields": ", ".join(fields),
+                "key": "user",
+                "fcond": "",
+                "mcond": "",
+            }
+        ),
+        {"txt": "%%%s%%" % txt, "_txt": txt.replace("%", ""), "start": start, "page_len": page_len, "pos_profile": filters.get("parent")},
+    )
+
+@frappe.whitelist()
+def get_pos_invoices(pos_opening_shift):
+    submit_printed_invoices(pos_opening_shift)
+    data = frappe.db.sql(
+        """
+	select
+		name
+	from
+		`tabSales Invoice`
+	where
+		docstatus = 1 and posa_pos_opening_shift = %s
+	""",
+        (pos_opening_shift),
+        as_dict=1,
+    )
+
+    data = [frappe.get_doc("Sales Invoice", d.name).as_dict() for d in data]
+
+    return data
+
+
+@frappe.whitelist()
+def get_payments_entries(pos_opening_shift):
+    return frappe.get_all(
+        "Payment Entry",
+        filters={
+            "docstatus": 1,
+            "reference_no": pos_opening_shift,
+            "payment_type": "Receive",
+        },
+        fields=[
+            "name",
+            "mode_of_payment",
+            "paid_amount",
+            "reference_no",
+            "posting_date",
+            "party",
+        ],
+    )
+
+
+@frappe.whitelist()
+def make_closing_shift_from_opening(opening_shift):
+    opening_shift = json.loads(opening_shift)
+    submit_printed_invoices(opening_shift.get("name"))
+    closing_shift = frappe.new_doc("POS Closing Shift")
+    closing_shift.pos_opening_shift = opening_shift.get("name")
+    closing_shift.period_start_date = opening_shift.get("period_start_date")
+    closing_shift.period_end_date = frappe.utils.get_datetime()
+    closing_shift.pos_profile = opening_shift.get("pos_profile")
+    closing_shift.user = opening_shift.get("user")
+    closing_shift.company = opening_shift.get("company")
+    closing_shift.grand_total = 0
+    closing_shift.net_total = 0
+    closing_shift.total_quantity = 0
+
+    invoices = get_pos_invoices(opening_shift.get("name"))
+
+    pos_transactions = []
+    taxes = []
+    payments = []
+    pos_payments_table = []
+    for detail in opening_shift.get("balance_details"):
+        payments.append(
+            frappe._dict(
+                {
+                    "mode_of_payment": detail.get("mode_of_payment"),
+                    "opening_amount": detail.get("amount") or 0,
+                    "expected_amount": detail.get("amount") or 0,
+                }
+            )
+        )
+
+    for d in invoices:
+        pos_transactions.append(
+            frappe._dict(
+                {
+                    "sales_invoice": d.name,
+                    "posting_date": d.posting_date,
+                    "grand_total": d.grand_total,
+                    "customer": d.customer,
+                }
+            )
+        )
+        closing_shift.grand_total += flt(d.grand_total)
+        closing_shift.net_total += flt(d.net_total)
+        closing_shift.total_quantity += flt(d.total_qty)
+
+        for t in d.taxes:
+            existing_tax = [
+                tx
+                for tx in taxes
+                if tx.account_head == t.account_head and tx.rate == t.rate
+            ]
+            if existing_tax:
+                existing_tax[0].amount += flt(t.tax_amount)
+            else:
+                taxes.append(
+                    __dict(
+                        {
+                            "account_head": t.account_head,
+                            "rate": t.rate,
+                            "amount": t.tax_amount,
+                        }
+                    )
+                )
+
+        for p in d.payments:
+            existing_pay = [
+                pay for pay in payments if pay.mode_of_payment == p.mode_of_payment
+            ]
+            if existing_pay:
+                cash_mode_of_payment = frappe.get_value(
+                    "POS Profile",
+                    opening_shift.get("pos_profile"),
+                    "posa_cash_mode_of_payment",
+                )
+                if not cash_mode_of_payment:
+                    cash_mode_of_payment = "Cash"
+                if existing_pay[0].mode_of_payment == cash_mode_of_payment:
+                    amount = p.amount - d.change_amount
+                else:
+                    amount = p.amount
+                existing_pay[0].expected_amount += flt(amount)
+            else:
+                payments.append(
+                    __dict(
+                        {
+                            "mode_of_payment": p.mode_of_payment,
+                            "opening_amount": 0,
+                            "expected_amount": p.amount,
+                        }
+                    )
+                )
+
+    pos_payments = get_payments_entries(opening_shift.get("name"))
+
+    for py in pos_payments:
+        pos_payments_table.append(
+            __dict(
+                {
+                    "payment_entry": py.name,
+                    "mode_of_payment": py.mode_of_payment,
+                    "paid_amount": py.paid_amount,
+                    "posting_date": py.posting_date,
+                    "customer": py.party,
+                }
+            )
+        )
+        existing_pay = [
+            pay for pay in payments if pay.mode_of_payment == py.mode_of_payment
+        ]
+        if existing_pay:
+            existing_pay[0].expected_amount += flt(py.paid_amount)
+        else:
+            payments.append(
+                __dict(
+                    {
+                        "mode_of_payment": py.mode_of_payment,
+                        "opening_amount": 0,
+                        "expected_amount": py.paid_amount,
+                    }
+                )
+            )
+
+    closing_shift.set("pos_transactions", pos_transactions)
+    closing_shift.set("payment_reconciliation", payments)
+    closing_shift.set("taxes", taxes)
+    closing_shift.set("pos_payments", pos_payments_table)
+
+    return closing_shift
+
+
+@frappe.whitelist()
+def submit_closing_shift(closing_shift):
+    closing_shift = json.loads(closing_shift)
+    closing_shift_doc = frappe.get_doc(closing_shift)
+    closing_shift_doc.flags.ignore_permissions = True
+    closing_shift_doc.save()
+    closing_shift_doc.submit()
+    return closing_shift_doc.name
+
+
+def submit_printed_invoices(pos_opening_shift):
+    invoices_list = frappe.get_all(
+        "Sales Invoice",
+        filters={
+            "posa_pos_opening_shift": pos_opening_shift,
+            "docstatus": 0,
+            "posa_is_printed": 1,
+        },
+    )
+    for invoice in invoices_list:
+        invoice_doc = frappe.get_doc("Sales Invoice", invoice.name)
+        invoice_doc.submit()
diff --git a/posawesome/posawesome/doctype/pos_closing_shift/test_pos_closing_shift.py b/posawesome/posawesome/doctype/pos_closing_shift/test_pos_closing_shift.py
new file mode 100644
index 0000000..ad27aa7
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift/test_pos_closing_shift.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and Contributors
+# See license.txt
+from __future__ import unicode_literals
+
+# import frappe
+import unittest
+
+class TestPOSClosingShift(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_detail/__init__.py b/posawesome/posawesome/doctype/pos_closing_shift_detail/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.json b/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.json
new file mode 100644
index 0000000..a36ab94
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.json
@@ -0,0 +1,70 @@
+{
+ "actions": [],
+ "creation": "2020-09-29 02:59:27.107324",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "mode_of_payment",
+  "opening_amount",
+  "closing_amount",
+  "expected_amount",
+  "difference"
+ ],
+ "fields": [
+  {
+   "fieldname": "mode_of_payment",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Mode of Payment",
+   "options": "Mode of Payment",
+   "reqd": 1
+  },
+  {
+   "fieldname": "opening_amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Opening Amount",
+   "options": "company:company_currency",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fieldname": "closing_amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Closing Amount",
+   "options": "company:company_currency",
+   "reqd": 1
+  },
+  {
+   "fieldname": "expected_amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Expected Amount",
+   "options": "company:company_currency",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fieldname": "difference",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Difference",
+   "options": "company:company_currency",
+   "read_only": 1
+  }
+ ],
+ "istable": 1,
+ "links": [],
+ "modified": "2020-09-29 02:59:35.699400",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Closing Shift Detail",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.py b/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.py
new file mode 100644
index 0000000..ceccaf1
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift_detail/pos_closing_shift_detail.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class POSClosingShiftDetail(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_taxes/__init__.py b/posawesome/posawesome/doctype/pos_closing_shift_taxes/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.json b/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.json
new file mode 100644
index 0000000..ee3f528
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.json
@@ -0,0 +1,48 @@
+{
+ "actions": [],
+ "creation": "2020-09-29 03:00:46.321522",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "account_head",
+  "rate",
+  "amount"
+ ],
+ "fields": [
+  {
+   "fieldname": "account_head",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Account Head",
+   "options": "Account",
+   "read_only": 1
+  },
+  {
+   "fieldname": "rate",
+   "fieldtype": "Percent",
+   "in_list_view": 1,
+   "label": "Rate",
+   "read_only": 1
+  },
+  {
+   "fieldname": "amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Amount",
+   "read_only": 1
+  }
+ ],
+ "istable": 1,
+ "links": [],
+ "modified": "2020-09-29 03:00:46.321522",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Closing Shift Taxes",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.py b/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.py
new file mode 100644
index 0000000..ee419ab
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_closing_shift_taxes/pos_closing_shift_taxes.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class POSClosingShiftTaxes(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_coupon/__init__.py b/posawesome/posawesome/doctype/pos_coupon/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_coupon/pos_coupon.js b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.js
new file mode 100644
index 0000000..56b5c1a
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.js
@@ -0,0 +1,46 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('POS Coupon', {
+	setup: function (frm) {
+		frm.set_query("pos_offer", function () {
+			return {
+				filters: {
+					"company": frm.doc.company,
+					"coupon_based": 1,
+					"disable": 0,
+				}
+			};
+		});
+	},
+	coupon_name: function (frm) {
+		if (frm.doc.__islocal === 1) {
+			frm.trigger("make_coupon_code");
+		}
+	},
+	coupon_type: function (frm) {
+		if (frm.doc.__islocal === 1) {
+			frm.trigger("make_coupon_code");
+		}
+	},
+	make_coupon_code: function (frm) {
+		var coupon_name = frm.doc.coupon_name;
+		var coupon_code;
+		if (frm.doc.coupon_type == 'Gift Card') {
+			coupon_code = Math.random().toString(12).substring(2, 12).toUpperCase();
+		}
+		else if (frm.doc.coupon_type == 'Promotional') {
+			coupon_name = coupon_name.replace(/\s/g, '');
+			coupon_code = coupon_name.toUpperCase().slice(0, 8);
+		}
+		frm.doc.coupon_code = coupon_code;
+		frm.refresh_field('coupon_code');
+	},
+	refresh: function (frm) {
+		if (frm.doc.pricing_rule) {
+			frm.add_custom_button(__("Add/Edit Coupon Conditions"), function () {
+				frappe.set_route("Form", "POS Offer", frm.doc.pos_offer);
+			});
+		}
+	}
+});
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_coupon/pos_coupon.json b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.json
new file mode 100644
index 0000000..d0b64a9
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.json
@@ -0,0 +1,239 @@
+{
+ "actions": [],
+ "allow_import": 1,
+ "autoname": "field:coupon_name",
+ "creation": "2021-07-24 01:47:32.743719",
+ "doctype": "DocType",
+ "document_type": "Other",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "coupon_name",
+  "coupon_type",
+  "customer",
+  "customer_name",
+  "mobile_no",
+  "email_id",
+  "column_break_4",
+  "coupon_code",
+  "company",
+  "campaign",
+  "pos_offer",
+  "referral_code",
+  "uses",
+  "valid_from",
+  "valid_upto",
+  "maximum_use",
+  "used",
+  "one\u0640use",
+  "column_break_11",
+  "description"
+ ],
+ "fields": [
+  {
+   "description": "e.g. \"Summer Holiday 2019 Offer 20\"",
+   "fieldname": "coupon_name",
+   "fieldtype": "Data",
+   "label": "Coupon Name",
+   "reqd": 1,
+   "unique": 1
+  },
+  {
+   "fieldname": "coupon_type",
+   "fieldtype": "Select",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Coupon Type",
+   "options": "Promotional\nGift Card",
+   "reqd": 1
+  },
+  {
+   "depends_on": "eval: doc.coupon_type == \"Gift Card\"",
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Customer",
+   "options": "Customer"
+  },
+  {
+   "fieldname": "column_break_4",
+   "fieldtype": "Column Break"
+  },
+  {
+   "description": "unique e.g. SAVE20  To be used to get discount",
+   "fieldname": "coupon_code",
+   "fieldtype": "Data",
+   "in_standard_filter": 1,
+   "label": "Coupon Code",
+   "no_copy": 1,
+   "set_only_once": 1,
+   "unique": 1
+  },
+  {
+   "fieldname": "pos_offer",
+   "fieldtype": "Link",
+   "label": "POS Offer",
+   "options": "POS Offer",
+   "reqd": 1
+  },
+  {
+   "fieldname": "uses",
+   "fieldtype": "Section Break",
+   "label": "Validity and Usage"
+  },
+  {
+   "fieldname": "valid_from",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "label": "Valid From"
+  },
+  {
+   "fieldname": "valid_upto",
+   "fieldtype": "Date",
+   "label": "Valid Upto"
+  },
+  {
+   "depends_on": "eval: doc.coupon_type == \"Promotional\"",
+   "fieldname": "maximum_use",
+   "fieldtype": "Int",
+   "label": "Maximum Use"
+  },
+  {
+   "default": "0",
+   "fieldname": "used",
+   "fieldtype": "Int",
+   "in_list_view": 1,
+   "label": "Used",
+   "no_copy": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "column_break_11",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fetch_from": "pos_offer.description",
+   "fetch_if_empty": 1,
+   "fieldname": "description",
+   "fieldtype": "Text Editor",
+   "label": "Coupon Description"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "in_standard_filter": 1,
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "campaign",
+   "fieldtype": "Link",
+   "in_standard_filter": 1,
+   "label": "Campaign",
+   "options": "Campaign"
+  },
+  {
+   "default": "0",
+   "fieldname": "one\u0640use",
+   "fieldtype": "Check",
+   "label": "Only One Use Per Customer"
+  },
+  {
+   "depends_on": "customer",
+   "fetch_from": "customer.customer_name",
+   "fieldname": "customer_name",
+   "fieldtype": "Data",
+   "label": "Customer Name",
+   "read_only": 1
+  },
+  {
+   "depends_on": "customer",
+   "fetch_from": "customer.mobile_no",
+   "fetch_if_empty": 1,
+   "fieldname": "mobile_no",
+   "fieldtype": "Data",
+   "label": "Mobile NO",
+   "options": "Phone"
+  },
+  {
+   "depends_on": "customer",
+   "fetch_from": "customer.email_id",
+   "fetch_if_empty": 1,
+   "fieldname": "email_id",
+   "fieldtype": "Data",
+   "label": "Email ID",
+   "options": "Email"
+  },
+  {
+   "fieldname": "referral_code",
+   "fieldtype": "Link",
+   "label": "Referral Code",
+   "options": "Referral Code",
+   "read_only": 1
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "links": [],
+ "modified": "2021-07-30 00:17:17.711972",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Coupon",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Website Manager",
+   "share": 1,
+   "write": 1
+  }
+ ],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "title_field": "coupon_code",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_coupon/pos_coupon.py b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.py
new file mode 100644
index 0000000..503ba62
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon/pos_coupon.py
@@ -0,0 +1,171 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe
+from frappe import _
+from frappe.model.document import Document
+from frappe.utils import strip
+from frappe.utils import getdate, today
+
+
+class POSCoupon(Document):
+    def autoname(self):
+        self.coupon_name = strip(self.coupon_name)
+        self.name = self.coupon_name
+
+        if not self.coupon_code:
+            if self.coupon_type == "Promotional":
+                self.coupon_code = "".join(
+                    i for i in self.coupon_name if not i.isdigit()
+                )[0:8].upper()
+            elif self.coupon_type == "Gift Card":
+                self.coupon_code = frappe.generate_hash()[:10].upper()
+
+    def validate(self):
+        if self.coupon_type == "Gift Card":
+            self.maximum_use = 1
+            if not self.customer:
+                frappe.throw(_("Please select the customer."))
+        pos_offer = frappe.get_doc("POS Offer", self.pos_offer)
+        if self.company != pos_offer.company:
+            frappe.throw(
+                _("Please select the correct POS Offer with the same company.")
+            )
+        if not pos_offer.coupon_based:
+            frappe.throw(_("Please select Coupon Code Based POS Offer."))
+        if pos_offer.disable:
+            frappe.throw(_("POS Offer is disable."))
+        if pos_offer.valid_from and pos_offer.valid_from > getdate(self.valid_from):
+            self.valid_from = pos_offer.valid_from
+        if pos_offer.valid_upto and pos_offer.valid_upto < getdate(self.valid_upto):
+            self.valid_upto = pos_offer.valid_upto
+
+    def create_coupon_from_referral(self):
+        if not self.customer:
+            frappe.throw(_("Customer is required"))
+        if not self.referral_code:
+            frappe.throw(_("Referral Code is required"))
+        ref_doc = None
+        ref_code_exist = frappe.db.exists("Referral Code", self.referral_code)
+        if not ref_code_exist:
+            ref_doc = frappe.get_doc(
+                "Referral Code", {"referral_code": self.referral_code}
+            )
+        else:
+            ref_doc = frappe.get_doc("Referral Code", self.referral_code)
+        if not ref_doc:
+            frappe.throw(
+                _("Referral Code {0} is not exists").format(self.referral_code)
+            )
+        if ref_doc.disabled:
+            frappe.throw(_("Referral Code {0} is disabled").format(self.referral_code))
+
+        self.coupon_name = frappe.generate_hash()[:10].upper()
+        self.coupon_type = "Gift Card"
+        self.company = ref_doc.company
+        self.pos_offer = ref_doc.customer_offer
+        self.campaign = ref_doc.campaign
+        self.referral_code = ref_doc.name
+        self.save(ignore_permissions=True)
+
+        if ref_doc.primary_offer:
+            doc = frappe.new_doc("POS Coupon")
+            doc.coupon_name = frappe.generate_hash()[:10].upper()
+            doc.coupon_type = "Gift Card"
+            doc.company = ref_doc.company
+            doc.customer = ref_doc.customer
+            doc.pos_offer = ref_doc.primary_offer
+            doc.campaign = ref_doc.campaign
+            doc.referral_code = ref_doc.name
+            doc.save(ignore_permissions=True)
+
+
+def check_coupon_code(coupon_code, customer=None, company=None):
+    res = {"coupon": None}
+    if not frappe.db.exists("POS Coupon", {"coupon_code": coupon_code.upper()}):
+        res["msg"] = _("Sorry, this coupon code not exists")
+        return res
+
+    coupon = frappe.get_doc("POS Coupon", {"coupon_code": coupon_code.upper()})
+    pos_offer = frappe.get_doc("POS Offer", coupon.pos_offer)
+
+    if coupon.valid_from:
+        if coupon.valid_from > getdate(today()):
+            res["msg"] = _("Sorry, this coupon code's validity has not started")
+            return res
+    if coupon.valid_upto:
+        if coupon.valid_upto < getdate(today()):
+            res["msg"] = _("Sorry, this coupon code's validity has expired")
+            return res
+    if coupon.used and coupon.maximum_use and coupon.used >= coupon.maximum_use:
+        res["msg"] = _("Sorry, this coupon code is no longer valid")
+        return res
+
+    if pos_offer.disable:
+        res["msg"] = _("Sorry, this coupon code is no longer valid")
+        return res
+    if pos_offer.valid_from:
+        if pos_offer.valid_from > getdate(today()):
+            res["msg"] = _("Sorry, this coupon code's validity has not started")
+            return res
+    if pos_offer.valid_upto:
+        if pos_offer.valid_upto < getdate(today()):
+            res["msg"] = _("Sorry, this coupon code's validity has expired")
+            return res
+
+    if customer and coupon.coupon_type == "Gift Card":
+        if customer != coupon.customer:
+            res["msg"] = _("Sorry, this coupon code cannot be used by this customer")
+            return res
+
+    if company and coupon.company != company:
+        res["msg"] = _("Sorry, this coupon code cannot be used by this company")
+        return res
+
+    if customer and coupon.oneـuse:
+        count = frappe.db.count(
+            "POS Coupon Detail",
+            filters={
+                "parentfield": "posa_coupons",
+                "parenttype": "Sales Invoice",
+                "docstatus": 1,
+                "customer": customer,
+            },
+        )
+        if count > 0:
+            res["msg"] = _("Sorry, {0} have used this coupon before").format(customer)
+            return res
+
+    res["coupon"] = coupon
+    res["msg"] = "Apply"
+    return res
+
+
+def validate_coupon_code(coupon_code, customer=None, company=None):
+    res = check_coupon_code(coupon_code, customer, company)
+    if not res.get("coupon"):
+        frappe.throw(res.get("msg"))
+    else:
+        return res
+
+
+def update_coupon_code_count(coupon_name, transaction_type):
+    coupon = frappe.get_doc("POS Coupon", coupon_name)
+    if coupon:
+        if transaction_type == "used":
+
+            if coupon.maximum_use and coupon.used >= coupon.maximum_use:
+                frappe.throw(
+                    _("{0} Coupon used are {1}. Allowed quantity is exhausted").format(
+                        coupon.coupon_code, coupon.used
+                    )
+                )
+            else:
+                coupon.used = coupon.used + 1
+                coupon.save(ignore_permissions=True)
+
+        elif transaction_type == "cancelled":
+            if coupon.used > 0:
+                coupon.used = coupon.used - 1
+                coupon.save(ignore_permissions=True)
diff --git a/posawesome/posawesome/doctype/pos_coupon/test_pos_coupon.py b/posawesome/posawesome/doctype/pos_coupon/test_pos_coupon.py
new file mode 100644
index 0000000..a5c34c0
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon/test_pos_coupon.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2021, Youssef Restom and Contributors
+# See license.txt
+
+# import frappe
+import unittest
+
+class TestPOSCoupon(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_coupon_detail/__init__.py b/posawesome/posawesome/doctype/pos_coupon_detail/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.json b/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.json
new file mode 100644
index 0000000..e96ad5e
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.json
@@ -0,0 +1,82 @@
+{
+ "actions": [],
+ "creation": "2021-07-25 01:13:04.695345",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "coupon_code",
+  "coupon",
+  "type",
+  "pos_offer",
+  "applied",
+  "customer"
+ ],
+ "fields": [
+  {
+   "fieldname": "coupon",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Coupon",
+   "options": "POS Coupon",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "default": "1",
+   "fieldname": "applied",
+   "fieldtype": "Check",
+   "in_list_view": 1,
+   "label": "Applied",
+   "read_only": 1
+  },
+  {
+   "fetch_from": "coupon.pos_offer",
+   "fetch_if_empty": 1,
+   "fieldname": "pos_offer",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "POS Offer",
+   "options": "POS Offer",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fetch_from": "coupon.coupon_type",
+   "fieldname": "type",
+   "fieldtype": "Data",
+   "label": "Type",
+   "read_only": 1
+  },
+  {
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "label": "Customer",
+   "options": "Customer",
+   "read_only": 1
+  },
+  {
+   "fetch_from": "coupon.coupon_code",
+   "fetch_if_empty": 1,
+   "fieldname": "coupon_code",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "label": "Coupon Code",
+   "read_only": 1,
+   "reqd": 1
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "istable": 1,
+ "links": [],
+ "modified": "2021-07-25 18:30:50.096464",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Coupon Detail",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.py b/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.py
new file mode 100644
index 0000000..5690d23
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_coupon_detail/pos_coupon_detail.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+# import frappe
+from frappe.model.document import Document
+
+class POSCouponDetail(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_offer/__init__.py b/posawesome/posawesome/doctype/pos_offer/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_offer/pos_offer.js b/posawesome/posawesome/doctype/pos_offer/pos_offer.js
new file mode 100644
index 0000000..11defab
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer/pos_offer.js
@@ -0,0 +1,168 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('POS Offer', {
+	setup: function (frm) {
+		set_filters(frm);
+		controllers(frm);
+	},
+	refresh: function (frm) {
+		controllers(frm);
+	},
+	onload: function (frm) {
+		set_filters(frm);
+		controllers(frm);
+	},
+	validate: function (frm) {
+		if (frm.doc.apply_on === 'Transaction') {
+			if (!frm.doc.min_amt > 0) {
+				frappe.throw("Min Amount most be more then zero");
+			}
+		}
+		if (frm.doc.offer === 'Give Product') {
+			if (!frm.doc.given_qty > 0) {
+				frappe.throw("Given Quantity most be more then zero");
+			}
+		}
+		if (frm.doc.offer === 'Loyalty Point') {
+			if (!frm.doc.loyalty_points > 0) {
+				frappe.throw("Loyalty Points most be more then zero");
+			}
+		}
+		if (frm.doc.apply_type === 'Item Group' && frm.doc.offer === 'Give Product' && !frm.doc.replace_item && !frm.doc.replace_cheapest_item) {
+			frm.set_value('auto', 0);
+		}
+	},
+	apply_on: function (frm) {
+		controllers(frm);
+	},
+	offer: function (frm) {
+		controllers(frm);
+	},
+	apply_type: function (frm) {
+		controllers(frm);
+	},
+	discount_type: function (frm) {
+		controllers(frm);
+	},
+	replace_item: function (frm) {
+		controllers(frm);
+	},
+	replace_cheapest_item: function (frm) {
+		controllers(frm);
+	},
+});
+
+
+const controllers = (frm) => {
+	frm.toggle_display('item', frm.doc.apply_on === 'Item Code');
+	frm.toggle_reqd('item', frm.doc.apply_on === 'Item Code');
+
+	frm.toggle_display('item_group', frm.doc.apply_on === 'Item Group');
+	frm.toggle_reqd('item_group', frm.doc.apply_on === 'Item Group');
+
+	frm.toggle_display('brand', frm.doc.apply_on === 'Brand');
+	frm.toggle_reqd('brand', frm.doc.apply_on === 'Brand');
+
+	frm.toggle_reqd('min_amt', frm.doc.apply_on === 'Transaction');
+
+	frm.toggle_display('apply_for_section', frm.doc.offer === 'Give Product');
+	frm.toggle_reqd('apply_type', frm.doc.offer === 'Give Product');
+
+	frm.toggle_display('replace_item', frm.doc.apply_on === 'Item Code' && frm.doc.offer === 'Give Product' && frm.doc.apply_type === 'Item Code');
+	frm.toggle_display('replace_cheapest_item', frm.doc.apply_on === 'Item Group' && frm.doc.offer === 'Give Product' && frm.doc.apply_type === 'Item Group');
+
+	frm.toggle_display('apply_item_code', frm.doc.apply_type === 'Item Code' && !frm.doc.replace_item);
+	frm.toggle_reqd('apply_item_code', frm.doc.apply_type === 'Item Code' && !frm.doc.replace_item);
+
+	frm.toggle_display('apply_item_group', frm.doc.apply_type === 'Item Group' && !frm.doc.replace_cheapest_item);
+	frm.toggle_reqd('apply_item_group', frm.doc.apply_type === 'Item Group' && !frm.doc.replace_cheapest_item);
+
+	frm.toggle_display('less_then', frm.doc.apply_type === 'Item Group' && !frm.doc.replace_cheapest_item);
+
+	frm.toggle_display('product_discount_scheme_section', frm.doc.offer === 'Give Product');
+	frm.toggle_display('given_qty', frm.doc.offer === 'Give Product');
+	frm.toggle_reqd('given_qty', frm.doc.offer === 'Give Product');
+
+	frm.toggle_display('price_discount_scheme_section', frm.doc.offer !== 'Loyalty Point');
+	frm.toggle_display('discount_type', frm.doc.offer !== 'Loyalty Point');
+	frm.toggle_reqd('discount_type', frm.doc.offer !== 'Loyalty Point');
+
+	frm.toggle_display('rate', frm.doc.discount_type === 'Rate');
+	frm.toggle_reqd('rate', frm.doc.discount_type === 'Rate');
+
+	frm.toggle_display('discount_amount', frm.doc.discount_type === 'Discount Amount');
+	frm.toggle_reqd('discount_amount', frm.doc.discount_type === 'Discount Amount');
+
+	frm.toggle_display('discount_percentage', frm.doc.discount_type === 'Discount Percentage');
+	frm.toggle_reqd('discount_percentage', frm.doc.discount_type === 'Discount Percentage');
+
+	frm.toggle_display('loyalty_point_scheme_section', frm.doc.offer === 'Loyalty Point');
+	frm.toggle_display('loyalty_program', frm.doc.offer === 'Loyalty Point');
+	frm.toggle_reqd('loyalty_program', frm.doc.offer === 'Loyalty Point');
+
+	frm.toggle_display('loyalty_points', frm.doc.offer === 'Loyalty Point');
+	frm.toggle_reqd('loyalty_points', frm.doc.offer === 'Loyalty Point');
+
+	if (frm.doc.offer === 'Grand Total') {
+		frm.set_df_property('discount_type', 'options', ['Discount Percentage']);
+	} else {
+		frm.set_df_property('discount_type', 'options', ['', 'Rate', 'Discount Percentage', 'Discount Amount']);
+	}
+
+	if (frm.doc.apply_on === 'Transaction') {
+		frm.set_df_property('offer', 'options', ['', 'Give Product', 'Grand Total', 'Loyalty Point']);
+	} else {
+		frm.set_df_property('offer', 'options', ['', 'Item Price', 'Give Product', 'Grand Total', 'Loyalty Point']);
+	}
+
+	if (frm.doc.apply_type === 'Item Group' && frm.doc.offer === 'Give Product' && !frm.doc.replace_item && !frm.doc.replace_cheapest_item) {
+		frm.set_value('auto', 0);
+	}
+	if (frm.doc.apply_on !== 'Item Code' || frm.doc.offer !== 'Give Product' || frm.doc.apply_type !== 'Item Code') {
+		frm.set_value('replace_item', 0);
+	}
+	if (frm.doc.apply_on !== 'Item Group' || frm.doc.offer !== 'Give Product' || frm.doc.apply_type !== 'Item Group') {
+		frm.set_value('replace_cheapest_item', 0);
+	}
+
+};
+
+const set_filters = (frm) => {
+	frm.set_query('pos_profile', function () {
+		return {
+			filters: {
+				'company': frm.doc.company,
+			}
+		};
+	});
+	frm.set_query('warehouse', function () {
+		return {
+			filters: {
+				'company': frm.doc.company,
+				'is_group': 0,
+			}
+		};
+	});
+	frm.set_query('loyalty_program', function () {
+		return {
+			filters: {
+				'company': frm.doc.company,
+			}
+		};
+	});
+	frm.set_query('item_group', function () {
+		return {
+			filters: {
+				'is_group': 0,
+			}
+		};
+	});
+	frm.set_query('apply_item_group', function () {
+		return {
+			filters: {
+				'is_group': 0,
+			}
+		};
+	});
+};
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_offer/pos_offer.json b/posawesome/posawesome/doctype/pos_offer/pos_offer.json
new file mode 100644
index 0000000..f552c21
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer/pos_offer.json
@@ -0,0 +1,389 @@
+{
+ "actions": [],
+ "allow_rename": 1,
+ "autoname": "field:title",
+ "creation": "2021-06-06 14:05:24.843820",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "applicability_section",
+  "title",
+  "description",
+  "column_break_4",
+  "disable",
+  "section_break_3",
+  "apply_on",
+  "offer",
+  "company",
+  "pos_profile",
+  "warehouse",
+  "column_break_8",
+  "item",
+  "item_group",
+  "brand",
+  "valid_from",
+  "valid_upto",
+  "coupon_based",
+  "auto",
+  "quantity_and_amount_section",
+  "min_qty",
+  "max_qty",
+  "column_break_16",
+  "min_amt",
+  "max_amt",
+  "apply_for_section",
+  "apply_type",
+  "replace_item",
+  "replace_cheapest_item",
+  "column_break_15",
+  "apply_item_code",
+  "apply_item_group",
+  "less_then",
+  "product_discount_scheme_section",
+  "given_qty",
+  "price_discount_scheme_section",
+  "discount_type",
+  "column_break_26",
+  "rate",
+  "discount_amount",
+  "discount_percentage",
+  "loyalty_point_scheme_section",
+  "loyalty_program",
+  "loyalty_points"
+ ],
+ "fields": [
+  {
+   "fieldname": "applicability_section",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "title",
+   "fieldtype": "Data",
+   "label": "Title",
+   "reqd": 1,
+   "unique": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "disable",
+   "fieldtype": "Check",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Disable"
+  },
+  {
+   "default": "Item Code",
+   "fieldname": "apply_on",
+   "fieldtype": "Select",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Qualifying Transaction / Item",
+   "options": "\nItem Code\nItem Group\nBrand\nTransaction",
+   "reqd": 1
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "in_standard_filter": 1,
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "pos_profile",
+   "fieldtype": "Link",
+   "in_standard_filter": 1,
+   "label": "POS Profile",
+   "options": "POS Profile"
+  },
+  {
+   "fetch_from": "pos_profile.warehouse",
+   "fieldname": "warehouse",
+   "fieldtype": "Link",
+   "in_standard_filter": 1,
+   "label": "Warehouse",
+   "options": "Warehouse",
+   "search_index": 1
+  },
+  {
+   "fieldname": "column_break_8",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "item",
+   "fieldtype": "Link",
+   "label": "Apply Rule On Item Code",
+   "options": "Item"
+  },
+  {
+   "fieldname": "item_group",
+   "fieldtype": "Link",
+   "label": "Apply Rule On Item Group",
+   "options": "Item Group"
+  },
+  {
+   "fieldname": "brand",
+   "fieldtype": "Link",
+   "label": "Apply Rule On Brand",
+   "options": "Brand"
+  },
+  {
+   "default": "0",
+   "fieldname": "min_qty",
+   "fieldtype": "Float",
+   "label": "Min Quantity"
+  },
+  {
+   "default": "0",
+   "fieldname": "max_qty",
+   "fieldtype": "Float",
+   "label": "Max Quantity"
+  },
+  {
+   "fieldname": "column_break_16",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "min_amt",
+   "fieldtype": "Float",
+   "label": "Min Amount"
+  },
+  {
+   "fieldname": "max_amt",
+   "fieldtype": "Float",
+   "label": "Max Amount"
+  },
+  {
+   "default": "Today",
+   "fieldname": "valid_from",
+   "fieldtype": "Date",
+   "label": "Valid From",
+   "reqd": 1
+  },
+  {
+   "fieldname": "valid_upto",
+   "fieldtype": "Date",
+   "label": "Valid Upto"
+  },
+  {
+   "fieldname": "apply_for_section",
+   "fieldtype": "Section Break",
+   "label": "Apply For"
+  },
+  {
+   "fieldname": "apply_type",
+   "fieldtype": "Select",
+   "label": "Apply Type",
+   "options": "\nItem Code\nItem Group"
+  },
+  {
+   "fieldname": "column_break_15",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "apply_item_code",
+   "fieldtype": "Link",
+   "label": "Item Code",
+   "options": "Item"
+  },
+  {
+   "fieldname": "apply_item_group",
+   "fieldtype": "Link",
+   "label": "Item Group",
+   "options": "Item Group"
+  },
+  {
+   "fieldname": "price_discount_scheme_section",
+   "fieldtype": "Section Break",
+   "label": "Price Discount Scheme "
+  },
+  {
+   "fieldname": "discount_type",
+   "fieldtype": "Select",
+   "label": "Discount Type",
+   "options": "\nRate\nDiscount Percentage\nDiscount Amount"
+  },
+  {
+   "fieldname": "column_break_26",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "rate",
+   "fieldtype": "Float",
+   "label": "Rate"
+  },
+  {
+   "fieldname": "discount_amount",
+   "fieldtype": "Float",
+   "label": "Discount Amount"
+  },
+  {
+   "fieldname": "discount_percentage",
+   "fieldtype": "Float",
+   "label": "Discount Percentage"
+  },
+  {
+   "fieldname": "product_discount_scheme_section",
+   "fieldtype": "Section Break",
+   "label": "Product Discount Scheme"
+  },
+  {
+   "fieldname": "loyalty_point_scheme_section",
+   "fieldtype": "Section Break",
+   "label": "Loyalty Point Scheme"
+  },
+  {
+   "fieldname": "loyalty_program",
+   "fieldtype": "Link",
+   "label": "Default Loyalty Program",
+   "options": "Loyalty Program"
+  },
+  {
+   "fieldname": "loyalty_points",
+   "fieldtype": "Int",
+   "label": "Loyalty Points"
+  },
+  {
+   "fieldname": "given_qty",
+   "fieldtype": "Float",
+   "label": "Given Quantity"
+  },
+  {
+   "fieldname": "quantity_and_amount_section",
+   "fieldtype": "Section Break",
+   "label": "Quantity and Amount Conditions"
+  },
+  {
+   "fieldname": "offer",
+   "fieldtype": "Select",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Promo Type",
+   "options": "Item Price\nGive Product\nGrand Total\nLoyalty Point",
+   "reqd": 1
+  },
+  {
+   "fieldname": "section_break_3",
+   "fieldtype": "Section Break"
+  },
+  {
+   "default": "1",
+   "fieldname": "auto",
+   "fieldtype": "Check",
+   "label": "Auto Apply"
+  },
+  {
+   "fieldname": "description",
+   "fieldtype": "Small Text",
+   "label": "Description",
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_4",
+   "fieldtype": "Column Break"
+  },
+  {
+   "default": "0",
+   "fieldname": "replace_item",
+   "fieldtype": "Check",
+   "label": "Replace Same Item"
+  },
+  {
+   "default": "0",
+   "fieldname": "replace_cheapest_item",
+   "fieldtype": "Check",
+   "label": "Replace Cheapest Item"
+  },
+  {
+   "fieldname": "less_then",
+   "fieldtype": "Float",
+   "label": "Item Rate Should Less Then"
+  },
+  {
+   "default": "0",
+   "fieldname": "coupon_based",
+   "fieldtype": "Check",
+   "label": "Coupon Code Based"
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "modified": "2021-07-25 17:09:55.634113",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Offer",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales User",
+   "share": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Master Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts Manager",
+   "share": 1,
+   "write": 1
+  }
+ ],
+ "show_name_in_global_search": 1,
+ "show_preview_popup": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_offer/pos_offer.py b/posawesome/posawesome/doctype/pos_offer/pos_offer.py
new file mode 100644
index 0000000..b2c4203
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer/pos_offer.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class POSOffer(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_offer/test_pos_offer.py b/posawesome/posawesome/doctype/pos_offer/test_pos_offer.py
new file mode 100644
index 0000000..5975c72
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer/test_pos_offer.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2021, Youssef Restom and Contributors
+# See license.txt
+from __future__ import unicode_literals
+
+# import frappe
+import unittest
+
+class TestPOSOffer(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_offer_detail/__init__.py b/posawesome/posawesome/doctype/pos_offer_detail/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.json b/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.json
new file mode 100644
index 0000000..6e6d39e
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.json
@@ -0,0 +1,109 @@
+{
+ "actions": [],
+ "creation": "2021-06-06 14:55:34.840650",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "offer_name",
+  "row_id",
+  "apply_on",
+  "offer",
+  "items",
+  "give_item",
+  "give_item_row_id",
+  "offer_applied",
+  "coupon_based",
+  "coupon"
+ ],
+ "fields": [
+  {
+   "fieldname": "offer_name",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Offer Name",
+   "options": "POS Offer",
+   "read_only": 1
+  },
+  {
+   "fieldname": "apply_on",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "label": "Apply On",
+   "read_only": 1
+  },
+  {
+   "fieldname": "offer",
+   "fieldtype": "Data",
+   "in_list_view": 1,
+   "label": "Offer",
+   "read_only": 1
+  },
+  {
+   "default": "1",
+   "fieldname": "offer_applied",
+   "fieldtype": "Check",
+   "in_list_view": 1,
+   "label": "Offer Applied",
+   "read_only": 1
+  },
+  {
+   "fieldname": "row_id",
+   "fieldtype": "Data",
+   "label": "Row ID",
+   "read_only": 1
+  },
+  {
+   "fieldname": "items",
+   "fieldtype": "Small Text",
+   "label": "Items",
+   "no_copy": 1,
+   "print_hide": 1,
+   "read_only": 1
+  },
+  {
+   "fieldname": "give_item",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Give Item",
+   "options": "Item",
+   "read_only": 1
+  },
+  {
+   "fieldname": "give_item_row_id",
+   "fieldtype": "Data",
+   "label": "Give Item Row ID",
+   "read_only": 1
+  },
+  {
+   "fieldname": "coupon",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Coupon",
+   "options": "POS Coupon",
+   "read_only": 1
+  },
+  {
+   "default": "0",
+   "fetch_from": "offer_name.coupon_based",
+   "fetch_if_empty": 1,
+   "fieldname": "coupon_based",
+   "fieldtype": "Check",
+   "label": "Coupon Based",
+   "read_only": 1
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "istable": 1,
+ "links": [],
+ "modified": "2021-07-25 17:12:41.138596",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Offer Detail",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.py b/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.py
new file mode 100644
index 0000000..ca1f2ee
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_offer_detail/pos_offer_detail.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class POSOfferDetail(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/__init__.py b/posawesome/posawesome/doctype/pos_opening_shift/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.js b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.js
new file mode 100644
index 0000000..3b36ce3
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.js
@@ -0,0 +1,60 @@
+// Copyright (c) 2020, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('POS Opening Shift', {
+	setup(frm) {
+		if (frm.doc.docstatus == 0) {
+			frm.trigger('set_posting_date_read_only');
+			frm.set_value('period_start_date', frappe.datetime.now_datetime());
+			frm.set_value('user', frappe.session.user);
+		}
+		frm.set_query("user", function(doc) {
+			return {
+				query: "posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.get_cashiers",
+				filters: { 'parent': doc.pos_profile }
+			};
+		});
+		frm.set_query("pos_profile", function(doc) {
+			return {
+				filters: { 'company': doc.company}
+			};
+		});
+	},
+
+	refresh(frm) {
+		// set default posting date / time
+		if(frm.doc.docstatus == 0) {
+			if(!frm.doc.posting_date) {
+				frm.set_value('posting_date', frappe.datetime.nowdate());
+			}
+			frm.trigger('set_posting_date_read_only');
+		}
+	},
+
+	set_posting_date_read_only(frm) {
+		if(frm.doc.docstatus == 0 && frm.doc.set_posting_date) {
+			frm.set_df_property('posting_date', 'read_only', 0);
+		} else {
+			frm.set_df_property('posting_date', 'read_only', 1);
+		}
+	},
+
+	set_posting_date(frm) {
+		frm.trigger('set_posting_date_read_only');
+	},
+
+	pos_profile: (frm) => {
+		if (frm.doc.pos_profile) {
+			frappe.db.get_doc("POS Profile", frm.doc.pos_profile)
+				.then(({ payments }) => {
+					if (payments.length) {
+						frm.doc.balance_details = [];
+						payments.forEach(({ mode_of_payment }) => {
+							frm.add_child("balance_details", { mode_of_payment });
+						})
+						frm.refresh_field("balance_details");
+					}
+				});
+		}
+	}
+});
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.json b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.json
new file mode 100644
index 0000000..a6bf4c2
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.json
@@ -0,0 +1,184 @@
+{
+ "actions": [],
+ "autoname": "POSA-OS-.YY.-.#######",
+ "creation": "2020-09-22 14:15:10.599968",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "period_start_date",
+  "period_end_date",
+  "status",
+  "column_break_3",
+  "posting_date",
+  "set_posting_date",
+  "section_break_5",
+  "company",
+  "pos_profile",
+  "pos_closing_shift",
+  "column_break_7",
+  "user",
+  "opening_balance_details_section",
+  "balance_details",
+  "section_break_9",
+  "amended_from"
+ ],
+ "fields": [
+  {
+   "fieldname": "period_start_date",
+   "fieldtype": "Datetime",
+   "in_list_view": 1,
+   "label": "Period Start Date",
+   "reqd": 1
+  },
+  {
+   "fieldname": "period_end_date",
+   "fieldtype": "Date",
+   "label": "Period End Date",
+   "read_only": 1
+  },
+  {
+   "allow_on_submit": 1,
+   "default": "Draft",
+   "fieldname": "status",
+   "fieldtype": "Select",
+   "hidden": 1,
+   "label": "Status",
+   "options": "Draft\nOpen\nClosed\nCancelled",
+   "read_only": 1
+  },
+  {
+   "fieldname": "column_break_3",
+   "fieldtype": "Column Break"
+  },
+  {
+   "default": "Today",
+   "fieldname": "posting_date",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "label": "Posting Date",
+   "reqd": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "set_posting_date",
+   "fieldtype": "Check",
+   "label": "Set Posting Date"
+  },
+  {
+   "fieldname": "section_break_5",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "pos_profile",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "POS Profile",
+   "options": "POS Profile",
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_7",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "user",
+   "fieldtype": "Link",
+   "label": "Cashier",
+   "options": "User",
+   "reqd": 1
+  },
+  {
+   "fieldname": "opening_balance_details_section",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "balance_details",
+   "fieldtype": "Table",
+   "label": "Opening Balance Details",
+   "options": "POS Opening Shift Detail",
+   "reqd": 1
+  },
+  {
+   "fieldname": "section_break_9",
+   "fieldtype": "Section Break",
+   "read_only": 1
+  },
+  {
+   "fieldname": "amended_from",
+   "fieldtype": "Link",
+   "label": "Amended From",
+   "no_copy": 1,
+   "options": "POS Opening Shift",
+   "print_hide": 1,
+   "read_only": 1
+  },
+  {
+   "allow_on_submit": 1,
+   "fieldname": "pos_closing_shift",
+   "fieldtype": "Data",
+   "label": "POS Closing Shift",
+   "read_only": 1
+  }
+ ],
+ "is_submittable": 1,
+ "links": [],
+ "modified": "2022-11-22 15:04:30.555123",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Opening Shift",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "cancel": 1,
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "cancel": 1,
+   "create": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Manager",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  },
+  {
+   "cancel": 1,
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Administrator",
+   "share": 1,
+   "submit": 1,
+   "write": 1
+  }
+ ],
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.py b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.py
new file mode 100644
index 0000000..9c509e3
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.py
@@ -0,0 +1,26 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+import frappe
+from frappe import _
+from frappe.utils import cint
+from frappe.model.document import Document
+from posawesome.posawesome.api.status_updater import StatusUpdater
+
+
+class POSOpeningShift(StatusUpdater):
+	def validate(self):
+		self.validate_pos_profile_and_cashier()
+		self.set_status()
+
+	def validate_pos_profile_and_cashier(self):
+		if self.company != frappe.db.get_value("POS Profile", self.pos_profile, "company"):
+			frappe.throw(_("POS Profile {} does not belongs to company {}".format(self.pos_profile, self.company)))
+
+		if not cint(frappe.db.get_value("User", self.user, "enabled")):
+			frappe.throw(_("User {} has been disabled. Please select valid user/cashier".format(self.user)))
+
+	def on_submit(self):
+		self.set_status(update=True)
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift_list.js b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift_list.js
new file mode 100644
index 0000000..810110d
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift_list.js
@@ -0,0 +1,16 @@
+// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors
+// License: GNU General Public License v3. See license.txt
+
+// render
+frappe.listview_settings['POS Opening Shift'] = {
+	get_indicator: function(doc) {
+		var status_color = {
+			"Draft": "grey",
+			"Open": "orange",
+			"Closed": "green",
+			"Cancelled": "red"
+
+		};
+		return [__(doc.status), status_color[doc.status], "status,=,"+doc.status];
+	}
+};
diff --git a/posawesome/posawesome/doctype/pos_opening_shift/test_pos_opening_shift.py b/posawesome/posawesome/doctype/pos_opening_shift/test_pos_opening_shift.py
new file mode 100644
index 0000000..c1e3a4b
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift/test_pos_opening_shift.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and Contributors
+# See license.txt
+from __future__ import unicode_literals
+
+# import frappe
+import unittest
+
+class TestPOSOpeningShift(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_opening_shift_detail/__init__.py b/posawesome/posawesome/doctype/pos_opening_shift_detail/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.json b/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.json
new file mode 100644
index 0000000..aee6111
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.json
@@ -0,0 +1,42 @@
+{
+ "actions": [],
+ "creation": "2020-09-22 14:11:51.000467",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "mode_of_payment",
+  "amount"
+ ],
+ "fields": [
+  {
+   "fieldname": "mode_of_payment",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Mode of Payment",
+   "options": "Mode of Payment",
+   "reqd": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Opening Amount",
+   "options": "company:company_currency",
+   "reqd": 1
+  }
+ ],
+ "istable": 1,
+ "links": [],
+ "modified": "2020-09-23 02:29:31.193208",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Opening Shift Detail",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.py b/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.py
new file mode 100644
index 0000000..dedf3a5
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_opening_shift_detail/pos_opening_shift_detail.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class POSOpeningShiftDetail(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/pos_payment_entry_reference/__init__.py b/posawesome/posawesome/doctype/pos_payment_entry_reference/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.json b/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.json
new file mode 100644
index 0000000..5dbbc51
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.json
@@ -0,0 +1,75 @@
+{
+ "actions": [],
+ "creation": "2023-06-12 02:59:56.133380",
+ "default_view": "List",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "payment_entry",
+  "posting_date",
+  "column_break_3",
+  "customer",
+  "paid_amount",
+  "mode_of_payment"
+ ],
+ "fields": [
+  {
+   "fieldname": "payment_entry",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Payment Entry",
+   "options": "Payment Entry",
+   "reqd": 1
+  },
+  {
+   "fetch_from": "pos_invoice.posting_date",
+   "fieldname": "posting_date",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "label": "Date",
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_3",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fetch_from": "pos_invoice.customer",
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Customer",
+   "options": "Customer",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fetch_from": "pos_invoice.grand_total",
+   "fieldname": "paid_amount",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Amount",
+   "reqd": 1
+  },
+  {
+   "fieldname": "mode_of_payment",
+   "fieldtype": "Data",
+   "label": "Mode Of Payment",
+   "reqd": 1
+  }
+ ],
+ "istable": 1,
+ "links": [],
+ "modified": "2023-06-12 02:59:56.133380",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Payment Entry Reference",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.py b/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.py
new file mode 100644
index 0000000..b0c3cda
--- /dev/null
+++ b/posawesome/posawesome/doctype/pos_payment_entry_reference/pos_payment_entry_reference.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2023, Youssef Restom and contributors
+# For license information, please see license.txt
+
+# import frappe
+from frappe.model.document import Document
+
+class POSPaymentEntryReference(Document):
+	pass
diff --git a/posawesome/posawesome/doctype/referral_code/__init__.py b/posawesome/posawesome/doctype/referral_code/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/referral_code/referral_code.js b/posawesome/posawesome/doctype/referral_code/referral_code.js
new file mode 100644
index 0000000..3c1f8b7
--- /dev/null
+++ b/posawesome/posawesome/doctype/referral_code/referral_code.js
@@ -0,0 +1,53 @@
+// Copyright (c) 2021, Youssef Restom and contributors
+// For license information, please see license.txt
+
+frappe.ui.form.on('Referral Code', {
+	setup: function (frm) {
+		frm.set_query("party_type", function () {
+			return {
+				filters: {
+					"name": ["in", ["Customer"]],
+				}
+			};
+		});
+		frm.set_query("customer_offer", function () {
+			return {
+				filters: {
+					"company": frm.doc.company,
+					"coupon_based": 1,
+					"disable": 0,
+				}
+			};
+		});
+		frm.set_query("primary_offer", function () {
+			return {
+				filters: {
+					"company": frm.doc.company,
+					"coupon_based": 1,
+					"disable": 0,
+				}
+			};
+		});
+	},
+	referral_name: function (frm) {
+		if (frm.doc.__islocal === 1) {
+			frm.trigger("make_referral_code");
+		}
+	},
+	make_referral_code: function (frm) {
+		let referral_name = frm.doc.referral_name;
+		let referral_code;
+		if (!referral_name) {
+			frm.doc.referral_name = frm.doc.party + Math.random().toString(5).substring(2, 5).toUpperCase();
+			referral_code = Math.random().toString(12).substring(2, 12).toUpperCase();
+		}
+		else {
+			referral_name = referral_name.replace(/\s/g, '');
+			referral_code = referral_name.toUpperCase().slice(0, 8);
+		}
+		frm.doc.referral_code = referral_code;
+		frm.refresh_field('referral_name');
+		frm.refresh_field('referral_code');
+	},
+
+});
diff --git a/posawesome/posawesome/doctype/referral_code/referral_code.json b/posawesome/posawesome/doctype/referral_code/referral_code.json
new file mode 100644
index 0000000..4c8bd33
--- /dev/null
+++ b/posawesome/posawesome/doctype/referral_code/referral_code.json
@@ -0,0 +1,171 @@
+{
+ "actions": [],
+ "autoname": "field:referral_name",
+ "creation": "2021-07-29 02:49:20.639686",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "disabled",
+  "section_break_2",
+  "company",
+  "customer",
+  "customer_name",
+  "mobile_no",
+  "email_id",
+  "campaign",
+  "column_break_5",
+  "referral_name",
+  "referral_code",
+  "customer_offer",
+  "primary_offer"
+ ],
+ "fields": [
+  {
+   "fieldname": "campaign",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "in_standard_filter": 1,
+   "label": "Campaign",
+   "options": "Campaign"
+  },
+  {
+   "fieldname": "column_break_5",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fieldname": "referral_name",
+   "fieldtype": "Data",
+   "label": "Referral Name",
+   "unique": 1
+  },
+  {
+   "fieldname": "referral_code",
+   "fieldtype": "Data",
+   "label": "Referral Code",
+   "set_only_once": 1,
+   "unique": 1
+  },
+  {
+   "default": "0",
+   "fieldname": "disabled",
+   "fieldtype": "Check",
+   "label": "Disabled"
+  },
+  {
+   "fieldname": "section_break_2",
+   "fieldtype": "Section Break"
+  },
+  {
+   "fieldname": "company",
+   "fieldtype": "Link",
+   "label": "Company",
+   "options": "Company",
+   "reqd": 1
+  },
+  {
+   "fieldname": "customer_offer",
+   "fieldtype": "Link",
+   "label": "Final Customer Offer",
+   "options": "POS Offer",
+   "reqd": 1
+  },
+  {
+   "fieldname": "primary_offer",
+   "fieldtype": "Link",
+   "label": "Primary Customer Offer",
+   "options": "POS Offer"
+  },
+  {
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "label": "Customer",
+   "options": "Customer",
+   "reqd": 1
+  },
+  {
+   "fetch_from": "customer.customer_name",
+   "fieldname": "customer_name",
+   "fieldtype": "Data",
+   "label": "Customer Name",
+   "read_only": 1
+  },
+  {
+   "fetch_from": "customer.mobile_no",
+   "fetch_if_empty": 1,
+   "fieldname": "mobile_no",
+   "fieldtype": "Data",
+   "label": "Mobile NO",
+   "options": "Phone"
+  },
+  {
+   "fetch_from": "customer.email_id",
+   "fetch_if_empty": 1,
+   "fieldname": "email_id",
+   "fieldtype": "Data",
+   "label": "Email ID",
+   "options": "Email"
+  }
+ ],
+ "index_web_pages_for_search": 1,
+ "links": [],
+ "modified": "2021-07-29 22:28:54.158213",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Referral Code",
+ "owner": "Administrator",
+ "permissions": [
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Sales Manager",
+   "share": 1,
+   "write": 1
+  },
+  {
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Website Manager",
+   "share": 1,
+   "write": 1
+  }
+ ],
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "title_field": "referral_code",
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/referral_code/referral_code.py b/posawesome/posawesome/doctype/referral_code/referral_code.py
new file mode 100644
index 0000000..d37254c
--- /dev/null
+++ b/posawesome/posawesome/doctype/referral_code/referral_code.py
@@ -0,0 +1,38 @@
+# Copyright (c) 2021, Youssef Restom and contributors
+# For license information, please see license.txt
+
+import frappe
+from frappe import _
+from frappe.model.document import Document
+from frappe.utils import strip
+
+
+class ReferralCode(Document):
+    def autoname(self):
+        if not self.referral_name:
+            self.referral_name = (
+                strip(self.customer) + "-" + frappe.generate_hash()[:5].upper()
+            )
+            self.name = self.referral_name
+        else:
+            self.referral_name = strip(self.referral_name)
+            self.name = self.referral_name
+
+        if not self.referral_code:
+            self.referral_code = frappe.generate_hash()[:10].upper()
+
+    def validate(self):
+        pass
+
+
+def create_referral_code(
+    company, customer, customer_offer, primary_offer=None, campaign=None
+):
+    doc = frappe.new_doc("Referral Code")
+    doc.company = company
+    doc.customer = customer
+    doc.customer_offer = customer_offer
+    doc.primary_offer = primary_offer
+    doc.campaign = campaign
+    doc.save(ignore_permissions=True)
+    return doc
diff --git a/posawesome/posawesome/doctype/referral_code/test_referral_code.py b/posawesome/posawesome/doctype/referral_code/test_referral_code.py
new file mode 100644
index 0000000..ac5d628
--- /dev/null
+++ b/posawesome/posawesome/doctype/referral_code/test_referral_code.py
@@ -0,0 +1,8 @@
+# Copyright (c) 2021, Youssef Restom and Contributors
+# See license.txt
+
+# import frappe
+import unittest
+
+class TestReferralCode(unittest.TestCase):
+	pass
diff --git a/posawesome/posawesome/doctype/sales_invoice_reference/__init__.py b/posawesome/posawesome/doctype/sales_invoice_reference/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.json b/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.json
new file mode 100644
index 0000000..1f026f4
--- /dev/null
+++ b/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.json
@@ -0,0 +1,67 @@
+{
+ "actions": [],
+ "creation": "2020-09-29 02:58:12.486831",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "sales_invoice",
+  "posting_date",
+  "column_break_3",
+  "customer",
+  "grand_total"
+ ],
+ "fields": [
+  {
+   "fieldname": "sales_invoice",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Sales Invoice",
+   "options": "Sales Invoice",
+   "reqd": 1
+  },
+  {
+   "fetch_from": "pos_invoice.posting_date",
+   "fieldname": "posting_date",
+   "fieldtype": "Date",
+   "in_list_view": 1,
+   "label": "Date",
+   "reqd": 1
+  },
+  {
+   "fieldname": "column_break_3",
+   "fieldtype": "Column Break"
+  },
+  {
+   "fetch_from": "pos_invoice.customer",
+   "fieldname": "customer",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Customer",
+   "options": "Customer",
+   "read_only": 1,
+   "reqd": 1
+  },
+  {
+   "fetch_from": "pos_invoice.grand_total",
+   "fieldname": "grand_total",
+   "fieldtype": "Currency",
+   "in_list_view": 1,
+   "label": "Amount",
+   "reqd": 1
+  }
+ ],
+ "istable": 1,
+ "links": [],
+ "modified": "2023-06-12 02:57:24.861219",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "Sales Invoice Reference",
+ "owner": "Administrator",
+ "permissions": [],
+ "quick_entry": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "track_changes": 1
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.py b/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.py
new file mode 100644
index 0000000..c2f4b73
--- /dev/null
+++ b/posawesome/posawesome/doctype/sales_invoice_reference/sales_invoice_reference.py
@@ -0,0 +1,10 @@
+# -*- coding: utf-8 -*-
+# Copyright (c) 2020, Youssef Restom and contributors
+# For license information, please see license.txt
+
+from __future__ import unicode_literals
+# import frappe
+from frappe.model.document import Document
+
+class SalesInvoiceReference(Document):
+	pass
diff --git a/posawesome/posawesome/page/__init__.py b/posawesome/posawesome/page/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/page/posapp/__init__.py b/posawesome/posawesome/page/posapp/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/posawesome/page/posapp/onscan.js b/posawesome/posawesome/page/posapp/onscan.js
new file mode 100644
index 0000000..428dc75
--- /dev/null
+++ b/posawesome/posawesome/page/posapp/onscan.js
@@ -0,0 +1 @@
+!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t()):e.onScan=t()}(this,function(){var d={attachTo:function(e,t){if(void 0!==e.scannerDetectionData)throw new Error("onScan.js is already initialized for DOM element "+e);var n={onScan:function(e,t){},onScanError:function(e){},onKeyProcess:function(e,t){},onKeyDetect:function(e,t){},onPaste:function(e,t){},keyCodeMapper:function(e){return d.decodeKeyEvent(e)},onScanButtonLongPress:function(){},scanButtonKeyCode:!1,scanButtonLongPressTime:500,timeBeforeScanTest:100,avgTimeByChar:30,minLength:6,suffixKeyCodes:[9,13],prefixKeyCodes:[],ignoreIfFocusOn:!1,stopPropagation:!1,preventDefault:!1,captureEvents:!1,reactToKeydown:!0,reactToPaste:!1,singleScanQty:1};return t=this._mergeOptions(n,t),e.scannerDetectionData={options:t,vars:{firstCharTime:0,lastCharTime:0,accumulatedString:"",testTimer:!1,longPressTimeStart:0,longPressed:!1}},!0===t.reactToPaste&&e.addEventListener("paste",this._handlePaste,t.captureEvents),!1!==t.scanButtonKeyCode&&e.addEventListener("keyup",this._handleKeyUp,t.captureEvents),!0!==t.reactToKeydown&&!1===t.scanButtonKeyCode||e.addEventListener("keydown",this._handleKeyDown,t.captureEvents),this},detachFrom:function(e){e.scannerDetectionData.options.reactToPaste&&e.removeEventListener("paste",this._handlePaste),!1!==e.scannerDetectionData.options.scanButtonKeyCode&&e.removeEventListener("keyup",this._handleKeyUp),e.removeEventListener("keydown",this._handleKeyDown),e.scannerDetectionData=void 0},getOptions:function(e){return e.scannerDetectionData.options},setOptions:function(e,t){switch(e.scannerDetectionData.options.reactToPaste){case!0:!1===t.reactToPaste&&e.removeEventListener("paste",this._handlePaste);break;case!1:!0===t.reactToPaste&&e.addEventListener("paste",this._handlePaste)}switch(e.scannerDetectionData.options.scanButtonKeyCode){case!1:!1!==t.scanButtonKeyCode&&e.addEventListener("keyup",this._handleKeyUp);break;default:!1===t.scanButtonKeyCode&&e.removeEventListener("keyup",this._handleKeyUp)}return e.scannerDetectionData.options=this._mergeOptions(e.scannerDetectionData.options,t),this._reinitialize(e),this},decodeKeyEvent:function(e){var t=this._getNormalizedKeyNum(e);switch(!0){case 48<=t&&t<=90:case 106<=t&&t<=111:if(void 0!==e.key&&""!==e.key)return e.key;var n=String.fromCharCode(t);switch(e.shiftKey){case!1:n=n.toLowerCase();break;case!0:n=n.toUpperCase()}return n;case 96<=t&&t<=105:return t-96}return""},simulate:function(e,t){return this._reinitialize(e),Array.isArray(t)?t.forEach(function(e){var t={};"object"!=typeof e&&"function"!=typeof e||null===e?t.keyCode=parseInt(e):t=e;var n=new KeyboardEvent("keydown",t);document.dispatchEvent(n)}):this._validateScanCode(e,t),this},_reinitialize:function(e){var t=e.scannerDetectionData.vars;t.firstCharTime=0,t.lastCharTime=0,t.accumulatedString=""},_isFocusOnIgnoredElement:function(e){var t=e.scannerDetectionData.options.ignoreIfFocusOn;if(!t)return!1;var n=document.activeElement;if(Array.isArray(t)){for(var a=0;a<t.length;a++)if(!0===n.matches(t[a]))return!0}else if(n.matches(t))return!0;return!1},_validateScanCode:function(e,t){var n,a=e.scannerDetectionData,i=a.options,o=a.options.singleScanQty,r=a.vars.firstCharTime,s=a.vars.lastCharTime,c={};switch(!0){case t.length<i.minLength:c={message:"Receieved code is shorter then minimal length"};break;case s-r>t.length*i.avgTimeByChar:c={message:"Receieved code was not entered in time"};break;default:return i.onScan.call(e,t,o),n=new CustomEvent("scan",{detail:{scanCode:t,qty:o}}),e.dispatchEvent(n),d._reinitialize(e),!0}return c.scanCode=t,c.scanDuration=s-r,c.avgTimeByChar=i.avgTimeByChar,c.minLength=i.minLength,i.onScanError.call(e,c),n=new CustomEvent("scanError",{detail:c}),e.dispatchEvent(n),d._reinitialize(e),!1},_mergeOptions:function(e,t){var n,a={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&(a[n]=e[n]);for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(a[n]=t[n]);return a},_getNormalizedKeyNum:function(e){return e.which||e.keyCode},_handleKeyDown:function(e){var t=d._getNormalizedKeyNum(e),n=this.scannerDetectionData.options,a=this.scannerDetectionData.vars,i=!1;if(!1!==n.onKeyDetect.call(this,t,e)&&!d._isFocusOnIgnoredElement(this))if(!1===n.scanButtonKeyCode||t!=n.scanButtonKeyCode){switch(!0){case a.firstCharTime&&-1!==n.suffixKeyCodes.indexOf(t):e.preventDefault(),e.stopImmediatePropagation(),i=!0;break;case!a.firstCharTime&&-1!==n.prefixKeyCodes.indexOf(t):e.preventDefault(),e.stopImmediatePropagation(),i=!1;break;default:var o=n.keyCodeMapper.call(this,e);if(null===o)return;a.accumulatedString+=o,n.preventDefault&&e.preventDefault(),n.stopPropagation&&e.stopImmediatePropagation(),i=!1}a.firstCharTime||(a.firstCharTime=Date.now()),a.lastCharTime=Date.now(),a.testTimer&&clearTimeout(a.testTimer),i?(d._validateScanCode(this,a.accumulatedString),a.testTimer=!1):a.testTimer=setTimeout(d._validateScanCode,n.timeBeforeScanTest,this,a.accumulatedString),n.onKeyProcess.call(this,o,e)}else a.longPressed||(a.longPressTimer=setTimeout(n.onScanButtonLongPress,n.scanButtonLongPressTime,this),a.longPressed=!0)},_handlePaste:function(e){if(!d._isFocusOnIgnoredElement(this)){e.preventDefault(),oOptions.stopPropagation&&e.stopImmediatePropagation();var t=(event.clipboardData||window.clipboardData).getData("text");this.scannerDetectionData.options.onPaste.call(this,t,event);var n=this.scannerDetectionData.vars;n.firstCharTime=0,n.lastCharTime=0,d._validateScanCode(this,t)}},_handleKeyUp:function(e){d._isFocusOnIgnoredElement(this)||d._getNormalizedKeyNum(e)==this.scannerDetectionData.options.scanButtonKeyCode&&(clearTimeout(this.scannerDetectionData.vars.longPressTimer),this.scannerDetectionData.vars.longPressed=!1)},isScanInProgressFor:function(e){return 0<e.scannerDetectionData.vars.firstCharTime}};return d});
\ No newline at end of file
diff --git a/posawesome/posawesome/page/posapp/posapp.js b/posawesome/posawesome/page/posapp/posapp.js
new file mode 100644
index 0000000..3574de3
--- /dev/null
+++ b/posawesome/posawesome/page/posapp/posapp.js
@@ -0,0 +1,105 @@
+{% include "posawesome/posawesome/page/posapp/onscan.js" %}
+frappe.pages['posapp'].on_page_load = function (wrapper) {
+	var page = frappe.ui.make_app_page({
+		parent: wrapper,
+		title: 'POS Awesome',
+		single_column: true
+	});
+
+	this.page.$PosApp = new frappe.PosApp.posapp(this.page);
+
+	$('div.navbar-fixed-top').find('.container').css('padding', '0');
+
+	$("head").append("<link href='/assets/posawesome/node_modules/vuetify/dist/vuetify.min.css' rel='stylesheet'>");
+	$("head").append("<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css'>");
+	$("head").append("<link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900' />");
+};
+
+//Only if PT as we are not being able to load from pt.csv
+if (frappe.boot.lang == "pt") {
+	$.extend(
+		__messages, {
+		"Type": "Tipo",
+		"is Offer": "é Oferta",
+		"Total Qty": "Qtd Total",
+		"Customer": "Cliente",
+		"Items Group": "Grupo de Itens",
+		"Search Items": "Procurar Itens",
+		"Additional Discount": "Desconto Adicional",
+		"Items Discounts": "Descontos de Itens",
+		"HOLD": "EM PAUSA",
+		"Hold": "Em Pausa",
+		"RETURN": "DEVOLUÇÃO",
+		"Return": "Devolução",
+		"CANCEL": "CANCELAR",
+		"NEW": "NOVO",
+		"PAY": "PAGAR",
+		"Order": "Ordem",
+		"Available QTY": "QTD Disponivel",
+		"QTY": "QTD",
+		"Discount Percentage": "Percentagem de Desconto",
+		"Price list Rate": "Taxa de Lista de Preço",
+		"Group": "Grupo",
+		"Stock QTY": "QTD de Stock",
+		"Stock UOM": "UDM de Stock",
+		"Card": "Cartão",
+		"Offers": "Ofertas",
+		"Applied": "Aplicadas",
+		"There is no Customer !": "Não tem Cliente !",
+		"There is no Items !": "Não tem Itens !",
+		"The existing quantity of item {0} is not enough": "A quantidade existente do item {0} não é suficiente",
+		"Maximum discount for Item {0} is {1}%": "Desconto Maximo para o Item {0} é {1}%",
+		"Selected serial numbers of item {0} is incorrect": "Numeros de serie selecionado do item {0} é incorrecto",
+		"The existing batch quantity of item {0} is not enough": "A quantidade existente do lote para o item {0} não é suficiente",
+		"The discount should not be higher than {0}%": "O desconto não deve ser maior que {0}%",
+		"Return Invoice Total Not Correct": "Total da Devolução da Factura não está Correcto",
+		"Return Invoice Total should not be higher than {0}": "Total da Devolução da Factura não deve maior que {0}",
+		"The item {0} cannot be returned because it is not in the invoice {1}": "O item {0} não pode ser devolvido porque não está na factura {1}",
+		"The QTY of the item {0} cannot be greater than {1}": "A QTD do item {0} não pode ser maior que {1}",
+		"Selected Serial No QTY is {0} it should be {1}": "A QTD selecionada do Num. de Serie é {0} deveria ser {1}",
+		"Loyalty Point Offer Applied": "Oferta de Pontos de Lealdade Aplicada",
+		"Loyalty Points": "Pontos de Lealdade",
+		"Paid Amount": "Valor Pago",
+		"To Be Paid": "A ser Pago",
+		"Cash": "Numerário",
+		"Tax and Charges": "Taxas e Impostos",
+		"Discount Amount": "Valor de Desconto",
+		"Total Amount": "Valor Total",
+		"Totoal Amount": "Valor Total",
+		"Grand Amount": "Total Geral",
+		"Back": "Voltar",
+		"Submit Payments": "Submeter Pagamentos",
+		"Give Item": "Entregar Item",
+		"New Offer Available": "Nova Oferta Disponivel",
+		"POS Offers": "Ofertas POS",
+		"Customer contact created successfully.": "Contacto de Cliente criado com sucesso.",
+		"Customer Address created successfully.": "Endereço de Cliente criado com sucesso.",
+		"Customer contact updated successfully.": "Contacto de Cliente actualizacdo com sucesso.",
+		"Offer": "Oferta",
+		"Apply On": "Aplicar Em",
+		"Offer Applied": "Oferta Aplicada",
+		"Opening Amount": "Valor de Abertura",
+		"Closing Amount": "Valor de Fecho",
+		"Expected Amount": "Valor Esperado",
+		"Difference": "Diferença",
+		"Close": "Fechar",
+		"Submit": "Submeter",
+		"Closing POS Shift": "Fechando Turno do POS",
+		"Select Hold Invoice": "Selecionar Factura em Pausa",
+		"Customer Info": "Info do Cliente",
+		"Add New Address": "Adicionar Novo Endereço",
+		"New Customer": "Novo Cliente",
+		"Create POS Opening Shift": "Criar Turno de Abertura POS",
+		"Select Return Invoice": "Selecione a Factura para Devolução",
+		"Close Shift": "Fechar Turno",
+		"Pages": "Paginas",
+		"Customer not found": "Cliente não encontrado",
+		"Customer Name": "Nome do Cliente",
+		"Batch No Available QTY": "QTD Disponivel para o Lote",
+		"Batch No Expiry Date": "Data de Expiração do Lote",
+		"Batch No": "Num. do Lote",
+		"Use Customer Credit": "Usar Crédito Cliente",
+		"Is Credit Sale": "É Venda a Crédito",
+		"Due Date": "Data de Expiração",
+	});
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/page/posapp/posapp.json b/posawesome/posawesome/page/posapp/posapp.json
new file mode 100644
index 0000000..0febf23
--- /dev/null
+++ b/posawesome/posawesome/page/posapp/posapp.json
@@ -0,0 +1,35 @@
+{
+ "content": null,
+ "creation": "2020-09-13 03:04:25.020107",
+ "docstatus": 0,
+ "doctype": "Page",
+ "idx": 0,
+ "modified": "2020-09-23 14:53:30.009891",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "posapp",
+ "owner": "Administrator",
+ "page_name": "posapp",
+ "roles": [
+  {
+   "role": "Sales User"
+  },
+  {
+   "role": "Sales Manager"
+  },
+  {
+   "role": "System Manager"
+  },
+  {
+   "role": "Accounts Manager"
+  },
+  {
+   "role": "Accounts User"
+  }
+ ],
+ "script": null,
+ "standard": "Yes",
+ "style": null,
+ "system_page": 0,
+ "title": "POS Awesome"
+}
\ No newline at end of file
diff --git a/posawesome/posawesome/workspace/pos_awesome/pos_awesome.json b/posawesome/posawesome/workspace/pos_awesome/pos_awesome.json
new file mode 100644
index 0000000..74cd9ca
--- /dev/null
+++ b/posawesome/posawesome/workspace/pos_awesome/pos_awesome.json
@@ -0,0 +1,167 @@
+{
+ "charts": [],
+ "content": "[{\"id\":\"cJigdSD9mh\",\"type\":\"header\",\"data\":{\"text\":\"<span class=\\\"h4\\\">POS Awesome</span>\",\"col\":12}},{\"id\":\"4D2sc3CbN3\",\"type\":\"shortcut\",\"data\":{\"shortcut_name\":\"POS Awesome App\",\"col\":3}},{\"id\":\"nVBkn7nfDw\",\"type\":\"spacer\",\"data\":{\"col\":12}},{\"id\":\"-B_qEZqEA6\",\"type\":\"card\",\"data\":{\"card_name\":\"POS\",\"col\":4}},{\"id\":\"tsAHaUCd5l\",\"type\":\"card\",\"data\":{\"card_name\":\"Profile\",\"col\":4}},{\"id\":\"2-3HMkGou3\",\"type\":\"card\",\"data\":{\"card_name\":\"Shift\",\"col\":4}},{\"id\":\"GdPtnrazDS\",\"type\":\"card\",\"data\":{\"card_name\":\"Delivery Charges\",\"col\":4}},{\"id\":\"cABO53xhGv\",\"type\":\"card\",\"data\":{\"card_name\":\"Offers &amp; Coupons\",\"col\":4}}]",
+ "creation": "2022-11-29 14:33:45.038200",
+ "custom_blocks": [],
+ "docstatus": 0,
+ "doctype": "Workspace",
+ "for_user": "",
+ "hide_custom": 0,
+ "icon": "retail",
+ "idx": 0,
+ "is_hidden": 0,
+ "label": "POS Awesome",
+ "links": [
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "POS Awesome",
+   "link_count": 0,
+   "link_to": "posapp",
+   "link_type": "Page",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Profile",
+   "link_count": 1,
+   "onboard": 0,
+   "type": "Card Break"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "POS Profile",
+   "link_count": 0,
+   "link_to": "POS Profile",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Delivery Charges",
+   "link_count": 1,
+   "onboard": 0,
+   "type": "Card Break"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Delivery Charges",
+   "link_count": 0,
+   "link_to": "Delivery Charges",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Offers &amp; Coupons",
+   "link_count": 3,
+   "onboard": 0,
+   "type": "Card Break"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Offers",
+   "link_count": 0,
+   "link_to": "POS Offer",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Coupons",
+   "link_count": 0,
+   "link_to": "POS Coupon",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Referral Code",
+   "link_count": 0,
+   "link_to": "Referral Code",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "POS",
+   "link_count": 1,
+   "onboard": 0,
+   "type": "Card Break"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "POS Awesome App",
+   "link_count": 0,
+   "link_to": "posapp",
+   "link_type": "Page",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Shift",
+   "link_count": 2,
+   "onboard": 0,
+   "type": "Card Break"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Opening Shift",
+   "link_count": 0,
+   "link_to": "POS Opening Shift",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  },
+  {
+   "hidden": 0,
+   "is_query_report": 0,
+   "label": "Closing Shift",
+   "link_count": 0,
+   "link_to": "POS Closing Shift",
+   "link_type": "DocType",
+   "onboard": 0,
+   "type": "Link"
+  }
+ ],
+ "modified": "2023-06-07 17:35:14.887611",
+ "modified_by": "Administrator",
+ "module": "POSAwesome",
+ "name": "POS Awesome",
+ "number_cards": [],
+ "owner": "Administrator",
+ "parent_page": "",
+ "public": 1,
+ "quick_lists": [],
+ "roles": [],
+ "sequence_id": 1.0,
+ "shortcuts": [
+  {
+   "color": "Grey",
+   "doc_view": "List",
+   "label": "POS Awesome App",
+   "link_to": "posapp",
+   "type": "Page"
+  }
+ ],
+ "title": "POS Awesome"
+}
\ No newline at end of file
diff --git a/posawesome/public/js/posapp/Home.vue b/posawesome/public/js/posapp/Home.vue
new file mode 100644
index 0000000..c0c87cf
--- /dev/null
+++ b/posawesome/public/js/posapp/Home.vue
@@ -0,0 +1,53 @@
+<template>
+  <v-app class="container1">
+    <v-main>
+      <Navbar @changePage="setPage($event)"></Navbar>
+      <component :is="page" class="mx-4 md-4"></component>
+    </v-main>
+  </v-app>
+</template>
+
+<script>
+import Navbar from './components/Navbar.vue';
+import POS from './components/pos/Pos.vue';
+import Payments from './components/payments/Pay.vue';
+
+export default {
+  data: function () {
+    return {
+      page: 'POS',
+    };
+  },
+  components: {
+    Navbar,
+    POS,
+    Payments,
+  },
+  methods: {
+    setPage(page) {
+      this.page = page;
+    },
+    remove_frappe_nav() {
+      this.$nextTick(function () {
+        $('.page-head').remove();
+        $('.navbar.navbar-default.navbar-fixed-top').remove();
+      });
+    },
+  },
+  mounted() {
+    this.remove_frappe_nav();
+  },
+  updated() {},
+  created: function () {
+    setTimeout(() => {
+      this.remove_frappe_nav();
+    }, 1000);
+  },
+};
+</script>
+
+<style scoped>
+.container1 {
+  margin-top: 0px;
+}
+</style>
diff --git a/posawesome/public/js/posapp/bus.js b/posawesome/public/js/posapp/bus.js
new file mode 100644
index 0000000..ea032ba
--- /dev/null
+++ b/posawesome/public/js/posapp/bus.js
@@ -0,0 +1,3 @@
+import mitt from 'mitt';
+
+export const evntBus = mitt();
diff --git a/posawesome/public/js/posapp/components/Navbar.vue b/posawesome/public/js/posapp/components/Navbar.vue
new file mode 100644
index 0000000..98ef40d
--- /dev/null
+++ b/posawesome/public/js/posapp/components/Navbar.vue
@@ -0,0 +1,240 @@
+<template>
+  <nav>
+    <v-app-bar app height="40" class="elevation-2">
+      <v-app-bar-nav-icon
+        @click.stop="drawer = !drawer"
+        class="grey--text"
+      ></v-app-bar-nav-icon>
+      <v-img
+        src="/assets/posawesome/js/posapp/components/pos/pos.png"
+        alt="POS Awesome"
+        max-width="32"
+        class="mr-2"
+        color="primary"
+      ></v-img>
+      <v-toolbar-title
+        @click="go_desk"
+        style="cursor: pointer"
+        class="text-uppercase primary--text"
+      >
+        <span class="font-weight-light">pos</span>
+        <span>awesome</span>
+      </v-toolbar-title>
+
+      <v-spacer></v-spacer>
+      <v-btn style="cursor: unset" variant="text" color="primary">
+        <span right>{{ pos_profile.name }}</span>
+      </v-btn>
+      <div class="text-center">
+        <v-menu offset="y">
+          <template v-slot:activator="{ props }">
+            <v-btn color="primary" dark variant="text" v-bind="props">
+              Menu
+            </v-btn>
+          </template>
+          <v-card class="mx-auto" max-width="300" tile>
+            <v-list density="compact" v-model="menu_item">
+              <v-list-item
+                @click="close_shift_dialog"
+                v-if="!pos_profile.posa_hide_closing_shift && menu_item == 0"
+              >
+                <v-icon class="mr-2">mdi-content-save-move-outline</v-icon>
+                <span>{{ __('Close Shift') }}</span>
+              </v-list-item>
+              <v-list-item
+                @click="print_last_invoice"
+                v-if="pos_profile.posa_allow_print_last_invoice && this.last_invoice"
+              >
+                <v-icon class="mr-2">mdi-printer</v-icon>
+                <span>{{ __('Print Last Invoice') }}</span>
+              </v-list-item>
+              <v-divider class="my-0"></v-divider>
+              <v-list-item @click="logOut">
+                <v-icon class="mr-2">mdi-logout</v-icon>
+                <span>{{ __('Logout') }}</span>
+              </v-list-item>
+              <v-list-item @click="go_about">
+                <v-icon class="mr-2">mdi-information-outline</v-icon>
+                <span>{{ __('About') }}</span>
+              </v-list-item>
+            </v-list>
+          </v-card>
+        </v-menu>
+      </div>
+    </v-app-bar>
+    <v-navigation-drawer
+      v-model="drawer"
+      :mini-variant.sync="mini"
+      app
+      class="primary margen-top"
+      width="170"
+    >
+      <v-list>
+        <v-list-item class="px-2">
+          <v-avatar>
+            <v-img :src="company_img"></v-img>
+          </v-avatar>
+          <span class="ml-2">{{ company }}</span>
+          <v-btn icon @click.stop="mini = !mini">
+            <v-icon>mdi-chevron-left</v-icon>
+          </v-btn>
+        </v-list-item>
+        <v-list v-model="item">
+          <v-list-item
+            v-for="(listItem, index) in items"
+            :key="listItem.text"
+            @click="changePage(listItem.text)"
+          >
+            <v-icon class="mr-2">{{ listItem.icon }}</v-icon>
+            <span>{{ listItem.text }}</span>
+          </v-list-item>
+        </v-list>
+      </v-list>
+    </v-navigation-drawer>
+    <v-snackbar v-model="snack" :timeout="5000" :color="snackColor" top right>
+      {{ snackText }}
+    </v-snackbar>
+    <v-dialog v-model="freeze" persistent max-width="290">
+      <v-card>
+        <v-card-title class="text-h5">{{ freezeTitle }}</v-card-title>
+        <v-card-text>{{ freezeMsg }}</v-card-text>
+      </v-card>
+    </v-dialog>
+  </nav>
+</template>
+
+<script>
+import { evntBus } from '../bus';
+
+export default {
+  // components: {MyPopup},
+  data() {
+    return {
+      drawer: false,
+      mini: true,
+      item: 0,
+      items: [{ text: 'POS', icon: 'mdi-network-pos' }],
+      page: '',
+      fav: true,
+      menu: false,
+      message: false,
+      hints: true,
+      menu_item: 0,
+      snack: false,
+      snackColor: '',
+      snackText: '',
+      company: 'POS Awesome',
+      company_img: '/assets/erpnext/images/erpnext-logo.svg',
+      pos_profile: '',
+      freeze: false,
+      freezeTitle: '',
+      freezeMsg: '',
+      last_invoice: '',
+    };
+  },
+  methods: {
+    changePage(key) {
+      thi.emit('changePage', key);
+    },
+    go_desk() {
+      frappe.set_route('/');
+      location.reload();
+    },
+    go_about() {
+      const win = window.open(
+        'https://github.com/yrestom/POS-Awesome',
+        '_blank'
+      );
+      win.focus();
+    },
+    close_shift_dialog() {
+      evntBus.emit('open_closing_dialog');
+    },
+    show_mesage(data) {
+      this.snack = true;
+      this.snackColor = data.color;
+      this.snackText = data.text;
+    },
+    logOut() {
+      var me = this;
+      me.logged_out = true;
+      return frappe.call({
+        method: 'logout',
+        callback: function (r) {
+          if (r.exc) {
+            return;
+          }
+          frappe.set_route('/login');
+          location.reload();
+        },
+      });
+    },
+    print_last_invoice() {
+      if (!this.last_invoice) return;
+      const print_format =
+        this.pos_profile.print_format_for_online ||
+        this.pos_profile.print_format;
+      const letter_head = this.pos_profile.letter_head || 0;
+      const url =
+        frappe.urllib.get_base_url() +
+        '/printview?doctype=Sales%20Invoice&name=' +
+        this.last_invoice +
+        '&trigger_print=1' +
+        '&format=' +
+        print_format +
+        '&no_letterhead=' +
+        letter_head;
+      const printWindow = window.open(url, 'Print');
+      printWindow.addEventListener(
+        'load',
+        function () {
+          printWindow.print();
+        },
+        true
+      );
+    },
+  },
+  created: function () {
+    this.$nextTick(function () {
+      evntBus.on('show_mesage', (data) => {
+        this.show_mesage(data);
+      });
+      evntBus.on('set_company', (data) => {
+        this.company = data.name;
+        this.company_img = data.company_logo
+          ? data.company_logo
+          : this.company_img;
+      });
+      evntBus.on('register_pos_profile', (data) => {
+        this.pos_profile = data.pos_profile;
+        const payments = { text: 'Payments', icon: 'mdi-cash-register' };
+        if (
+          this.pos_profile.posa_use_pos_awesome_payments &&
+          this.items.length !== 2
+        ) {
+          this.items.push(payments);
+        }
+      });
+      evntBus.on('set_last_invoice', (data) => {
+        this.last_invoice = data;
+      });
+      evntBus.on('freeze', (data) => {
+        this.freeze = true;
+        this.freezeTitle = data.title;
+        this.freezeMsg = data.msg;
+      });
+      evntBus.on('unfreeze', () => {
+        this.freeze = false;
+        this.freezTitle = '';
+        this.freezeMsg = '';
+      });
+    });
+  },
+};
+</script>
+
+<style scoped>
+.margen-top {
+  margin-top: 0px;
+}
+</style>
diff --git a/posawesome/public/js/posapp/components/payments/Pay.vue b/posawesome/public/js/posapp/components/payments/Pay.vue
new file mode 100644
index 0000000..bae80af
--- /dev/null
+++ b/posawesome/public/js/posapp/components/payments/Pay.vue
@@ -0,0 +1,815 @@
+<template>
+  <div fluid>
+    <v-row v-show="!dialog">
+      <v-col md="8" cols="12" class="pb-2 pr-0">
+        <v-card
+          class="main mx-auto grey lighten-5 mt-3 p-3 pb-16 overflow-y-auto"
+          style="max-height: 94vh; height: 94vh"
+        >
+          <Customer></Customer>
+          <v-divider></v-divider>
+          <div>
+            <v-row>
+              <v-col md="7" cols="12">
+                <p>
+                  <strong>{{ __("Invoices") }}</strong>
+                  <span v-if="total_outstanding_amount" class="primary--text"
+                    >{{ __("- Total Outstanding") }} :
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(total_outstanding_amount) }}</span
+                  >
+                </p>
+              </v-col>
+              <v-col md="5" cols="12">
+                <p v-if="total_selected_invoices" class="golden--text text-end">
+                  <span>{{ __("Total Selected :") }}</span>
+                  <span>
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(total_selected_invoices) }}
+                  </span>
+                </p>
+              </v-col>
+            </v-row>
+            <v-row align="center" no-gutters class="mb-1">
+              <v-col md="4" cols="12">
+                <v-select
+                  dense
+                  outlined
+                  hide-details
+                  clearable
+                  background-color="white"
+                  v-model="pos_profile_search"
+                  :items="pos_profiles_list"
+                  item-value="name"
+                  label="Select POS Profile"
+                ></v-select>
+              </v-col>
+              <v-col> </v-col>
+              <v-col md="3" cols="12">
+                <v-btn
+                  block
+                  color="warning"
+                  dark
+                  @click="get_outstanding_invoices"
+                  >{{ __("Search") }}</v-btn
+                >
+              </v-col>
+            </v-row>
+            <v-data-table
+              :headers="invoices_headers"
+              :items="outstanding_invoices"
+              item-key="name"
+              class="elevation-1 mt-0"
+              show-select
+              v-model="selected_invoices"
+              :loading="invoices_loading"
+              checkbox-color="primary"
+              @item-selected="onInvoiceSelected"
+            >
+              <template v-slot:item.grand_total="{ item }">
+                {{ currencySymbol(item.currency) }}
+                {{ formtCurrency(item.grand_total) }}
+              </template>
+              <template v-slot:item.outstanding_amount="{ item }">
+                <span class="primary--text"
+                  >{{ currencySymbol(item.currency) }}
+                  {{ formtCurrency(item.outstanding_amount) }}</span
+                >
+              </template>
+            </v-data-table>
+            <v-divider></v-divider>
+          </div>
+          <div
+            v-if="
+              pos_profile.posa_allow_reconcile_payments &&
+              unallocated_payments.length
+            "
+          >
+            <v-row>
+              <v-col md="7" cols="12">
+                <p>
+                  <strong>{{ __("Payments") }}</strong>
+                  <span v-if="total_unallocated_amount" class="primary--text">
+                    {{ __("- Total Unallocated") }} :
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(total_unallocated_amount) }}
+                  </span>
+                </p>
+              </v-col>
+              <v-col md="5" cols="12">
+                <p v-if="total_selected_payments" class="golden--text text-end">
+                  <span>{{ __("Total Selected :") }}</span>
+                  <span>
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(total_selected_payments) }}
+                  </span>
+                </p>
+              </v-col>
+            </v-row>
+            <v-data-table
+              :headers="unallocated_payments_headers"
+              :items="unallocated_payments"
+              item-key="name"
+              class="elevation-1 mt-0"
+              :single-select="singleSelect"
+              show-select
+              v-model="selected_payments"
+              :loading="unallocated_payments_loading"
+              checkbox-color="primary"
+            >
+              <template v-slot:item.paid_amount="{ item }">
+                {{ currencySymbol(item.currency) }}
+                {{ formtCurrency(item.paid_amount) }}
+              </template>
+              <template v-slot:item.unallocated_amount="{ item }">
+                <span class="primary--text"
+                  >{{ currencySymbol(item.currency) }}
+                  {{ formtCurrency(item.unallocated_amount) }}</span
+                >
+              </template>
+            </v-data-table>
+            <v-divider></v-divider>
+          </div>
+          <div v-if="pos_profile.posa_allow_mpesa_reconcile_payments">
+            <v-row>
+              <v-col md="8" cols="12">
+                <p>
+                  <span
+                    ><strong>{{ __("Search Mpesa Payments") }}</strong></span
+                  >
+                </p>
+              </v-col>
+              <v-col md="4" cols="12" v-if="total_selected_mpesa_payments">
+                <p class="golden--text text-end">
+                  <span>{{ __("Total Selected :") }}</span>
+                  <span>
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(total_selected_mpesa_payments) }}
+                  </span>
+                </p>
+              </v-col>
+            </v-row>
+            <v-row align="center" no-gutters class="mb-1">
+              <v-col md="4" cols="12" class="mr-1">
+                <v-text-field
+                  dense
+                  outlined
+                  color="primary"
+                  :label="__('Search by Name')"
+                  background-color="white"
+                  hide-details
+                  v-model="mpesa_search_name"
+                  clearable
+                ></v-text-field>
+              </v-col>
+              <v-col md="4" cols="12" class="mr-1">
+                <v-text-field
+                  dense
+                  outlined
+                  color="primary"
+                  :label="__('Search by Mobile')"
+                  background-color="white"
+                  hide-details
+                  v-model="mpesa_search_mobile"
+                  clearable
+                ></v-text-field>
+              </v-col>
+              <v-col> </v-col>
+              <v-col md="3" cols="12">
+                <v-btn
+                  block
+                  color="warning"
+                  dark
+                  @click="get_draft_mpesa_payments_register"
+                  >{{ __("Search") }}</v-btn
+                >
+              </v-col>
+            </v-row>
+            <v-data-table
+              :headers="mpesa_payment_headers"
+              :items="mpesa_payments"
+              item-key="name"
+              class="elevation-1 mt-0"
+              :single-select="singleSelect"
+              show-select
+              v-model="selected_mpesa_payments"
+              :loading="mpesa_payments_loading"
+              checkbox-color="primary"
+            >
+              <template v-slot:item.amount="{ item }">
+                <span class="primary--text">
+                  {{ currencySymbol(item.currency) }}
+                  {{ formtCurrency(item.amount) }}
+                </span>
+              </template>
+            </v-data-table>
+          </div>
+        </v-card>
+      </v-col>
+      <v-col md="4" cols="12" class="pb-3">
+        <v-card
+          class="invoices mx-auto grey lighten-5 mt-3 p-3"
+          style="max-height: 94vh; height: 94vh"
+        >
+          <strong>
+            <h4 class="primary--text">Totals</h4>
+            <v-row>
+              <v-col md="7" class="mt-1">
+                <span>{{ __("Total Invoices:") }}</span>
+              </v-col>
+              <v-col md="5">
+                <v-text-field
+                  class="p-0 m-0"
+                  dense
+                  color="primary"
+                  background-color="white"
+                  hide-details
+                  :value="formtCurrency(total_selected_invoices)"
+                  total_selected_invoices
+                  readonly
+                  flat
+                  :prefix="currencySymbol(pos_profile.currency)"
+                ></v-text-field>
+              </v-col>
+            </v-row>
+
+            <v-row v-if="total_selected_payments">
+              <v-col md="7" class="mt-1"
+                ><span>{{ __("Total Payments:") }}</span></v-col
+              >
+              <v-col md="5">
+                <v-text-field
+                  class="p-0 m-0"
+                  dense
+                  color="primary"
+                  background-color="white"
+                  hide-details
+                  :value="formtCurrency(total_selected_payments)"
+                  total_selected_payments
+                  readonly
+                  flat
+                  :prefix="currencySymbol(pos_profile.currency)"
+                ></v-text-field>
+              </v-col>
+            </v-row>
+
+            <v-row v-if="total_selected_mpesa_payments">
+              <v-col md="7" class="mt-1"
+                ><span>{{ __("Total Mpesa:") }}</span></v-col
+              >
+              <v-col md="5">
+                <v-text-field
+                  class="p-0 m-0"
+                  dense
+                  color="primary"
+                  background-color="white"
+                  hide-details
+                  :value="formtCurrency(total_selected_mpesa_payments)"
+                  total_selected_mpesa_payments
+                  readonly
+                  flat
+                  :prefix="currencySymbol(pos_profile.currency)"
+                ></v-text-field>
+              </v-col>
+            </v-row>
+
+            <v-divider v-if="payment_methods.length"></v-divider>
+            <div v-if="pos_profile.posa_allow_make_new_payments">
+              <h4 class="primary--text">Make New Payment</h4>
+              <v-row
+                v-if="payment_methods.length"
+                v-for="method in payment_methods"
+                :key="method.row_id"
+              >
+                <v-col md="7"
+                  ><span class="mt-1">{{ __(method.mode_of_payment) }}:</span>
+                </v-col>
+                <v-col md="5"
+                  ><v-text-field
+                    class="p-0 m-0"
+                    dense
+                    color="primary"
+                    background-color="white"
+                    hide-details
+                    :value="formtCurrency(method.amount)"
+                    @change="
+                      setFormatedCurrency(method, 'amount', null, true, $event)
+                    "
+                    payments_methods
+                    flat
+                    :prefix="currencySymbol(pos_profile.currency)"
+                  ></v-text-field
+                ></v-col>
+              </v-row>
+            </div>
+
+            <v-divider></v-divider>
+            <v-row>
+              <v-col md="7">
+                <h4 class="primary--text mt-1">{{ __("Difference:") }}</h4>
+              </v-col>
+              <v-col md="5">
+                <v-text-field
+                  class="p-0 m-0"
+                  dense
+                  color="primary"
+                  background-color="white"
+                  hide-details
+                  :value="formtCurrency(total_of_diff)"
+                  total_of_diff
+                  flat
+                  readonly
+                  :prefix="currencySymbol(pos_profile.currency)"
+                ></v-text-field>
+              </v-col>
+            </v-row>
+          </strong>
+          <div
+            class="pb-6 pr-6"
+            style="position: absolute; bottom: 0; width: 100%"
+          >
+            <v-btn block color="primary" dark @click="submit">
+              {{ __("Submit") }}
+            </v-btn>
+          </div>
+        </v-card>
+      </v-col>
+    </v-row>
+  </div>
+</template>
+
+<script>
+import { evntBus } from "../../bus";
+import format from "../../format";
+import Customer from "../pos/Customer.vue";
+import UpdateCustomer from "../pos/UpdateCustomer.vue";
+
+export default {
+  mixins: [format],
+  data: function () {
+    return {
+      dialog: false,
+      pos_profile: "",
+      pos_opening_shift: "",
+      customer_name: "",
+      customer_info: "",
+      company: "",
+      singleSelect: false,
+      invoices_loading: false,
+      unallocated_payments_loading: false,
+      mpesa_payments_loading: false,
+      payment_methods: [],
+      outstanding_invoices: [],
+      unallocated_payments: [],
+      mpesa_payments: [],
+      selected_invoices: [],
+      selected_payments: [],
+      selected_mpesa_payments: [],
+      pos_profiles_list: [],
+      pos_profile_search: "",
+      payment_methods_list: [],
+      mpesa_searchname: "",
+      mpesa_search_mobile: "",
+      invoices_headers: [
+        {
+          text: __("Invoice"),
+          align: "start",
+          sortable: true,
+          value: "name",
+        },
+        {
+          text: __("Customer"),
+          align: "start",
+          sortable: true,
+          value: "customer_name",
+        },
+        {
+          text: __("Date"),
+          align: "start",
+          sortable: true,
+          value: "posting_date",
+        },
+        {
+          text: __("Due Date"),
+          align: "start",
+          sortable: true,
+          value: "due_date",
+        },
+        {
+          text: __("Total"),
+          align: "end",
+          sortable: true,
+          value: "grand_total",
+        },
+        {
+          text: __("Outstanding"),
+          align: "end",
+          sortable: true,
+          value: "outstanding_amount",
+        },
+      ],
+      unallocated_payments_headers: [
+        {
+          text: __("Payment ID"),
+          align: "start",
+          sortable: true,
+          value: "name",
+        },
+        {
+          text: __("Customer"),
+          align: "start",
+          sortable: true,
+          value: "customer_name",
+        },
+        {
+          text: __("Date"),
+          align: "start",
+          sortable: true,
+          value: "posting_date",
+        },
+        {
+          text: __("Mode"),
+          align: "start",
+          sortable: true,
+          value: "mode_of_payment",
+        },
+        {
+          text: __("Paid"),
+          align: "end",
+          sortable: true,
+          value: "paid_amount",
+        },
+        {
+          text: __("Unallocated"),
+          align: "end",
+          sortable: true,
+          value: "unallocated_amount",
+        },
+      ],
+      mpesa_payment_headers: [
+        {
+          text: __("Payment ID"),
+          align: "start",
+          sortable: true,
+          value: "transid",
+        },
+        {
+          text: __("Full Name"),
+          align: "start",
+          sortable: true,
+          value: "full_name",
+        },
+        {
+          text: __("Nobile Number"),
+          align: "start",
+          sortable: true,
+          value: "mobile_no",
+        },
+        {
+          text: __("Date"),
+          align: "start",
+          sortable: true,
+          value: "posting_date",
+        },
+        {
+          text: __("Amount"),
+          align: "end",
+          sortable: true,
+          value: "amount",
+        },
+      ],
+    };
+  },
+
+  components: {
+    Customer,
+    UpdateCustomer,
+  },
+
+  methods: {
+    check_opening_entry() {
+      return frappe
+        .call("posawesome.posawesome.api.posapp.check_opening_shift", {
+          user: frappe.session.user,
+        })
+        .then((r) => {
+          if (r.message) {
+            this.pos_profile = r.message.pos_profile;
+            this.pos_opening_shift = r.message.pos_opening_shift;
+            this.company = r.message.company.name;
+            evntBus.emit("payments_register_pos_profile", r.message);
+            evntBus.emit("set_company", r.message.company);
+            this.set_payment_methods();
+            this.pos_profile_search = r.message.pos_profile.name;
+            this.pos_profiles_list.push(this.pos_profile_search);
+            this.payment_methods_list = [];
+            this.pos_profile.payments.forEach((element) => {
+              this.payment_methods_list.push(element.mode_of_payment);
+            });
+            this.get_available_pos_profiles();
+            this.get_outstanding_invoices();
+            this.get_draft_mpesa_payments_register();
+          } else {
+            this.create_opening_voucher();
+          }
+        });
+    },
+    get_available_pos_profiles() {
+      if (!this.pos_profile.posa_allow_mpesa_reconcile_payments) return;
+      return frappe
+        .call(
+          "posawesome.posawesome.api.payment_entry.get_available_pos_profiles",
+          {
+            company: this.company,
+            currency: this.pos_profile.currency,
+          }
+        )
+        .then((r) => {
+          if (r.message) {
+            this.pos_profiles_list = r.message;
+          }
+        });
+    },
+    create_opening_voucher() {
+      this.dialog = true;
+    },
+    fetch_customer_details() {
+      const vm = this;
+      if (this.customer_name) {
+        frappe.call({
+          method: "posawesome.posawesome.api.posapp.get_customer_info",
+          args: {
+            customer: vm.customer_name,
+          },
+          async: false,
+          callback: (r) => {
+            const message = r.message;
+            if (!r.exc) {
+              vm.customer_info = {
+                ...message,
+              };
+              vm.set_mpesa_search_params();
+              evntBus.emit("set_customer_info_to_edit", vm.customer_info);
+            }
+          },
+        });
+      }
+    },
+    onInvoiceSelected(event) {
+      evntBus.emit("set_customer", event.item.customer);
+    },
+    get_outstanding_invoices() {
+      this.invoices_loading = true;
+      return frappe
+        .call(
+          "posawesome.posawesome.api.payment_entry.get_outstanding_invoices",
+          {
+            customer: this.customer_name,
+            company: this.company,
+            currency: this.pos_profile.currency,
+            pos_profile_name: this.pos_profile_search,
+          }
+        )
+        .then((r) => {
+          if (r.message) {
+            this.outstanding_invoices = r.message;
+            this.invoices_loading = false;
+          }
+        });
+    },
+    get_unallocated_payments() {
+      if (!this.pos_profile.posa_allow_reconcile_payments) return;
+      this.unallocated_payments_loading = true;
+      if (!this.customer_name) {
+        this.unallocated_payments = [];
+        this.unallocated_payments_loading = false;
+        return;
+      }
+      return frappe
+        .call(
+          "posawesome.posawesome.api.payment_entry.get_unallocated_payments",
+          {
+            customer: this.customer_name,
+            company: this.company,
+            currency: this.pos_profile.currency,
+          }
+        )
+        .then((r) => {
+          if (r.message) {
+            this.unallocated_payments = r.message;
+            this.unallocated_payments_loading = false;
+          }
+        });
+    },
+    set_mpesa_search_params() {
+      if (!this.pos_profile.posa_allow_mpesa_reconcile_payments) return;
+      if (!this.customer_name) return;
+      this.mpesa_search_name = this.customer_info.customer_name.split(" ")[0];
+      if (this.customer_info.mobile_no) {
+        this.mpesa_search_mobile =
+          this.customer_info.mobile_no.substring(0, 4) +
+          " ***** " +
+          this.customer_info.mobile_no.substring(9);
+      }
+    },
+    get_draft_mpesa_payments_register() {
+      if (!this.pos_profile.posa_allow_mpesa_reconcile_payments) return;
+      const vm = this;
+      this.mpesa_payments_loading = true;
+      return frappe
+        .call("posawesome.posawesome.api.m_pesa.get_mpesa_draft_payments", {
+          company: vm.company,
+          mode_of_payment: null,
+          full_name: vm.mpesa_search_name || null,
+          mobile_no: vm.mpesa_search_mobile || null,
+          payment_methods_list: vm.payment_methods_list,
+        })
+        .then((r) => {
+          if (r.message) {
+            vm.mpesa_payments = r.message;
+          } else {
+            vm.mpesa_payments = [];
+          }
+          vm.mpesa_payments_loading = false;
+        });
+    },
+    set_payment_methods() {
+      // get payment methods from pos profile
+      if (!this.pos_profile.posa_allow_make_new_payments) return;
+      this.payment_methods = [];
+      this.pos_profile.payments.forEach((method) => {
+        this.payment_methods.push({
+          mode_of_payment: method.mode_of_payment,
+          amount: 0,
+          row_id: method.name,
+        });
+      });
+    },
+    clear_all(with_customer_info = true) {
+      this.customer_name = "";
+      if (with_customer_info) {
+        this.customer_info = "";
+      }
+      this.mpesa_search_mobile = "";
+      this.mpesa_search_name = "";
+      this.mpesa_payments = [];
+      this.selected_mpesa_payments = [];
+      this.outstanding_invoices = [];
+      this.unallocated_payments = [];
+      this.selected_invoices = [];
+      this.selected_payments = [];
+      this.selected_mpesa_payments = [];
+      this.set_payment_methods();
+    },
+    submit() {
+      const customer = this.customer_name;
+      const vm = this;
+      if (!customer) {
+        frappe.throw(__("Please select a customer"));
+        return;
+      }
+      if (
+        this.total_selected_payments == 0 &&
+        this.total_selected_mpesa_payments == 0 &&
+        this.total_payment_methods == 0
+      ) {
+        frappe.throw(__("Please make a payment or select an payment"));
+        return;
+      }
+      if (
+        this.total_selected_payments > 0 &&
+        this.selected_invoices.length == 0
+      ) {
+        frappe.throw(__("Please select an invoice"));
+        return;
+      }
+
+      this.payment_methods.forEach((payment) => {
+        payment.amount = flt(payment.amount);
+      });
+
+      const payload = {};
+      payload.customer = customer;
+      payload.company = this.company;
+      payload.currency = this.pos_profile.currency;
+      payload.pos_opening_shift_name = this.pos_opening_shift.name;
+      payload.pos_profile_name = this.pos_profile.name;
+      payload.pos_profile = this.pos_profile;
+      payload.payment_methods = this.payment_methods;
+      payload.selected_invoices = this.selected_invoices;
+      payload.selected_payments = this.selected_payments;
+      payload.total_selected_invoices = flt(this.total_selected_invoices);
+      payload.selected_mpesa_payments = this.selected_mpesa_payments;
+      payload.total_selected_payments = flt(this.total_selected_payments);
+      payload.total_payment_methods = flt(this.total_payment_methods);
+      payload.total_selected_mpesa_payments = flt(
+        this.total_selected_mpesa_payments
+      );
+
+      frappe.call({
+        method: "posawesome.posawesome.api.payment_entry.process_pos_payment",
+        args: { payload },
+        freeze: true,
+        freeze_message: __("Processing Payment"),
+        callback: function (r) {
+          if (r.message) {
+            frappe.utils.play_sound("submit");
+            vm.clear_all(false);
+            vm.customer_name = customer;
+            vm.get_outstanding_invoices();
+            vm.get_unallocated_payments();
+            vm.set_mpesa_search_params();
+            vm.get_draft_mpesa_payments_register();
+          }
+        },
+      });
+    },
+  },
+
+  computed: {
+    total_outstanding_amount() {
+      return this.outstanding_invoices.reduce(
+        (acc, cur) => acc + flt(cur.outstanding_amount),
+        0
+      );
+    },
+    total_unallocated_amount() {
+      return this.unallocated_payments.reduce(
+        (acc, cur) => acc + flt(cur.unallocated_amount),
+        0
+      );
+    },
+    total_selected_invoices() {
+      return this.selected_invoices.reduce(
+        (acc, cur) => acc + flt(cur.outstanding_amount),
+        0
+      );
+    },
+    total_selected_payments() {
+      return this.selected_payments.reduce(
+        (acc, cur) => acc + flt(cur.unallocated_amount),
+        0
+      );
+    },
+    total_selected_mpesa_payments() {
+      return this.selected_mpesa_payments.reduce(
+        (acc, cur) => acc + flt(cur.amount),
+        0
+      );
+    },
+    total_payment_methods() {
+      return this.payment_methods.reduce(
+        (acc, cur) => acc + flt(cur.amount),
+        0
+      );
+    },
+    total_of_diff() {
+      return flt(
+        this.total_selected_invoices -
+          this.total_selected_payments -
+          this.total_selected_mpesa_payments -
+          this.total_payment_methods
+      );
+    },
+  },
+
+  mounted: function () {
+    this.$nextTick(function () {
+      this.check_opening_entry();
+      evntBus.on("update_customer", (customer_name) => {
+        this.clear_all(true);
+        this.customer_name = customer_name;
+        this.fetch_customer_details();
+        this.get_outstanding_invoices();
+        this.get_unallocated_payments();
+        this.get_draft_mpesa_payments_register();
+      });
+      evntBus.on("fetch_customer_details", () => {
+        this.fetch_customer_details();
+      });
+    });
+  },
+  beforeDestroy() {
+    evntBus.$off("update_customer");
+    evntBus.$off("fetch_customer_details");
+  },
+};
+</script>
+
+<style>
+input[total_of_diff] {
+  text-align: right;
+}
+input[payments_methods] {
+  text-align: right;
+}
+input[total_selected_payments] {
+  text-align: right;
+}
+input[total_selected_invoices] {
+  text-align: right;
+}
+input[total_selected_mpesa_payments] {
+  text-align: right;
+}
+</style>
diff --git a/posawesome/public/js/posapp/components/pos/ClosingDialog.vue b/posawesome/public/js/posapp/components/pos/ClosingDialog.vue
new file mode 100644
index 0000000..3d94c6a
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/ClosingDialog.vue
@@ -0,0 +1,157 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="closingDialog" max-width="900px">
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{ __('Closing POS Shift') }}</span>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container>
+            <v-row>
+              <v-col cols="12" class="pa-1">
+                <v-data-table
+                  :headers="headers"
+                  :items="dialog_data.payment_reconciliation"
+                  item-key="mode_of_payment"
+                  class="elevation-1"
+                  :items-per-page="itemsPerPage"
+                  hide-default-footer
+                >
+                  <template v-slot:[`item.closing_amount`]="{ item }">
+                    {{ currencySymbol(pos_profile.currency) }}
+                    <div v-if="item.editing">
+                      <v-text-field
+                        v-model="item.closing_amount"
+                        :rules="[max25chars]"
+                        :label="__('Edit')"
+                        single-line
+                        counter
+                        type="number"
+                        @blur="item.editing = false"
+                      ></v-text-field>
+                    </div>
+                    <div v-else @click="item.editing = true">
+                      {{ formtCurrency(item.closing_amount) }}
+                    </div>
+                  </template>
+                  <template v-slot:[`item.difference`]="{ item }">
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{
+                      (item.difference = formtCurrency(
+                        item.expected_amount - item.closing_amount
+                      ))
+                    }}
+                  </template>
+                  <template v-slot:[`item.opening_amount`]="{ item }">
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(item.opening_amount) }}
+                  </template>
+                  <template v-slot:[`item.expected_amount`]="{ item }">
+                    {{ currencySymbol(pos_profile.currency) }}
+                    {{ formtCurrency(item.expected_amount) }}
+                  </template>
+                </v-data-table>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">
+            {{ __('Close') }}
+          </v-btn>
+          <v-btn color="success" dark @click="submit_dialog">
+            {{ __('Submit') }}
+          </v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { ref, onMounted } from 'vue';
+import { evntBus } from '../../bus';
+import format from '../../format';
+
+export default {
+  mixins: [format],
+  setup() {
+    const closingDialog = ref(false);
+    const itemsPerPage = ref(20);
+    const dialog_data = ref({ payment_reconciliation: [] });
+    const pos_profile = ref('');
+    const headers = ref([
+      {
+        title: __('Mode of Payment'),
+        key: 'mode_of_payment',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        title: __('Opening Amount'),
+        align: 'end',
+        sortable: true,
+        key: 'opening_amount',
+      },
+      {
+        title: __('Closing Amount'),
+        key: 'closing_amount',
+        align: 'end',
+        sortable: true,
+      },
+    ]);
+    const max25chars = (v) => v.length <= 20 || 'Input too long!';
+
+    const close_dialog = () => {
+      closingDialog.value = false;
+    };
+
+    const submit_dialog = () => {
+      evntBus.emit('submit_closing_pos', dialog_data.value);
+      closingDialog.value = false;
+    };
+
+    onMounted(() => {
+      evntBus.on('open_ClosingDialog', (data) => {
+        closingDialog.value = true;
+        dialog_data.value = data;
+      });
+      evntBus.on('register_pos_profile', (data) => {
+        pos_profile.value = data.pos_profile;
+        if (!pos_profile.value.hide_expected_amount) {
+          headers.value.push({
+            title: __('Expected Amount'),
+            key: 'expected_amount',
+            align: 'end',
+            sortable: false,
+          });
+          headers.value.push({
+            title: __('Difference'),
+            key: 'difference',
+            align: 'end',
+            sortable: false,
+          });
+        }
+      });
+    });
+
+    return {
+      closingDialog,
+      itemsPerPage,
+      dialog_data,
+      pos_profile,
+      headers,
+      max25chars,
+      close_dialog,
+      submit_dialog,
+    };
+  },
+};
+</script>
+
+<style scoped>
+.margen-top {
+  margin-top: 0px;
+}
+</style>
diff --git a/posawesome/public/js/posapp/components/pos/Customer.vue b/posawesome/public/js/posapp/components/pos/Customer.vue
new file mode 100644
index 0000000..b7ad975
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Customer.vue
@@ -0,0 +1,163 @@
+<template>
+  <div>
+    <v-autocomplete
+      density="compact"
+      variant="outlined"
+      color="primary"
+      :label="__('Customer')"
+      v-model="customer"
+      :items="customers"
+      item-title="customer_name"
+      item-value="name"
+      :filter="customFilter"
+      :disabled="readonly"
+      append-icon="mdi-plus"
+      @click:append="new_customer"
+      prepend-inner-icon="mdi-account-edit"
+      @click:prepend-inner="edit_customer"
+    >
+      <template v-slot:item="{ props, item }">
+          <v-list-item
+            v-bind="props"
+            >
+            <v-list-item-title
+              class="primary--text subtitle-1"
+              v-html="item.customer_name"
+            ></v-list-item-title>
+            <v-list-item-subtitle
+              v-if="item.customer_name != item.name"
+              v-html="`ID: ${item.name}`"
+            ></v-list-item-subtitle>
+            <v-list-item-subtitle
+              v-if="item.tax_id"
+              v-html="`TAX ID: ${item.tax_id}`"
+            ></v-list-item-subtitle>
+            <v-list-item-subtitle
+              v-if="item.email_id"
+              v-html="`Email: ${item.email_id}`"
+            ></v-list-item-subtitle>
+            <v-list-item-subtitle
+              v-if="item.mobile_no"
+              v-html="`Mobile No: ${item.mobile_no}`"
+            ></v-list-item-subtitle>
+            <v-list-item-subtitle
+              v-if="item.primary_address"
+              v-html="`Primary Address: ${item.primary_address}`"
+            ></v-list-item-subtitle>
+          </v-list-item>
+      </template>
+    </v-autocomplete>
+    <div class="mb-8">
+      <UpdateCustomer></UpdateCustomer>
+    </div>
+  </div>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+import UpdateCustomer from './UpdateCustomer.vue';
+export default {
+  data: () => ({
+    pos_profile: '',
+    customers: [],
+    customer: '',
+    readonly: false,
+    customer_info: {},
+  }),
+
+  components: {
+    UpdateCustomer,
+  },
+
+  methods: {
+    get_customer_names() {
+      const vm = this;
+      if (this.customers.length > 0) {
+        return;
+      }
+      if (vm.pos_profile.posa_local_storage && localStorage.customer_storage) {
+        vm.customers = JSON.parse(localStorage.getItem('customer_storage'));
+      }
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.get_customer_names',
+        args: {
+          pos_profile: this.pos_profile.pos_profile,
+        },
+        callback: function (r) {
+          if (r.message) {
+            vm.customers = r.message;
+            console.info('loadCustomers');
+            if (vm.pos_profile.posa_local_storage) {
+              localStorage.setItem('customer_storage', '');
+              localStorage.setItem(
+                'customer_storage',
+                JSON.stringify(r.message)
+              );
+            }
+          }
+        },
+      });
+    },
+    new_customer() {
+      evntBus.emit('open_update_customer', null);
+    },
+    edit_customer() {
+      evntBus.emit('open_update_customer', this.customer_info);
+    },
+    customFilter(item, queryText, itemText) {
+      const textOne = item.customer_name
+        ? item.customer_name.toLowerCase()
+        : '';
+      const textTwo = item.tax_id ? item.tax_id.toLowerCase() : '';
+      const textThree = item.email_id ? item.email_id.toLowerCase() : '';
+      const textFour = item.mobile_no ? item.mobile_no.toLowerCase() : '';
+      const textFifth = item.name.toLowerCase();
+      const searchText = queryText.toLowerCase();
+
+      return (
+        textOne.indexOf(searchText) > -1 ||
+        textTwo.indexOf(searchText) > -1 ||
+        textThree.indexOf(searchText) > -1 ||
+        textFour.indexOf(searchText) > -1 ||
+        textFifth.indexOf(searchText) > -1
+      );
+    },
+  },
+
+  computed: {},
+
+  created: function () {
+    this.$nextTick(function () {
+      evntBus.on('register_pos_profile', (pos_profile) => {
+        this.pos_profile = pos_profile;
+        this.get_customer_names();
+      });
+      evntBus.on('payments_register_pos_profile', (pos_profile) => {
+        this.pos_profile = pos_profile;
+        this.get_customer_names();
+      });
+      evntBus.on('set_customer', (customer) => {
+        this.customer = customer;
+      });
+      evntBus.on('add_customer_to_list', (customer) => {
+        this.customers.push(customer);
+      });
+      evntBus.on('set_customer_readonly', (value) => {
+        this.readonly = value;
+      });
+      evntBus.on('set_customer_info_to_edit', (data) => {
+        this.customer_info = data;
+      });
+      evntBus.on('fetch_customer_details', () => {
+        this.get_customer_names();
+      });
+    });
+  },
+
+  watch: {
+    customer() {
+      evntBus.emit('update_customer', this.customer);
+    },
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/Drafts.vue b/posawesome/public/js/posapp/components/pos/Drafts.vue
new file mode 100644
index 0000000..c6da84e
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Drafts.vue
@@ -0,0 +1,120 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="draftsDialog" max-width="900px">
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{
+            __('Select Hold Invoice')
+          }}</span>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container>
+            <v-row no-gutters>
+              <v-col cols="12" class="pa-1">
+                <v-data-table
+                  :headers="headers"
+                  :items="dialog_data"
+                  item-value="name"
+                  class="elevation-1"
+                  show-select
+                  v-model="selected"
+                  single-select
+                >
+                  <template v-slot:[`item.posting_time`]="{ item }">
+                    {{ item.posting_time.split('.')[0] }}
+                  </template>
+                  <template v-slot:[`item.grand_total`]="{ item }">
+                    {{ currencySymbol(item.currency) }}
+                    {{ formtCurrency(item.grand_total) }}
+                  </template>
+                </v-data-table>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">Close</v-btn>
+          <v-btn color="success" dark @click="submit_dialog">Select</v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+import format from '../../format';
+export default {
+  // props: ["draftsDialog"],
+  mixins: [format],
+  data: () => ({
+    draftsDialog: false,
+    singleSelect: true,
+    selected: [],
+    dialog_data: {},
+    headers: [
+      {
+        title: __('Customer'),
+        key: 'customer_name',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        title: __('Date'),
+        align: 'start',
+        sortable: true,
+        key: 'posting_date',
+      },
+      {
+        title: __('Time'),
+        align: 'start',
+        sortable: true,
+        key: 'posting_time',
+      },
+      {
+        title: __('Invoice'),
+        key: 'name',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        title: __('Amount'),
+        key: 'grand_total',
+        align: 'end',
+        sortable: false,
+      },
+    ],
+  }),
+  watch: {},
+  methods: {
+    close_dialog() {
+      this.draftsDialog = false;
+    },
+
+    submit_dialog() {
+      var me = this;
+      if (this.selected.length == 1) {
+        $.each(this.dialog_data || [], function(i,v){
+          if(v.name == me.selected[0]){
+            evntBus.emit('load_invoice', v);
+            me.draftsDialog = false;
+          }
+        });
+      }
+      else{
+        evntBus.emit("show_mesage", {
+          text: `Select Only 1 Row`,
+          color: "error",
+        });
+      }
+    },
+  },
+  created: function () {
+    evntBus.on('open_drafts', (data) => {
+      this.draftsDialog = true;
+      this.dialog_data = data;
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/Invoice.vue b/posawesome/public/js/posapp/components/pos/Invoice.vue
new file mode 100644
index 0000000..8eb660b
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Invoice.vue
@@ -0,0 +1,3045 @@
+<template>
+  <div>
+    <v-dialog v-model="cancel_dialog" max-width="330">
+      <v-card>
+        <v-card-title class="text-h5">
+          <span class="headline primary--text">{{
+            __("Cancel Current Invoice ?")
+          }}</span>
+        </v-card-title>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" @click="cancel_invoice">
+            {{ __("Cancel") }}
+          </v-btn>
+          <v-btn color="warning" @click="cancel_dialog = false">
+            {{ __("Back") }}
+          </v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+    <v-card
+      style="max-height: 70vh; height: 70vh"
+      class="cards my-0 py-0 mt-3 grey lighten-5"
+    >
+      <v-row align="center" class="items px-2 py-1">
+        <v-col
+          v-if="pos_profile.posa_allow_sales_order"
+          cols="9"
+          class="pb-2 pr-0"
+        >
+          <Customer></Customer>
+        </v-col>
+        <v-col
+          v-if="!pos_profile.posa_allow_sales_order"
+          cols="12"
+          class="pb-2"
+        >
+          <Customer></Customer>
+        </v-col>
+        <v-col v-if="pos_profile.posa_allow_sales_order" cols="3" class="pb-2">
+          <v-select
+            dense
+            hide-details
+            outlined
+            color="primary"
+            background-color="white"
+            :items="invoiceTypes"
+            :label="__('Type')"
+            v-model="invoiceType"
+            :disabled="invoiceType == 'Return'"
+          ></v-select>
+        </v-col>
+      </v-row>
+
+      <v-row
+        align="center"
+        class="items px-2 py-1 mt-0 pt-0"
+        v-if="pos_profile.posa_use_delivery_charges"
+      >
+        <v-col cols="8" class="pb-0 mb-0 pr-0 pt-0">
+          <v-autocomplete
+            dense
+            clearable
+            auto-select-first
+            outlined
+            color="primary"
+            :label="__('Delivery Charges')"
+            v-model="selcted_delivery_charges"
+            :items="delivery_charges"
+            item-title="name"
+            return-object
+            background-color="white"
+            :no-data-text="__('Charges not found')"
+            hide-details
+            :filter="deliveryChargesFilter"
+            :disabled="readonly"
+            @change="update_delivery_charges"
+          >
+            <template v-slot:item="{ props, item }">
+                <v-list-item
+                  v-bind="props"
+                >
+                  <v-list-item-title
+                    class="primary--text subtitle-1"
+                    v-html="item.name"
+                  ></v-list-item-title>
+                  <v-list-item-subtitle
+                    v-html="`Rate: ${item.rate}`"
+                  ></v-list-item-subtitle>
+                </v-list-item>
+            </template>
+          </v-autocomplete>
+        </v-col>
+        <v-col cols="4" class="pb-0 mb-0 pt-0">
+          <v-text-field
+            dense
+            outlined
+            color="primary"
+            :label="__('Delivery Charges Rate')"
+            background-color="white"
+            hide-details
+            :value="formtCurrency(delivery_charges_rate)"
+            :prefix="currencySymbol(pos_profile.currency)"
+            disabled
+          ></v-text-field>
+        </v-col>
+      </v-row>
+      <v-row
+        align="center"
+        class="items px-2 py-1 mt-0 pt-0"
+        v-if="pos_profile.posa_allow_change_posting_date"
+      >
+        <v-col
+          v-if="pos_profile.posa_allow_change_posting_date"
+          cols="4"
+          class="pb-2"
+        >
+          <v-menu
+            ref="invoice_posting_date"
+            v-model="invoice_posting_date"
+            :close-on-content-click="false"
+            transition="scale-transition"
+            dense
+          >
+            <template v-slot:activator="{ on, attrs }">
+              <v-text-field
+                v-model="posting_date"
+                :label="__('Posting Date')"
+                readonly
+                outlined
+                dense
+                background-color="white"
+                clearable
+                color="primary"
+                hide-details
+                v-bind="attrs"
+                v-on="on"
+              ></v-text-field>
+            </template>
+            <v-date-picker
+              v-model="posting_date"
+              no-title
+              scrollable
+              color="primary"
+              :min="
+                frappe.datetime.add_days(frappe.datetime.now_date(true), -7)
+              "
+              :max="frappe.datetime.add_days(frappe.datetime.now_date(true), 7)"
+              @input="invoice_posting_date = false"
+            >
+            </v-date-picker>
+          </v-menu>
+        </v-col>
+      </v-row>
+
+      <div class="my-0 py-0 overflow-y-auto" style="max-height: 60vh">
+          <v-data-table
+            :headers="items_headers"
+            :items="items"
+            v-model:expanded.sync="expanded"
+            show-expand
+            item-key="posa_row_id"
+            item-value="posa_row_id"
+            class="elevation-1"
+            :items-per-page="itemsPerPage"
+            hide-default-footer
+          >
+            <template v-slot:item.qty="{ item }">{{
+              formtFloat(item.qty)
+            }}</template>
+            <template v-slot:item.rate="{ item }"
+              >{{ currencySymbol(pos_profile.currency) }}
+              {{ formtCurrency(item.rate) }}</template
+            >
+            <template v-slot:item.amount="{ item }"
+              >{{ currencySymbol(pos_profile.currency) }}
+              {{
+                formtCurrency(
+                  flt(item.qty, float_precision) *
+                    flt(item.rate, currency_precision)
+                )
+              }}</template
+            >
+            <template v-slot:item.posa_is_offer="{ item }">
+              <v-checkbox
+                :model-value="!!item.posa_is_offer || !!item.posa_is_replace"
+                :disabled="true"
+              ></v-checkbox>
+            </template>
+
+            <template v-slot:expanded-row="{ columns, item }">
+              <td :colspan="columns.length" class="ma-0 pa-0">
+                <v-row class="ma-0 pa-0">
+                  <v-col cols="1">
+                    <v-btn
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                      icon
+                      color="error"
+                      @click.stop="remove_item(item)"
+                    >
+                      <v-icon>mdi-delete</v-icon>
+                    </v-btn>
+                  </v-col>
+                  <v-spacer></v-spacer>
+                  <v-col cols="1">
+                    <v-btn
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                      icon
+                      color="secondary"
+                      @click.stop="subtract_one(item)"
+                    >
+                      <v-icon>mdi-minus-circle-outline</v-icon>
+                    </v-btn>
+                  </v-col>
+                  <v-col cols="1">
+                    <v-btn
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                      icon
+                      color="secondary"
+                      @click.stop="add_one(item)"
+                    >
+                      <v-icon>mdi-plus-circle-outline</v-icon>
+                    </v-btn>
+                  </v-col>
+                </v-row>
+                <v-row class="ma-0 pa-0">
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Item Code')"
+                      background-color="white"
+                      hide-details
+                      v-model="item.item_code"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('QTY')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtFloat(item.qty)"
+                      @change="
+                        [
+                          setFormatedFloat(item, 'qty', null, false, $event),
+                          calc_stock_qty(item, parseFloat($event.target.value)),
+                        ]
+                      "
+                      :rules="[isNumber]"
+                      :disabled="!!item.posa_is_offer || !!item.posa_is_replace"
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-select
+                      dense
+                      background-color="white"
+                      :label="__('UOM')"
+                      v-model="item.uom"
+                      :items="item.item_uoms"
+                      outlined
+                      item-text="uom"
+                      item-value="uom"
+                      hide-details
+                      @change="calc_uom(item, $event.target.value)"
+                      :disabled="
+                        !!invoice_doc.is_return ||
+                        !!item.posa_is_offer ||
+                        !!item.posa_is_replace
+                      "
+                    >
+                    </v-select>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Rate')"
+                      background-color="white"
+                      hide-details
+                      :prefix="currencySymbol(pos_profile.currency)"
+                      :model-value="formtCurrency(item.rate)"
+                      @change="
+                        [
+                          setFormatedCurrency(
+                            item,
+                            'rate',
+                            null,
+                            false,
+                            $event
+                          ),
+                          calc_prices(item, $event.target.value),
+                        ]
+                      "
+                      :rules="[isNumber]"
+                      id="rate"
+                      :disabled="
+                        !!item.posa_is_offer ||
+                        !!item.posa_is_replace ||
+                        !!item.posa_offer_applied ||
+                        !pos_profile.posa_allow_user_to_edit_rate ||
+                        !!invoice_doc.is_return
+                          ? true
+                          : false
+                      "
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Discount Percentage')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtFloat(item.discount_percentage)"
+                      @change="
+                        [
+                          setFormatedCurrency(
+                            item,
+                            'discount_percentage',
+                            null,
+                            true,
+                            $event
+                          ),
+                          calc_prices(item, $event.target.value),
+                        ]
+                      "
+                      :rules="[isNumber]"
+                      id="discount_percentage"
+                      :disabled="
+                        !!item.posa_is_offer ||
+                        !!item.posa_is_replace ||
+                        item.posa_offer_applied ||
+                        !pos_profile.posa_allow_user_to_edit_item_discount ||
+                        !!invoice_doc.is_return
+                          ? true
+                          : false
+                      "
+                      suffix="%"
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Discount Amount')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtCurrency(item.discount_amount)"
+                      :rules="[isNumber]"
+                      @change="
+                        [
+                          setFormatedCurrency(
+                            item,
+                            'discount_amount',
+                            null,
+                            true,
+                            $event
+                          ),
+                          ,
+                          calc_prices(item, $event.target.value),
+                        ]
+                      "
+                      :prefix="currencySymbol(pos_profile.currency)"
+                      id="discount_amount"
+                      :disabled="
+                        !!item.posa_is_offer ||
+                        !!item.posa_is_replace ||
+                        !!item.posa_offer_applied ||
+                        !pos_profile.posa_allow_user_to_edit_item_discount ||
+                        !!invoice_doc.is_return
+                          ? true
+                          : false
+                      "
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Price list Rate')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtCurrency(item.price_list_rate)"
+                      disabled
+                      :prefix="currencySymbol(pos_profile.currency)"
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Available QTY')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtFloat(item.actual_qty)"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Group')"
+                      background-color="white"
+                      hide-details
+                      v-model="item.item_group"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Stock QTY')"
+                      background-color="white"
+                      hide-details
+                      :model-value="formtFloat(item.stock_qty)"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col cols="4">
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Stock UOM')"
+                      background-color="white"
+                      hide-details
+                      v-model="item.stock_uom"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col align="center" cols="4" v-if="item.posa_offer_applied">
+                    <v-checkbox
+                      dense
+                      :label="__('Offer Applied')"
+                      v-model="item.posa_offer_applied"
+                      readonly
+                      hide-details
+                      class="shrink mr-2 mt-0"
+                    ></v-checkbox>
+                  </v-col>
+                  <v-col
+                    cols="4"
+                    v-if="item.has_serial_no == 1 || item.serial_no"
+                  >
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Serial No QTY')"
+                      background-color="white"
+                      hide-details
+                      v-model="item.serial_no_selected_count"
+                      type="number"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col
+                    cols="12"
+                    v-if="item.has_serial_no == 1 || item.serial_no"
+                  >
+                    <v-autocomplete
+                      v-model="item.serial_no_selected"
+                      :items="item.serial_no_data"
+                      item-title="serial_no"
+                      variant="outlined"
+                      dense
+                      chips
+                      color="primary"
+                      small-chips
+                      :label="__('Serial No')"
+                      multiple
+                      @change="set_serial_no(item)"
+                    ></v-autocomplete>
+                  </v-col>
+                  <v-col
+                    cols="4"
+                    v-if="item.has_batch_no == 1 || item.batch_no"
+                  >
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Batch No. Available QTY')"
+                      background-color="white"
+                      hide-details
+                      :value="formtFloat(item.actual_batch_qty)"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col
+                    cols="4"
+                    v-if="item.has_batch_no == 1 || item.batch_no"
+                  >
+                    <v-text-field
+                      dense
+                      variant="outlined"
+                      color="primary"
+                      :label="__('Batch No Expiry Date')"
+                      background-color="white"
+                      hide-details
+                      v-model="item.batch_no_expiry_date"
+                      disabled
+                    ></v-text-field>
+                  </v-col>
+                  <v-col
+                    cols="8"
+                    v-if="item.has_batch_no == 1 || item.batch_no"
+                  >
+                    <v-autocomplete
+                      v-model="item.batch_no"
+                      :items="item.batch_no_data"
+                      item-title="batch_no"
+                      variant="outlined"
+                      dense
+                      color="primary"
+                      :label="__('Batch No')"
+                      @change="set_batch_qty(item, $event.target.value)"
+                    >
+                      <template v-slot:item="{ props, item }">
+                          <v-list-item
+                            v-bind="props"
+                          >
+                            <v-list-item-title
+                              v-html="item.batch_no"
+                            ></v-list-item-title>
+                            <v-list-item-subtitle
+                              v-html="
+                                `Available QTY  '${item.batch_qty}' - Expiry Date ${item.expiry_date}`
+                              "
+                            ></v-list-item-subtitle>
+                          </v-list-item>
+                      </template>
+                    </v-autocomplete>
+                  </v-col>
+                  <v-col
+                    cols="4"
+                    v-if="
+                      pos_profile.posa_allow_sales_order &&
+                      invoiceType == 'Order'
+                    "
+                  >
+                    <v-menu
+                      ref="item_delivery_date"
+                      v-model="item.item_delivery_date"
+                      :close-on-content-click="false"
+                      :return-value.sync="item.posa_delivery_date"
+                      transition="scale-transition"
+                      dense
+                    >
+                      <template v-slot:activator="{ on, attrs }">
+                        <v-text-field
+                          v-model="item.posa_delivery_date"
+                          :label="__('Delivery Date')"
+                          readonly
+                          variant="outlined"
+                          dense
+                          clearable
+                          color="primary"
+                          hide-details
+                          v-bind="attrs"
+                          v-on="on"
+                        ></v-text-field>
+                      </template>
+                      <v-date-picker
+                        v-model="item.posa_delivery_date"
+                        no-title
+                        scrollable
+                        color="primary"
+                        :min="frappe.datetime.now_date()"
+                      >
+                        <v-spacer></v-spacer>
+                        <v-btn
+                          text
+                          color="primary"
+                          @click="item.item_delivery_date = false"
+                        >
+                          Cancel
+                        </v-btn>
+                        <v-btn
+                          text
+                          color="primary"
+                          @click="
+                            [
+                              $refs.item_delivery_date.save(
+                                item.posa_delivery_date
+                              ),
+                              validate_due_date(item),
+                            ]
+                          "
+                        >
+                          OK
+                        </v-btn>
+                      </v-date-picker>
+                    </v-menu>
+                  </v-col>
+                  <v-col
+                    cols="8"
+                    v-if="pos_profile.posa_display_additional_notes"
+                  >
+                    <v-textarea
+                      class="pa-0"
+                      variant="outlined"
+                      dense
+                      clearable
+                      color="primary"
+                      auto-grow
+                      rows="1"
+                      :label="__('Additional Notes')"
+                      v-model="item.posa_notes"
+                      :model-value="item.posa_notes"
+                    ></v-textarea>
+                  </v-col>
+                </v-row>
+              </td>
+            </template>
+          </v-data-table>
+      </div>
+    </v-card>
+    <v-card class="cards mb-0 mt-3 py-0 grey lighten-5">
+      <v-row no-gutters>
+        <v-col cols="7">
+          <v-row no-gutters class="pa-1 pt-9 pr-1">
+            <v-col cols="6" class="pa-1">
+              <v-text-field
+                :model-value="formtFloat(total_qty)"
+                :label="__('Total Qty')"
+                variant="outlined"
+                dense
+                readonly
+                hide-details
+                color="accent"
+              ></v-text-field>
+            </v-col>
+            <v-col
+              v-if="!pos_profile.posa_use_percentage_discount"
+              cols="6"
+              class="pa-1"
+            >
+              <v-text-field
+                :model-value="formtCurrency(discount_amount)"
+                @change="
+                  setFormatedCurrency(
+                    discount_amount,
+                    'discount_amount',
+                    null,
+                    false,
+                    $event
+                  )
+                "
+                :rules="[isNumber]"
+                :label="__('Additional Discount')"
+                ref="discount"
+                variant="outlined"
+                dense
+                hide-details
+                color="warning"
+                :prefix="currencySymbol(pos_profile.currency)"
+                :disabled="
+                  !pos_profile.posa_allow_user_to_edit_additional_discount ||
+                  discount_percentage_offer_name
+                    ? true
+                    : false
+                "
+              ></v-text-field>
+            </v-col>
+            <v-col
+              v-if="pos_profile.posa_use_percentage_discount"
+              cols="6"
+              class="pa-1"
+            >
+              <v-text-field
+                :model-value="formtFloat(additional_discount_percentage)"
+                @change="
+                  [
+                    setFormatedFloat(
+                      additional_discount_percentage,
+                      'additional_discount_percentage',
+                      null,
+                      false,
+                      $event
+                    ),
+                    update_discount_umount($event),
+                  ]
+                "
+                :rules="[isNumber]"
+                :label="__('Additional Discount %')"
+                suffix="%"
+                ref="percentage_discount"
+                variant="outlined"
+                dense
+                color="warning"
+                hide-details
+                :disabled="
+                  !pos_profile.posa_allow_user_to_edit_additional_discount ||
+                  discount_percentage_offer_name
+                    ? true
+                    : false
+                "
+              ></v-text-field>
+            </v-col>
+            <v-col cols="6" class="pa-1 mt-2">
+              <v-text-field
+                :model-value="formtCurrency(total_items_discount_amount)"
+                :prefix="currencySymbol(pos_profile.currency)"
+                :label="__('Items Discounts')"
+                variant="outlined"
+                dense
+                color="warning"
+                readonly
+                hide-details
+              ></v-text-field>
+            </v-col>
+
+            <v-col cols="6" class="pa-1 mt-2">
+              <v-text-field
+                :model-value="formtCurrency(subtotal)"
+                :prefix="currencySymbol(pos_profile.currency)"
+                :label="__('Total')"
+                variant="outlined"
+                dense
+                readonly
+                hide-details
+                color="success"
+              ></v-text-field>
+            </v-col>
+          </v-row>
+        </v-col>
+        <v-col cols="5">
+          <v-row no-gutters class="pa-1 pt-2 pl-0">
+            <v-col cols="6" class="pa-1">
+              <v-btn
+                block
+                class="pa-0"
+                color="warning"
+                dark
+                @click="get_draft_invoices"
+                >{{ __("Held") }}</v-btn
+              >
+            </v-col>
+            <v-col
+              v-if="pos_profile.custom_allow_select_sales_order === 1"
+              cols="6"
+              class="pa-1"
+            >
+              <v-btn
+                block
+                class="pa-0"
+                color="info"
+                dark
+                @click="get_draft_orders"
+                >{{ __("Select S.O") }}</v-btn
+              >
+            </v-col>
+            <v-col cols="6" class="pa-1">
+              <v-btn
+                block
+                class="pa-0"
+                :class="{ 'disable-events': !pos_profile.posa_allow_return }"
+                color="secondary"
+                dark
+                @click="open_returns"
+                >{{ __("Return") }}</v-btn
+              >
+            </v-col>
+            <v-col cols="6" class="pa-1">
+              <v-btn
+                block
+                class="pa-0"
+                color="error"
+                dark
+                @click="cancel_dialog = true"
+                >{{ __("Cancel") }}</v-btn
+              >
+            </v-col>
+            <v-col cols="6" class="pa-1">
+              <v-btn
+                block
+                class="pa-0"
+                color="accent"
+                dark
+                @click="new_invoice"
+                >{{ __("Save/New") }}</v-btn
+              >
+            </v-col>
+            <v-col class="pa-1">
+              <v-btn
+                block
+                class="pa-0"
+                color="success"
+                @click="show_payment"
+                variant="flat"
+              >
+                {{ __("PAY") }}
+              </v-btn>
+            </v-col>
+            <v-col
+              v-if="pos_profile.posa_allow_print_draft_invoices"
+              cols="6"
+              class="pa-1"
+            >
+              <v-btn
+                block
+                class="pa-0"
+                color="primary"
+                @click="print_draft_invoice"
+                dark
+                >{{ __("Print Draft") }}</v-btn
+              >
+            </v-col>
+          </v-row>
+        </v-col>
+      </v-row>
+    </v-card>
+  </div>
+</template>
+
+<script>
+import { evntBus } from "../../bus";
+import format from "../../format";
+import Customer from "./Customer.vue";
+
+export default {
+  mixins: [format],
+  data() {
+    return {
+      pos_profile: "",
+      pos_opening_shift: "",
+      stock_settings: "",
+      invoice_doc: "",
+      return_doc: "",
+      customer: "",
+      customer_info: "",
+      discount_amount: 0,
+      additional_discount_percentage: 0,
+      total_tax: 0,
+      items: [],
+      posOffers: [],
+      posa_offers: [],
+      posa_coupons: [],
+      allItems: [],
+      discount_percentage_offer_name: null,
+      invoiceTypes: ["Invoice", "Order"],
+      invoiceType: "Invoice",
+      itemsPerPage: 1000,
+      expanded: [],
+      singleExpand: true,
+      cancel_dialog: false,
+      float_precision: 2,
+      currency_precision: 2,
+      new_line: false,
+      delivery_charges: [],
+      delivery_charges_rate: 0,
+      selcted_delivery_charges: {},
+      invoice_posting_date: false,
+      posting_date: frappe.datetime.nowdate(),
+      items_headers: [
+        {
+          title: __("Name"),
+          align: "start",
+          sortable: true,
+          key: "item_name",
+        },
+        { title: __("QTY"), key: "qty", align: "center" },
+        { title: __("UOM"), key: "uom", align: "center" },
+        { title: __("Rate"), key: "rate", align: "center" },
+        { title: __("Amount"), key: "amount", align: "center" },
+        { title: __("is Offer"), key: "posa_is_offer", align: "center" },
+      ],
+    };
+  },
+
+  components: {
+    Customer,
+  },
+
+  computed: {
+    total_qty() {
+      this.close_payments();
+      let qty = 0;
+      this.items.forEach((item) => {
+        qty += flt(item.qty);
+      });
+      return this.flt(qty, this.float_precision);
+    },
+    Total() {
+      let sum = 0;
+      this.items.forEach((item) => {
+        sum += flt(item.qty) * flt(item.rate);
+      });
+      return this.flt(sum, this.currency_precision);
+    },
+    subtotal() {
+      this.close_payments();
+      let sum = 0;
+      this.items.forEach((item) => {
+        sum += flt(item.qty) * flt(item.rate);
+      });
+      sum -= this.flt(this.discount_amount);
+      sum += this.flt(this.delivery_charges_rate);
+      return this.flt(sum, this.currency_precision);
+    },
+    total_items_discount_amount() {
+      let sum = 0;
+      this.items.forEach((item) => {
+        sum += flt(item.qty) * flt(item.discount_amount);
+      });
+      return this.flt(sum, this.float_precision);
+    },
+  },
+
+  methods: {
+    remove_item(item) {
+      const index = this.items.findIndex(
+        (el) => el.posa_row_id == item.posa_row_id
+      );
+      if (index >= 0) {
+        this.items.splice(index, 1);
+      }
+      const idx = this.expanded.findIndex(
+        (el) => el.posa_row_id == item.posa_row_id
+      );
+      if (idx >= 0) {
+        this.expanded.splice(idx, 1);
+      }
+    },
+
+    add_one(item) {
+      item.qty++;
+      if (item.qty == 0) {
+        this.remove_item(item);
+      }
+      this.calc_stock_qty(item, item.qty);
+      this.$forceUpdate();
+    },
+    subtract_one(item) {
+      item.qty--;
+      if (item.qty == 0) {
+        this.remove_item(item);
+      }
+      this.calc_stock_qty(item, item.qty);
+      this.$forceUpdate();
+    },
+
+    add_item(item) {
+      console.log(item);
+      if (!item.uom) {
+        item.uom = item.stock_uom;
+      }
+      let index = -1;
+      if (!this.new_line) {
+        index = this.items.findIndex(
+          (el) =>
+            el.item_code === item.item_code &&
+            el.uom === item.uom &&
+            !el.posa_is_offer &&
+            !el.posa_is_replace &&
+            el.batch_no === item.batch_no
+        );
+      }
+      if (index === -1 || this.new_line) {
+        const new_item = this.get_new_item(item);
+        if (item.has_serial_no && item.to_set_serial_no) {
+          new_item.serial_no_selected = [];
+          new_item.serial_no_selected.push(item.to_set_serial_no);
+          item.to_set_serial_no = null;
+        }
+        if (item.has_batch_no && item.to_set_batch_no) {
+          new_item.batch_no = item.to_set_batch_no;
+          item.to_set_batch_no = null;
+          item.batch_no = null;
+          this.set_batch_qty(new_item, new_item.batch_no, false);
+        }
+        this.items.unshift(new_item);
+        this.update_item_detail(new_item);
+      } else {
+        const cur_item = this.items[index];
+        this.update_items_details([cur_item]);
+        if (item.has_serial_no && item.to_set_serial_no) {
+          if (cur_item.serial_no_selected.includes(item.to_set_serial_no)) {
+            evntBus.emit("show_mesage", {
+              text: __(`This Serial Number {0} has already been added!`, [
+                item.to_set_serial_no,
+              ]),
+              color: "warning",
+            });
+            item.to_set_serial_no = null;
+            return;
+          }
+          cur_item.serial_no_selected.push(item.to_set_serial_no);
+          item.to_set_serial_no = null;
+        }
+        if (!cur_item.has_batch_no) {
+          cur_item.qty += item.qty || 1;
+          this.calc_stock_qty(cur_item, cur_item.qty);
+        } else {
+          if (
+            (cur_item.stock_qty < cur_item.actual_batch_qty &&
+              cur_item.batch_no == item.batch_no) ||
+            !cur_item.batch_no
+          ) {
+            cur_item.qty += item.qty || 1;
+            this.calc_stock_qty(cur_item, cur_item.qty);
+          } else {
+            const new_item = this.get_new_item(cur_item);
+            new_item.batch_no = item.batch_no || item.to_set_batch_no;
+            new_item.batch_no_expiry_date = "";
+            new_item.actual_batch_qty = "";
+            new_item.qty = item.qty || 1;
+            if (new_item.batch_no) {
+              this.set_batch_qty(new_item, new_item.batch_no, false);
+              item.to_set_batch_no = null;
+              item.batch_no = null;
+            }
+            this.items.unshift(new_item);
+          }
+        }
+        this.set_serial_no(cur_item);
+      }
+      this.$forceUpdate();
+    },
+
+    get_new_item(item) {
+      const new_item = { ...item };
+      if (!item.qty) {
+        item.qty = 1;
+      }
+      if (!item.posa_is_offer) {
+        item.posa_is_offer = 0;
+      }
+      if (!item.posa_is_replace) {
+        item.posa_is_replace = "";
+      }
+      new_item.stock_qty = item.qty;
+      new_item.discount_amount = 0;
+      new_item.discount_percentage = 0;
+      new_item.discount_amount_per_item = 0;
+      new_item.price_list_rate = item.rate;
+      new_item.qty = item.qty;
+      new_item.uom = item.uom ? item.uom : item.stock_uom;
+      new_item.actual_batch_qty = "";
+      new_item.conversion_factor = 1;
+      new_item.posa_offers = JSON.stringify([]);
+      new_item.posa_offer_applied = 0;
+      new_item.posa_is_offer = item.posa_is_offer;
+      new_item.posa_is_replace = item.posa_is_replace || null;
+      new_item.is_free_item = 0;
+      new_item.posa_notes = "";
+      new_item.posa_delivery_date = "";
+      new_item.posa_row_id = this.makeid(20);
+      if (
+        (!this.pos_profile.posa_auto_set_batch && new_item.has_batch_no) ||
+        new_item.has_serial_no
+      ) {
+        this.expanded.push(new_item);
+      }
+      return new_item;
+    },
+
+    cancel_invoice() {
+      const doc = this.get_invoice_doc();
+      this.invoiceType = this.pos_profile.posa_default_sales_order
+        ? "Order"
+        : "Invoice";
+      this.invoiceTypes = ["Invoice", "Order"];
+      this.posting_date = frappe.datetime.nowdate();
+      if (doc.name && this.pos_profile.posa_allow_delete) {
+        frappe.call({
+          method: "posawesome.posawesome.api.posapp.delete_invoice",
+          args: { invoice: doc.name },
+          async: true,
+          callback: function (r) {
+            if (r.message) {
+              evntBus.emit("show_mesage", {
+                text: r.message,
+                color: "warning",
+              });
+            }
+          },
+        });
+      }
+      this.items = [];
+      this.posa_offers = [];
+      evntBus.emit("set_pos_coupons", []);
+      this.posa_coupons = [];
+      this.customer = this.pos_profile.customer;
+      this.invoice_doc = "";
+      this.return_doc = "";
+      this.discount_amount = 0;
+      this.additional_discount_percentage = 0;
+      this.delivery_charges_rate = 0;
+      this.selcted_delivery_charges = {};
+      evntBus.emit("set_customer_readonly", false);
+      this.cancel_dialog = false;
+    },
+
+    new_invoice(data = {}) {
+      let old_invoice = null;
+      evntBus.emit("set_customer_readonly", false);
+      this.expanded = [];
+      this.posa_offers = [];
+      evntBus.emit("set_pos_coupons", []);
+      this.posa_coupons = [];
+      this.return_doc = "";
+      const doc = this.get_invoice_doc();
+      if (doc.name) {
+        old_invoice = this.update_invoice(doc);
+      } else {
+        if (doc.items.length) {
+          old_invoice = this.update_invoice(doc);
+        }
+      }
+      if (!data.name && !data.is_return) {
+        this.items = [];
+        this.customer = this.pos_profile.customer;
+        this.invoice_doc = "";
+        this.discount_amount = 0;
+        this.additional_discount_percentage = 0;
+        this.invoiceType = this.pos_profile.posa_default_sales_order
+          ? "Order"
+          : "Invoice";
+        this.invoiceTypes = ["Invoice", "Order"];
+      } else {
+        if (data.is_return) {
+          evntBus.emit("set_customer_readonly", true);
+          this.invoiceType = "Return";
+          this.invoiceTypes = ["Return"];
+        }
+        this.invoice_doc = data;
+        this.items = data.items;
+        this.update_items_details(this.items);
+        this.posa_offers = data.posa_offers || [];
+        this.items.forEach((item) => {
+          if (!item.posa_row_id) {
+            item.posa_row_id = this.makeid(20);
+          }
+          if (item.batch_no) {
+            this.set_batch_qty(item, item.batch_no);
+          }
+        });
+        this.customer = data.customer;
+        this.posting_date = data.posting_date || frappe.datetime.nowdate();
+        this.discount_amount = data.discount_amount;
+        this.additional_discount_percentage =
+          data.additional_discount_percentage;
+        this.items.forEach((item) => {
+          if (item.serial_no) {
+            item.serial_no_selected = [];
+            const serial_list = item.serial_no.split("\n");
+            serial_list.forEach((element) => {
+              if (element.length) {
+                item.serial_no_selected.push(element);
+              }
+            });
+            item.serial_no_selected_count = item.serial_no_selected.length;
+          }
+        });
+      }
+      return old_invoice;
+    },
+
+    async new_order(data = {}) {
+      let old_invoice = null;
+      evntBus.emit("set_customer_readonly", false);
+      this.expanded = [];
+      this.posa_offers = [];
+      evntBus.emit("set_pos_coupons", []);
+      this.posa_coupons = [];
+      this.return_doc = "";
+      if (!data.name && !data.is_return) {
+        this.items = [];
+        this.customer = this.pos_profile.customer;
+        this.invoice_doc = "";
+        this.discount_amount = 0;
+        this.additional_discount_percentage = 0;
+        this.invoiceType = "Invoice";
+        this.invoiceTypes = ["Invoice", "Order"];
+      } else {
+        if (data.is_return) {
+          evntBus.emit("set_customer_readonly", true);
+          this.invoiceType = "Return";
+          this.invoiceTypes = ["Return"];
+        }
+        this.invoice_doc = data;
+        this.items = data.items;
+        this.update_items_details(this.items);
+        this.posa_offers = data.posa_offers || [];
+        this.items.forEach((item) => {
+          if (!item.posa_row_id) {
+            item.posa_row_id = this.makeid(20);
+          }
+          if (item.batch_no) {
+            this.set_batch_qty(item, item.batch_no);
+          }
+        });
+        this.customer = data.customer;
+        this.posting_date = data.posting_date || frappe.datetime.nowdate();
+        this.discount_amount = data.discount_amount;
+        this.additional_discount_percentage =
+          data.additional_discount_percentage;
+        this.items.forEach((item) => {
+          if (item.serial_no) {
+            item.serial_no_selected = [];
+            const serial_list = item.serial_no.split("\n");
+            serial_list.forEach((element) => {
+              if (element.length) {
+                item.serial_no_selected.push(element);
+              }
+            });
+            item.serial_no_selected_count = item.serial_no_selected.length;
+          }
+        });
+      }
+      return old_invoice;
+    },
+
+    get_invoice_doc() {
+      let doc = {};
+      if (this.invoice_doc.name) {
+        doc = { ...this.invoice_doc };
+      }
+      doc.doctype = "Sales Invoice";
+      doc.is_pos = 1;
+      doc.ignore_pricing_rule = 1;
+      doc.company = doc.company || this.pos_profile.company;
+      doc.pos_profile = doc.pos_profile || this.pos_profile.name;
+      doc.campaign = doc.campaign || this.pos_profile.campaign;
+      doc.currency = doc.currency || this.pos_profile.currency;
+      doc.naming_series = doc.naming_series || this.pos_profile.naming_series;
+      doc.customer = this.customer;
+      doc.items = this.get_invoice_items();
+      doc.total = this.subtotal;
+      doc.discount_amount = flt(this.discount_amount);
+      doc.additional_discount_percentage = flt(
+        this.additional_discount_percentage
+      );
+      doc.posa_pos_opening_shift = this.pos_opening_shift.name;
+      doc.payments = this.get_payments();
+      doc.taxes = [];
+      doc.is_return = this.invoice_doc.is_return;
+      doc.return_against = this.invoice_doc.return_against;
+      doc.posa_offers = this.posa_offers;
+      doc.posa_coupons = this.posa_coupons;
+      doc.posa_delivery_charges = this.selcted_delivery_charges.name;
+      doc.posa_delivery_charges_rate = this.delivery_charges_rate || 0;
+      doc.posting_date = this.posting_date;
+      return doc;
+    },
+
+    async get_invoice_from_order_doc() {
+      let doc = {};
+      if (this.invoice_doc.doctype == "Sales Order") {
+        await frappe.call({
+          method:
+            "posawesome.posawesome.api.posapp.create_sales_invoice_from_order",
+          args: {
+            sales_order: this.invoice_doc.name,
+          },
+          // async: false,
+          callback: function (r) {
+            if (r.message) {
+              doc = r.message;
+            }
+          },
+        });
+      } else {
+        doc = this.invoice_doc;
+      }
+      const Items = [];
+      const updatedItemsData = this.get_invoice_items();
+      doc.items.forEach((item) => {
+        const updatedData = updatedItemsData.find(
+          (updatedItem) => updatedItem.item_code === item.item_code
+        );
+        if (updatedData) {
+          item.item_code = updatedData.item_code;
+          item.posa_row_id = updatedData.posa_row_id;
+          item.posa_offers = updatedData.posa_offers;
+          item.posa_offer_applied = updatedData.posa_offer_applied;
+          item.posa_is_offer = updatedData.posa_is_offer;
+          item.posa_is_replace = updatedData.posa_is_replace;
+          item.is_free_item = updatedData.is_free_item;
+          item.qty = flt(updatedData.qty);
+          item.rate = flt(updatedData.rate);
+          item.uom = updatedData.uom;
+          item.amount = flt(updatedData.qty) * flt(updatedData.rate);
+          item.conversion_factor = updatedData.conversion_factor;
+          item.serial_no = updatedData.serial_no;
+          item.discount_percentage = flt(updatedData.discount_percentage);
+          item.discount_amount = flt(updatedData.discount_amount);
+          item.batch_no = updatedData.batch_no;
+          item.posa_notes = updatedData.posa_notes;
+          item.posa_delivery_date = updatedData.posa_delivery_date;
+          item.price_list_rate = updatedData.price_list_rate;
+          Items.push(item);
+        }
+      });
+
+      doc.items = Items;
+      const newItems = [...doc.items];
+      const existingItemCodes = new Set(newItems.map((item) => item.item_code));
+      updatedItemsData.forEach((updatedItem) => {
+        if (!existingItemCodes.has(updatedItem.item_code)) {
+          newItems.push(updatedItem);
+        }
+      });
+      doc.items = newItems;
+      doc.update_stock = 1;
+      doc.is_pos = 1;
+      doc.payments = this.get_payments();
+      return doc;
+    },
+
+    get_invoice_items() {
+      const items_list = [];
+      this.items.forEach((item) => {
+        const new_item = {
+          item_code: item.item_code,
+          posa_row_id: item.posa_row_id,
+          posa_offers: item.posa_offers,
+          posa_offer_applied: item.posa_offer_applied,
+          posa_is_offer: item.posa_is_offer,
+          posa_is_replace: item.posa_is_replace,
+          is_free_item: item.is_free_item,
+          qty: flt(item.qty),
+          rate: flt(item.rate),
+          uom: item.uom,
+          amount: flt(item.qty) * flt(item.rate),
+          conversion_factor: item.conversion_factor,
+          serial_no: item.serial_no,
+          discount_percentage: flt(item.discount_percentage),
+          discount_amount: flt(item.discount_amount),
+          batch_no: item.batch_no,
+          posa_notes: item.posa_notes,
+          posa_delivery_date: item.posa_delivery_date,
+          price_list_rate: item.price_list_rate,
+        };
+        items_list.push(new_item);
+      });
+
+      return items_list;
+    },
+
+    get_order_items() {
+      const items_list = [];
+      this.items.forEach((item) => {
+        const new_item = {
+          item_code: item.item_code,
+          posa_row_id: item.posa_row_id,
+          posa_offers: item.posa_offers,
+          posa_offer_applied: item.posa_offer_applied,
+          posa_is_offer: item.posa_is_offer,
+          posa_is_replace: item.posa_is_replace,
+          is_free_item: item.is_free_item,
+          qty: flt(item.qty),
+          rate: flt(item.rate),
+          uom: item.uom,
+          amount: flt(item.qty) * flt(item.rate),
+          conversion_factor: item.conversion_factor,
+          serial_no: item.serial_no,
+          discount_percentage: flt(item.discount_percentage),
+          discount_amount: flt(item.discount_amount),
+          batch_no: item.batch_no,
+          posa_notes: item.posa_notes,
+          posa_delivery_date: item.posa_delivery_date,
+          price_list_rate: item.price_list_rate,
+        };
+        items_list.push(new_item);
+      });
+
+      return items_list;
+    },
+
+    get_payments() {
+      const payments = [];
+      this.pos_profile.payments.forEach((payment) => {
+        payments.push({
+          amount: 0,
+          mode_of_payment: payment.mode_of_payment,
+          default: payment.default,
+          account: "",
+        });
+      });
+      return payments;
+    },
+
+    update_invoice(doc) {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.update_invoice",
+        args: {
+          data: doc,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            vm.invoice_doc = r.message;
+          }
+        },
+      });
+      return this.invoice_doc;
+    },
+
+    update_invoice_from_order(doc) {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.update_invoice_from_order",
+        args: {
+          data: doc,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            vm.invoice_doc = r.message;
+          }
+        },
+      });
+      return this.invoice_doc;
+    },
+
+    process_invoice() {
+      const doc = this.get_invoice_doc();
+      if (doc.name) {
+        return this.update_invoice(doc);
+      } else {
+        return this.update_invoice(doc);
+      }
+    },
+
+    async process_invoice_from_order() {
+      const doc = await this.get_invoice_from_order_doc();
+      var up_invoice;
+      if (doc.name) {
+        up_invoice = await this.update_invoice_from_order(doc);
+        return up_invoice;
+      } else {
+        return this.update_invoice_from_order(doc);
+      }
+    },
+
+    async show_payment() {
+      if (!this.customer) {
+        console.log(1);
+        evntBus.emit("show_mesage", {
+          text: __(`There is no Customer !`),
+          color: "error",
+        });
+        return;
+      }
+      if (!this.items.length) {
+        evntBus.emit("show_mesage", {
+          text: __(`There is no Items !`),
+          color: "error",
+        });
+        return;
+      }
+      if (!this.validate()) {
+        return;
+      }
+      if (this.invoice_doc.doctype == "Sales Order") {
+        evntBus.emit("show_payment", "true");
+        const invoice_doc = await this.process_invoice_from_order();
+        evntBus.emit("send_invoice_doc_payment", invoice_doc);
+      } else if (this.invoice_doc.doctype == "Sales Invoice") {
+        const sales_invoice_item = this.invoice_doc.items[0];
+        var sales_invoice_item_doc = {};
+        frappe.call({
+          method:
+            "posawesome.posawesome.api.posapp.get_sales_invoice_child_table",
+          args: {
+            sales_invoice: this.invoice_doc.name,
+            sales_invoice_item: sales_invoice_item.name,
+          },
+          async: false,
+          callback: function (r) {
+            if (r.message) {
+              sales_invoice_item_doc = r.message;
+            }
+          },
+        });
+        if (sales_invoice_item_doc.sales_order) {
+          evntBus.emit("show_payment", "true");
+          const invoice_doc = await this.process_invoice_from_order();
+          evntBus.emit("send_invoice_doc_payment", invoice_doc);
+        } else {
+          evntBus.emit("show_payment", "true");
+          const invoice_doc = this.process_invoice();
+          evntBus.emit("send_invoice_doc_payment", invoice_doc);
+        }
+      } else {
+        evntBus.emit("show_payment", "true");
+        const invoice_doc = this.process_invoice();
+        evntBus.emit("send_invoice_doc_payment", invoice_doc);
+      }
+    },
+
+    validate() {
+      let value = true;
+      this.items.forEach((item) => {
+        if (
+          this.pos_profile.posa_max_discount_allowed &&
+          !item.posa_offer_applied
+        ) {
+          if (item.discount_amount && this.flt(item.discount_amount) > 0) {
+            // calc discount percentage
+            const discount_percentage =
+              (this.flt(item.discount_amount) * 100) /
+              this.flt(item.price_list_rate);
+            if (
+              discount_percentage > this.pos_profile.posa_max_discount_allowed
+            ) {
+              evntBus.emit("show_mesage", {
+                text: __(
+                  `Discount percentage for item '{0}' cannot be greater than {1}%`,
+                  [item.item_name, this.pos_profile.posa_max_discount_allowed]
+                ),
+                color: "error",
+              });
+              value = false;
+            }
+          }
+        }
+        if (this.stock_settings.allow_negative_stock != 1) {
+          if (
+            this.invoiceType == "Invoice" &&
+            ((item.is_stock_item && item.stock_qty && !item.actual_qty) ||
+              (item.is_stock_item && item.stock_qty > item.actual_qty))
+          ) {
+            evntBus.emit("show_mesage", {
+              text: __(
+                `The existing quantity '{0}' for item '{1}' is not enough`,
+                [item.actual_qty, item.item_name]
+              ),
+              color: "error",
+            });
+            value = false;
+          }
+        }
+        if (item.qty == 0) {
+          evntBus.emit("show_mesage", {
+            text: __(`Quantity for item '{0}' cannot be Zero (0)`, [
+              item.item_name,
+            ]),
+            color: "error",
+          });
+          value = false;
+        }
+        if (
+          item.max_discount > 0 &&
+          item.discount_percentage > item.max_discount
+        ) {
+          evntBus.emit("show_mesage", {
+            text: __(`Maximum discount for Item {0} is {1}%`, [
+              item.item_name,
+              item.max_discount,
+            ]),
+            color: "error",
+          });
+          value = false;
+        }
+        if (item.has_serial_no) {
+          if (
+            !this.invoice_doc.is_return &&
+            (!item.serial_no_selected ||
+              item.stock_qty != item.serial_no_selected.length)
+          ) {
+            evntBus.emit("show_mesage", {
+              text: __(`Selected serial numbers of item {0} is incorrect`, [
+                item.item_name,
+              ]),
+              color: "error",
+            });
+            value = false;
+          }
+        }
+        if (item.has_batch_no) {
+          if (item.stock_qty > item.actual_batch_qty) {
+            evntBus.emit("show_mesage", {
+              text: __(
+                `The existing batch quantity of item {0} is not enough`,
+                [item.item_name]
+              ),
+              color: "error",
+            });
+            value = false;
+          }
+        }
+        if (this.pos_profile.posa_allow_user_to_edit_additional_discount) {
+          const clac_percentage = (this.discount_amount / this.Total) * 100;
+          if (clac_percentage > this.pos_profile.posa_max_discount_allowed) {
+            evntBus.emit("show_mesage", {
+              text: __(`The discount should not be higher than {0}%`, [
+                this.pos_profile.posa_max_discount_allowed,
+              ]),
+              color: "error",
+            });
+            value = false;
+          }
+        }
+        if (this.invoice_doc.is_return) {
+          if (this.subtotal >= 0) {
+            evntBus.emit("show_mesage", {
+              text: __(`Return Invoice Total Not Correct`),
+              color: "error",
+            });
+            value = false;
+            return value;
+          }
+          if (Math.abs(this.subtotal) > Math.abs(this.return_doc.total)) {
+            evntBus.emit("show_mesage", {
+              text: __(`Return Invoice Total should not be higher than {0}`, [
+                this.return_doc.total,
+              ]),
+              color: "error",
+            });
+            value = false;
+            return value;
+          }
+          this.items.forEach((item) => {
+            const return_item = this.return_doc.items.find(
+              (element) => element.item_code == item.item_code
+            );
+
+            if (!return_item) {
+              evntBus.emit("show_mesage", {
+                text: __(
+                  `The item {0} cannot be returned because it is not in the invoice {1}`,
+                  [item.item_name, this.return_doc.name]
+                ),
+                color: "error",
+              });
+              value = false;
+              return value;
+            } else if (
+              Math.abs(item.qty) > Math.abs(return_item.qty) ||
+              Math.abs(item.qty) == 0
+            ) {
+              evntBus.emit("show_mesage", {
+                text: __(`The QTY of the item {0} cannot be greater than {1}`, [
+                  item.item_name,
+                  return_item.qty,
+                ]),
+                color: "error",
+              });
+              value = false;
+              return value;
+            }
+          });
+        }
+      });
+      return value;
+    },
+
+    get_draft_invoices() {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_draft_invoices",
+        args: {
+          pos_opening_shift: this.pos_opening_shift.name,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            evntBus.emit("open_drafts", r.message);
+          }
+        },
+      });
+    },
+
+    get_draft_orders() {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.search_orders",
+        args: {
+          company: this.pos_profile.company,
+          currency: this.pos_profile.currency,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            evntBus.emit("open_orders", r.message);
+          }
+        },
+      });
+    },
+
+    open_returns() {
+      evntBus.emit("open_returns", this.pos_profile.company);
+    },
+
+    close_payments() {
+      evntBus.emit("show_payment", "false");
+    },
+
+    update_items_details(items) {
+      if (!items.length > 0) {
+        return;
+      }
+      const vm = this;
+      if (!vm.pos_profile) return;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_items_details",
+        async: false,
+        args: {
+          pos_profile: vm.pos_profile,
+          items_data: items,
+        },
+        callback: function (r) {
+          if (r.message) {
+            items.forEach((item) => {
+              const updated_item = r.message.find(
+                (element) => element.posa_row_id == item.posa_row_id
+              );
+              item.actual_qty = updated_item.actual_qty;
+              item.serial_no_data = updated_item.serial_no_data;
+              item.batch_no_data = updated_item.batch_no_data;
+              item.item_uoms = updated_item.item_uoms;
+              item.has_batch_no = updated_item.has_batch_no;
+              item.has_serial_no = updated_item.has_serial_no;
+            });
+          }
+        },
+      });
+    },
+
+    update_item_detail(item) {
+      if (!item.item_code || this.invoice_doc.is_return) {
+        return;
+      }
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_item_detail",
+        args: {
+          warehouse: this.pos_profile.warehouse,
+          doc: this.get_invoice_doc(),
+          price_list: this.pos_profile.price_list,
+          item: {
+            item_code: item.item_code,
+            customer: this.customer,
+            doctype: "Sales Invoice",
+            name: "New Sales Invoice 1",
+            company: this.pos_profile.company,
+            conversion_rate: 1,
+            qty: item.qty,
+            price_list_rate: item.price_list_rate,
+            child_docname: "New Sales Invoice Item 1",
+            cost_center: this.pos_profile.cost_center,
+            currency: this.pos_profile.currency,
+            // plc_conversion_rate: 1,
+            pos_profile: this.pos_profile.name,
+            uom: item.uom,
+            tax_category: "",
+            transaction_type: "selling",
+            update_stock: this.pos_profile.update_stock,
+            price_list: this.get_price_list(),
+            has_batch_no: item.has_batch_no,
+            serial_no: item.serial_no,
+            batch_no: item.batch_no,
+            is_stock_item: item.is_stock_item,
+          },
+        },
+        callback: function (r) {
+          if (r.message) {
+            const data = r.message;
+            if (data.batch_no_data) {
+              item.batch_no_data = data.batch_no_data;
+            }
+            if (
+              item.has_batch_no &&
+              vm.pos_profile.posa_auto_set_batch &&
+              !item.batch_no &&
+              data.batch_no_data
+            ) {
+              item.batch_no_data = data.batch_no_data;
+              vm.set_batch_qty(item, item.batch_no, false);
+            }
+            if (data.has_pricing_rule) {
+            } else if (
+              vm.pos_profile.posa_apply_customer_discount &&
+              vm.customer_info.posa_discount > 0 &&
+              vm.customer_info.posa_discount <= 100
+            ) {
+              if (
+                item.posa_is_offer == 0 &&
+                !item.posa_is_replace &&
+                item.posa_offer_applied == 0
+              ) {
+                if (item.max_discount > 0) {
+                  item.discount_percentage =
+                    item.max_discount < vm.customer_info.posa_discount
+                      ? item.max_discount
+                      : vm.customer_info.posa_discount;
+                } else {
+                  item.discount_percentage = vm.customer_info.posa_discount;
+                }
+              }
+            }
+            if (!item.batch_price) {
+              if (
+                !item.is_free_item &&
+                !item.posa_is_offer &&
+                !item.posa_is_replace
+              ) {
+                item.price_list_rate = data.price_list_rate;
+              }
+            }
+            item.last_purchase_rate = data.last_purchase_rate;
+            item.projected_qty = data.projected_qty;
+            item.reserved_qty = data.reserved_qty;
+            item.conversion_factor = data.conversion_factor;
+            item.stock_qty = data.stock_qty;
+            item.actual_qty = data.actual_qty;
+            item.stock_uom = data.stock_uom;
+            (item.has_serial_no = data.has_serial_no),
+              (item.has_batch_no = data.has_batch_no),
+              vm.calc_item_price(item);
+          }
+        },
+      });
+    },
+
+    fetch_customer_details() {
+      const vm = this;
+      if (this.customer) {
+        frappe.call({
+          method: "posawesome.posawesome.api.posapp.get_customer_info",
+          args: {
+            customer: vm.customer,
+          },
+          async: false,
+          callback: (r) => {
+            const message = r.message;
+            if (!r.exc) {
+              vm.customer_info = {
+                ...message,
+              };
+            }
+            vm.update_price_list();
+          },
+        });
+      }
+    },
+
+    get_price_list() {
+      let price_list = this.pos_profile.selling_price_list;
+      if (this.customer_info && this.pos_profile) {
+        const { customer_price_list, customer_group_price_list } =
+          this.customer_info;
+        const pos_price_list = this.pos_profile.selling_price_list;
+        if (customer_price_list && customer_price_list != pos_price_list) {
+          price_list = customer_price_list;
+        } else if (
+          customer_group_price_list &&
+          customer_group_price_list != pos_price_list
+        ) {
+          price_list = customer_group_price_list;
+        }
+      }
+      return price_list;
+    },
+
+    update_price_list() {
+      let price_list = this.get_price_list();
+      if (price_list == this.pos_profile.selling_price_list) {
+        price_list = null;
+      }
+      evntBus.emit("update_customer_price_list", price_list);
+    },
+    update_discount_umount(event) {
+      this.additional_discount_percentage = event.target.value;
+      const value = flt(this.additional_discount_percentage);
+      if (value >= -100 && value <= 100) {
+        this.discount_amount = (this.Total * value) / 100;
+      } else {
+        this.additional_discount_percentage = 0;
+        this.discount_amount = 0;
+      }
+    },
+
+    calc_prices(item, value, $event) {
+      if (event.target.id === "rate") {
+        item.discount_percentage = 0;
+        if (value < item.price_list_rate) {
+          item.discount_amount = this.flt(
+            this.flt(item.price_list_rate) - flt(value),
+            this.currency_precision
+          );
+        } else if (value < 0) {
+          item.rate = item.price_list_rate;
+          item.discount_amount = 0;
+        } else if (value > item.price_list_rate) {
+          item.discount_amount = 0;
+        }
+      } else if (event.target.id === "discount_amount") {
+        if (value < 0) {
+          item.discount_amount = 0;
+          item.discount_percentage = 0;
+        } else {
+          item.rate = flt(item.price_list_rate) - flt(value);
+          item.discount_percentage = 0;
+        }
+      } else if (event.target.id === "discount_percentage") {
+        if (value < 0) {
+          item.discount_amount = 0;
+          item.discount_percentage = 0;
+        } else {
+          item.rate = this.flt(
+            flt(item.price_list_rate) -
+              (flt(item.price_list_rate) * flt(value)) / 100,
+            this.currency_precision
+          );
+          item.discount_amount = this.flt(
+            flt(item.price_list_rate) - flt(+item.rate),
+            this.currency_precision
+          );
+        }
+      }
+    },
+
+    calc_item_price(item) {
+      if (!item.posa_offer_applied) {
+        if (item.price_list_rate) {
+          item.rate = item.price_list_rate;
+        }
+      }
+      if (item.discount_percentage) {
+        item.rate =
+          flt(item.price_list_rate) -
+          (flt(item.price_list_rate) * flt(item.discount_percentage)) / 100;
+        item.discount_amount = this.flt(
+          flt(item.price_list_rate) - flt(item.rate),
+          this.currency_precision
+        );
+      } else if (item.discount_amount) {
+        item.rate = this.flt(
+          flt(item.price_list_rate) - flt(item.discount_amount),
+          this.currency_precision
+        );
+      }
+    },
+
+    calc_uom(item, value) {
+      const new_uom = item.item_uoms.find((element) => element.uom == value);
+      item.conversion_factor = new_uom.conversion_factor;
+      if (!item.posa_offer_applied) {
+        item.discount_amount = 0;
+        item.discount_percentage = 0;
+      }
+      if (item.batch_price) {
+        item.price_list_rate = item.batch_price * new_uom.conversion_factor;
+      }
+      this.update_item_detail(item);
+    },
+
+    calc_stock_qty(item, value) {
+      item.stock_qty = item.conversion_factor * value;
+    },
+
+    set_serial_no(item) {
+      if (!item.has_serial_no) return;
+      item.serial_no = "";
+      item.serial_no_selected.forEach((element) => {
+        item.serial_no += element + "\n";
+      });
+      item.serial_no_selected_count = item.serial_no_selected.length;
+      if (item.serial_no_selected_count != item.stock_qty) {
+        item.qty = item.serial_no_selected_count;
+        this.calc_stock_qty(item, item.qty);
+        this.$forceUpdate();
+      }
+    },
+
+    set_batch_qty(item, value, update = true) {
+      const existing_items = this.items.filter(
+        (element) =>
+          element.item_code == item.item_code &&
+          element.posa_row_id != item.posa_row_id
+      );
+      const used_batches = {};
+      item.batch_no_data.forEach((batch) => {
+        used_batches[batch.batch_no] = {
+          ...batch,
+          used_qty: 0,
+          remaining_qty: batch.batch_qty,
+        };
+        existing_items.forEach((element) => {
+          if (element.batch_no && element.batch_no == batch.batch_no) {
+            used_batches[batch.batch_no].used_qty += element.qty;
+            used_batches[batch.batch_no].remaining_qty -= element.qty;
+            used_batches[batch.batch_no].batch_qty -= element.qty;
+          }
+        });
+      });
+
+      // set item batch_no based on:
+      // 1. if batch has expiry_date we should use the batch with the nearest expiry_date
+      // 2. if batch has no expiry_date we should use the batch with the earliest manufacturing_date
+      // 3. we should not use batch with remaining_qty = 0
+      // 4. we should the highest remaining_qty
+      const batch_no_data = Object.values(used_batches)
+        .filter((batch) => batch.remaining_qty > 0)
+        .sort((a, b) => {
+          if (a.expiry_date && b.expiry_date) {
+            return a.expiry_date - b.expiry_date;
+          } else if (a.expiry_date) {
+            return -1;
+          } else if (b.expiry_date) {
+            return 1;
+          } else if (a.manufacturing_date && b.manufacturing_date) {
+            return a.manufacturing_date - b.manufacturing_date;
+          } else if (a.manufacturing_date) {
+            return -1;
+          } else if (b.manufacturing_date) {
+            return 1;
+          } else {
+            return b.remaining_qty - a.remaining_qty;
+          }
+        });
+      if (batch_no_data.length > 0) {
+        let batch_to_use = null;
+        if (value) {
+          batch_to_use = batch_no_data.find((batch) => batch.batch_no == value);
+        }
+        if (!batch_to_use) {
+          batch_to_use = batch_no_data[0];
+        }
+        item.batch_no = batch_to_use.batch_no;
+        item.actual_batch_qty = batch_to_use.batch_qty;
+        item.batch_no_expiry_date = batch_to_use.expiry_date;
+        if (batch_to_use.batch_price) {
+          item.batch_price = batch_to_use.batch_price;
+          item.price_list_rate = batch_to_use.batch_price;
+          item.rate = batch_to_use.batch_price;
+        } else if (update) {
+          item.batch_price = null;
+          this.update_item_detail(item);
+        }
+      } else {
+        item.batch_no = null;
+        item.actual_batch_qty = null;
+        item.batch_no_expiry_date = null;
+        item.batch_price = null;
+      }
+      // update item batch_no_data from batch_no_data
+      item.batch_no_data = batch_no_data;
+    },
+
+    shortOpenPayment(e) {
+      if (e.key === "s" && (e.ctrlKey || e.metaKey)) {
+        e.preventDefault();
+        this.show_payment();
+      }
+    },
+
+    shortDeleteFirstItem(e) {
+      if (e.key === "d" && (e.ctrlKey || e.metaKey)) {
+        e.preventDefault();
+        this.remove_item(this.items[0]);
+      }
+    },
+
+    shortOpenFirstItem(e) {
+      if (e.key === "a" && (e.ctrlKey || e.metaKey)) {
+        e.preventDefault();
+        this.expanded = [];
+        this.expanded.push(this.items[0]);
+      }
+    },
+
+    shortSelectDiscount(e) {
+      if (e.key === "z" && (e.ctrlKey || e.metaKey)) {
+        e.preventDefault();
+        this.$refs.discount.focus();
+      }
+    },
+
+    makeid(length) {
+      let result = "";
+      const characters = "abcdefghijklmnopqrstuvwxyz0123456789";
+      const charactersLength = characters.length;
+      for (var i = 0; i < length; i++) {
+        result += characters.charAt(
+          Math.floor(Math.random() * charactersLength)
+        );
+      }
+      return result;
+    },
+
+    checkOfferIsAppley(item, offer) {
+      let applied = false;
+      const item_offers = JSON.parse(item.posa_offers);
+      for (const row_id of item_offers) {
+        const exist_offer = this.posa_offers.find((el) => row_id == el.row_id);
+        if (exist_offer && exist_offer.offer_name == offer.name) {
+          applied = true;
+          break;
+        }
+      }
+      return applied;
+    },
+
+    handelOffers() {
+      const offers = [];
+      this.posOffers.forEach((offer) => {
+        if (offer.apply_on === "Item Code") {
+          const itemOffer = this.getItemOffer(offer);
+          if (itemOffer) {
+            offers.push(itemOffer);
+          }
+        } else if (offer.apply_on === "Item Group") {
+          const groupOffer = this.getGroupOffer(offer);
+          if (groupOffer) {
+            offers.push(groupOffer);
+          }
+        } else if (offer.apply_on === "Brand") {
+          const brandOffer = this.getBrandOffer(offer);
+          if (brandOffer) {
+            offers.push(brandOffer);
+          }
+        } else if (offer.apply_on === "Transaction") {
+          const transactionOffer = this.getTransactionOffer(offer);
+          if (transactionOffer) {
+            offers.push(transactionOffer);
+          }
+        }
+      });
+
+      this.setItemGiveOffer(offers);
+      this.updatePosOffers(offers);
+    },
+
+    setItemGiveOffer(offers) {
+      // Set item give offer for replace
+      offers.forEach((offer) => {
+        if (
+          offer.apply_on == "Item Code" &&
+          offer.apply_type == "Item Code" &&
+          offer.replace_item
+        ) {
+          offer.give_item = offer.item;
+          offer.apply_item_code = offer.item;
+        } else if (
+          offer.apply_on == "Item Group" &&
+          offer.apply_type == "Item Group" &&
+          offer.replace_cheapest_item
+        ) {
+          const offerItemCode = this.getCheapestItem(offer).item_code;
+          offer.give_item = offerItemCode;
+          offer.apply_item_code = offerItemCode;
+        }
+      });
+    },
+
+    getCheapestItem(offer) {
+      let itemsRowID;
+      if (typeof offer.items === "string") {
+        itemsRowID = JSON.parse(offer.items);
+      } else {
+        itemsRowID = offer.items;
+      }
+      const itemsList = [];
+      itemsRowID.forEach((row_id) => {
+        itemsList.push(this.getItemFromRowID(row_id));
+      });
+      const result = itemsList.reduce(function (res, obj) {
+        return !obj.posa_is_replace &&
+          !obj.posa_is_offer &&
+          obj.price_list_rate < res.price_list_rate
+          ? obj
+          : res;
+      });
+      return result;
+    },
+
+    getItemFromRowID(row_id) {
+      const item = this.items.find((el) => el.posa_row_id == row_id);
+      return item;
+    },
+
+    checkQtyAnountOffer(offer, qty, amount) {
+      let min_qty = false;
+      let max_qty = false;
+      let min_amt = false;
+      let max_amt = false;
+      const applys = [];
+
+      if (offer.min_qty || offer.min_qty == 0) {
+        if (qty >= offer.min_qty) {
+          min_qty = true;
+        }
+        applys.push(min_qty);
+      }
+
+      if (offer.max_qty > 0) {
+        if (qty <= offer.max_qty) {
+          max_qty = true;
+        }
+        applys.push(max_qty);
+      }
+
+      if (offer.min_amt > 0) {
+        if (amount >= offer.min_amt) {
+          min_amt = true;
+        }
+        applys.push(min_amt);
+      }
+
+      if (offer.max_amt > 0) {
+        if (amount <= offer.max_amt) {
+          max_amt = true;
+        }
+        applys.push(max_amt);
+      }
+      let apply = false;
+      if (!applys.includes(false)) {
+        apply = true;
+      }
+      const res = {
+        apply: apply,
+        conditions: { min_qty, max_qty, min_amt, max_amt },
+      };
+      return res;
+    },
+
+    checkOfferCoupon(offer) {
+      if (offer.coupon_based) {
+        const coupon = this.posa_coupons.find(
+          (el) => offer.name == el.pos_offer
+        );
+        if (coupon) {
+          offer.coupon = coupon.coupon;
+          return true;
+        } else {
+          return false;
+        }
+      } else {
+        offer.coupon = null;
+        return true;
+      }
+    },
+
+    getItemOffer(offer) {
+      let apply_offer = null;
+      if (offer.apply_on === "Item Code") {
+        if (this.checkOfferCoupon(offer)) {
+          this.items.forEach((item) => {
+            if (!item.posa_is_offer && item.item_code === offer.item) {
+              const items = [];
+              if (
+                offer.offer === "Item Price" &&
+                item.posa_offer_applied &&
+                !this.checkOfferIsAppley(item, offer)
+              ) {
+              } else {
+                const res = this.checkQtyAnountOffer(
+                  offer,
+                  item.stock_qty,
+                  item.stock_qty * item.price_list_rate
+                );
+                if (res.apply) {
+                  items.push(item.posa_row_id);
+                  offer.items = items;
+                  apply_offer = offer;
+                }
+              }
+            }
+          });
+        }
+      }
+      return apply_offer;
+    },
+
+    getGroupOffer(offer) {
+      let apply_offer = null;
+      if (offer.apply_on === "Item Group") {
+        if (this.checkOfferCoupon(offer)) {
+          const items = [];
+          let total_count = 0;
+          let total_amount = 0;
+          this.items.forEach((item) => {
+            if (!item.posa_is_offer && item.item_group === offer.item_group) {
+              if (
+                offer.offer === "Item Price" &&
+                item.posa_offer_applied &&
+                !this.checkOfferIsAppley(item, offer)
+              ) {
+              } else {
+                total_count += item.stock_qty;
+                total_amount += item.stock_qty * item.price_list_rate;
+                items.push(item.posa_row_id);
+              }
+            }
+          });
+          if (total_count || total_amount) {
+            const res = this.checkQtyAnountOffer(
+              offer,
+              total_count,
+              total_amount
+            );
+            if (res.apply) {
+              offer.items = items;
+              apply_offer = offer;
+            }
+          }
+        }
+      }
+      return apply_offer;
+    },
+
+    getBrandOffer(offer) {
+      let apply_offer = null;
+      if (offer.apply_on === "Brand") {
+        if (this.checkOfferCoupon(offer)) {
+          const items = [];
+          let total_count = 0;
+          let total_amount = 0;
+          this.items.forEach((item) => {
+            if (!item.posa_is_offer && item.brand === offer.brand) {
+              if (
+                offer.offer === "Item Price" &&
+                item.posa_offer_applied &&
+                !this.checkOfferIsAppley(item, offer)
+              ) {
+              } else {
+                total_count += item.stock_qty;
+                total_amount += item.stock_qty * item.price_list_rate;
+                items.push(item.posa_row_id);
+              }
+            }
+          });
+          if (total_count || total_amount) {
+            const res = this.checkQtyAnountOffer(
+              offer,
+              total_count,
+              total_amount
+            );
+            if (res.apply) {
+              offer.items = items;
+              apply_offer = offer;
+            }
+          }
+        }
+      }
+      return apply_offer;
+    },
+    getTransactionOffer(offer) {
+      let apply_offer = null;
+      if (offer.apply_on === "Transaction") {
+        if (this.checkOfferCoupon(offer)) {
+          let total_qty = 0;
+          this.items.forEach((item) => {
+            if (!item.posa_is_offer && !item.posa_is_replace) {
+              total_qty += item.stock_qty;
+            }
+          });
+          const items = [];
+          const total_count = total_qty;
+          const total_amount = this.Total;
+          if (total_count || total_amount) {
+            const res = this.checkQtyAnountOffer(
+              offer,
+              total_count,
+              total_amount
+            );
+            if (res.apply) {
+              this.items.forEach((item) => {
+                items.push(item.posa_row_id);
+              });
+              offer.items = items;
+              apply_offer = offer;
+            }
+          }
+        }
+      }
+      return apply_offer;
+    },
+
+    updatePosOffers(offers) {
+      evntBus.emit("update_pos_offers", offers);
+    },
+
+    updateInvoiceOffers(offers) {
+      this.posa_offers.forEach((invoiceOffer) => {
+        const existOffer = offers.find(
+          (offer) => invoiceOffer.row_id == offer.row_id
+        );
+        if (!existOffer) {
+          this.removeApplyOffer(invoiceOffer);
+        }
+      });
+      offers.forEach((offer) => {
+        const existOffer = this.posa_offers.find(
+          (invoiceOffer) => invoiceOffer.row_id == offer.row_id
+        );
+        if (existOffer) {
+          existOffer.items = JSON.stringify(offer.items);
+          if (
+            existOffer.offer === "Give Product" &&
+            existOffer.give_item &&
+            existOffer.give_item != offer.give_item
+          ) {
+            const item_to_remove = this.items.find(
+              (item) => item.posa_row_id == existOffer.give_item_row_id
+            );
+            if (item_to_remove) {
+              const updated_item_offers = offer.items.filter(
+                (row_id) => row_id != item_to_remove.posa_row_id
+              );
+              offer.items = updated_item_offers;
+              this.remove_item(item_to_remove);
+              existOffer.give_item_row_id = null;
+              existOffer.give_item = null;
+            }
+            const newItemOffer = this.ApplyOnGiveProduct(offer);
+            if (offer.replace_cheapest_item) {
+              const cheapestItem = this.getCheapestItem(offer);
+              const oldBaseItem = this.items.find(
+                (el) => el.posa_row_id == item_to_remove.posa_is_replace
+              );
+              newItemOffer.qty = item_to_remove.qty;
+              if (oldBaseItem && !oldBaseItem.posa_is_replace) {
+                oldBaseItem.qty += item_to_remove.qty;
+              } else {
+                const restoredItem = this.ApplyOnGiveProduct(
+                  {
+                    given_qty: item_to_remove.qty,
+                  },
+                  item_to_remove.item_code
+                );
+                restoredItem.posa_is_offer = 0;
+                this.items.unshift(restoredItem);
+              }
+              newItemOffer.posa_is_offer = 0;
+              newItemOffer.posa_is_replace = cheapestItem.posa_row_id;
+              const diffQty = cheapestItem.qty - newItemOffer.qty;
+              if (diffQty <= 0) {
+                newItemOffer.qty += diffQty;
+                this.remove_item(cheapestItem);
+                newItemOffer.posa_row_id = cheapestItem.posa_row_id;
+                newItemOffer.posa_is_replace = newItemOffer.posa_row_id;
+              } else {
+                cheapestItem.qty = diffQty;
+              }
+            }
+            this.items.unshift(newItemOffer);
+            existOffer.give_item_row_id = newItemOffer.posa_row_id;
+            existOffer.give_item = newItemOffer.item_code;
+          } else if (
+            existOffer.offer === "Give Product" &&
+            existOffer.give_item &&
+            existOffer.give_item == offer.give_item &&
+            (offer.replace_item || offer.replace_cheapest_item)
+          ) {
+            this.$nextTick(function () {
+              const offerItem = this.getItemFromRowID(
+                existOffer.give_item_row_id
+              );
+              const diff = offer.given_qty - offerItem.qty;
+              if (diff > 0) {
+                const itemsRowID = JSON.parse(existOffer.items);
+                const itemsList = [];
+                itemsRowID.forEach((row_id) => {
+                  itemsList.push(this.getItemFromRowID(row_id));
+                });
+                const existItem = itemsList.find(
+                  (el) =>
+                    el.item_code == offerItem.item_code &&
+                    el.posa_is_replace != offerItem.posa_row_id
+                );
+                if (existItem) {
+                  const diffExistQty = existItem.qty - diff;
+                  if (diffExistQty > 0) {
+                    offerItem.qty += diff;
+                    existItem.qty -= diff;
+                  } else {
+                    offerItem.qty += existItem.qty;
+                    this.remove_item(existItem);
+                  }
+                }
+              }
+            });
+          } else if (existOffer.offer === "Item Price") {
+            this.ApplyOnPrice(offer);
+          } else if (existOffer.offer === "Grand Total") {
+            this.ApplyOnTotal(offer);
+          }
+          this.addOfferToItems(existOffer);
+        } else {
+          this.applyNewOffer(offer);
+        }
+      });
+    },
+
+    removeApplyOffer(invoiceOffer) {
+      if (invoiceOffer.offer === "Item Price") {
+        this.RemoveOnPrice(invoiceOffer);
+        const index = this.posa_offers.findIndex(
+          (el) => el.row_id === invoiceOffer.row_id
+        );
+        this.posa_offers.splice(index, 1);
+      }
+      if (invoiceOffer.offer === "Give Product") {
+        const item_to_remove = this.items.find(
+          (item) => item.posa_row_id == invoiceOffer.give_item_row_id
+        );
+        const index = this.posa_offers.findIndex(
+          (el) => el.row_id === invoiceOffer.row_id
+        );
+        this.posa_offers.splice(index, 1);
+        this.remove_item(item_to_remove);
+      }
+      if (invoiceOffer.offer === "Grand Total") {
+        this.RemoveOnTotal(invoiceOffer);
+        const index = this.posa_offers.findIndex(
+          (el) => el.row_id === invoiceOffer.row_id
+        );
+        this.posa_offers.splice(index, 1);
+      }
+      if (invoiceOffer.offer === "Loyalty Point") {
+        const index = this.posa_offers.findIndex(
+          (el) => el.row_id === invoiceOffer.row_id
+        );
+        this.posa_offers.splice(index, 1);
+      }
+      this.deleteOfferFromItems(invoiceOffer);
+    },
+
+    applyNewOffer(offer) {
+      if (offer.offer === "Item Price") {
+        this.ApplyOnPrice(offer);
+      }
+      if (offer.offer === "Give Product") {
+        let itemsRowID;
+        if (typeof offer.items === "string") {
+          itemsRowID = JSON.parse(offer.items);
+        } else {
+          itemsRowID = offer.items;
+        }
+        if (
+          offer.apply_on == "Item Code" &&
+          offer.apply_type == "Item Code" &&
+          offer.replace_item
+        ) {
+          const item = this.ApplyOnGiveProduct(offer, offer.item);
+          item.posa_is_replace = itemsRowID[0];
+          const baseItem = this.items.find(
+            (el) => el.posa_row_id == item.posa_is_replace
+          );
+          const diffQty = baseItem.qty - offer.given_qty;
+          item.posa_is_offer = 0;
+          if (diffQty <= 0) {
+            item.qty = baseItem.qty;
+            this.remove_item(baseItem);
+            item.posa_row_id = item.posa_is_replace;
+          } else {
+            baseItem.qty = diffQty;
+          }
+          this.items.unshift(item);
+          offer.give_item_row_id = item.posa_row_id;
+        } else if (
+          offer.apply_on == "Item Group" &&
+          offer.apply_type == "Item Group" &&
+          offer.replace_cheapest_item
+        ) {
+          const itemsList = [];
+          itemsRowID.forEach((row_id) => {
+            itemsList.push(this.getItemFromRowID(row_id));
+          });
+          const baseItem = itemsList.find(
+            (el) => el.item_code == offer.give_item
+          );
+          const item = this.ApplyOnGiveProduct(offer, offer.give_item);
+          item.posa_is_offer = 0;
+          item.posa_is_replace = baseItem.posa_row_id;
+          const diffQty = baseItem.qty - offer.given_qty;
+          if (diffQty <= 0) {
+            item.qty = baseItem.qty;
+            this.remove_item(baseItem);
+            item.posa_row_id = item.posa_is_replace;
+          } else {
+            baseItem.qty = diffQty;
+          }
+          this.items.unshift(item);
+          offer.give_item_row_id = item.posa_row_id;
+        } else {
+          const item = this.ApplyOnGiveProduct(offer);
+          this.items.unshift(item);
+          if (item) {
+            offer.give_item_row_id = item.posa_row_id;
+          }
+        }
+      }
+      if (offer.offer === "Grand Total") {
+        this.ApplyOnTotal(offer);
+      }
+      if (offer.offer === "Loyalty Point") {
+        evntBus.emit("show_mesage", {
+          text: __("Loyalty Point Offer Applied"),
+          color: "success",
+        });
+      }
+
+      const newOffer = {
+        offer_name: offer.name,
+        row_id: offer.row_id,
+        apply_on: offer.apply_on,
+        offer: offer.offer,
+        items: JSON.stringify(offer.items),
+        give_item: offer.give_item,
+        give_item_row_id: offer.give_item_row_id,
+        offer_applied: offer.offer_applied,
+        coupon_based: offer.coupon_based,
+        coupon: offer.coupon,
+      };
+      this.posa_offers.push(newOffer);
+      this.addOfferToItems(newOffer);
+    },
+
+    ApplyOnGiveProduct(offer, item_code) {
+      if (!item_code) {
+        item_code = offer.give_item;
+      }
+      const items = this.allItems;
+      const item = items.find((item) => item.item_code == item_code);
+      if (!item) {
+        return;
+      }
+      const new_item = { ...item };
+      new_item.qty = offer.given_qty;
+      new_item.stock_qty = offer.given_qty;
+      new_item.rate = offer.discount_type === "Rate" ? offer.rate : item.rate;
+      new_item.discount_amount =
+        offer.discount_type === "Discount Amount" ? offer.discount_amount : 0;
+      new_item.discount_percentage =
+        offer.discount_type === "Discount Percentage"
+          ? offer.discount_percentage
+          : 0;
+      new_item.discount_amount_per_item = 0;
+      new_item.uom = item.uom ? item.uom : item.stock_uom;
+      new_item.actual_batch_qty = "";
+      new_item.conversion_factor = 1;
+      new_item.posa_offers = JSON.stringify([]);
+      new_item.posa_offer_applied = 0;
+      new_item.posa_is_offer = 1;
+      new_item.posa_is_replace = null;
+      new_item.posa_notes = "";
+      new_item.posa_delivery_date = "";
+      new_item.is_free_item =
+        (offer.discount_type === "Rate" && !offer.rate) ||
+        (offer.discount_type === "Discount Percentage" &&
+          offer.discount_percentage == 0)
+          ? 1
+          : 0;
+      new_item.posa_row_id = this.makeid(20);
+      new_item.price_list_rate =
+        (offer.discount_type === "Rate" && !offer.rate) ||
+        (offer.discount_type === "Discount Percentage" &&
+          offer.discount_percentage == 0)
+          ? 0
+          : item.rate;
+      if (
+        (!this.pos_profile.posa_auto_set_batch && new_item.has_batch_no) ||
+        new_item.has_serial_no
+      ) {
+        this.expanded.push(new_item);
+      }
+      this.update_item_detail(new_item);
+      return new_item;
+    },
+
+    ApplyOnPrice(offer) {
+      this.items.forEach((item) => {
+        if (offer.items.includes(item.posa_row_id)) {
+          const item_offers = JSON.parse(item.posa_offers);
+          if (!item_offers.includes(offer.row_id)) {
+            if (offer.discount_type === "Rate") {
+              item.rate = offer.rate;
+            } else if (offer.discount_type === "Discount Percentage") {
+              item.discount_percentage += offer.discount_percentage;
+            } else if (offer.discount_type === "Discount Amount") {
+              item.discount_amount += offer.discount_amount;
+            }
+            item.posa_offer_applied = 1;
+            this.calc_item_price(item);
+          }
+        }
+      });
+    },
+
+    RemoveOnPrice(offer) {
+      this.items.forEach((item) => {
+        const item_offers = JSON.parse(item.posa_offers);
+        if (item_offers.includes(offer.row_id)) {
+          const originalOffer = this.posOffers.find(
+            (el) => el.name == offer.offer_name
+          );
+          if (originalOffer) {
+            if (originalOffer.discount_type === "Rate") {
+              item.rate = item.price_list_rate;
+            } else if (originalOffer.discount_type === "Discount Percentage") {
+              item.discount_percentage -= offer.discount_percentage;
+              if (!item.discount_percentage) {
+                item.discount_percentage = 0;
+                item.discount_amount = 0;
+                item.rate = item.price_list_rate;
+              }
+            } else if (originalOffer.discount_type === "Discount Amount") {
+              item.discount_amount -= offer.discount_amount;
+            }
+            this.calc_item_price(item);
+          }
+        }
+      });
+    },
+
+    ApplyOnTotal(offer) {
+      if (!offer.name) {
+        offer = this.posOffers.find((el) => el.name == offer.offer_name);
+      }
+      if (
+        (!this.discount_percentage_offer_name ||
+          this.discount_percentage_offer_name == offer.name) &&
+        offer.discount_percentage > 0 &&
+        offer.discount_percentage <= 100
+      ) {
+        this.discount_amount = this.flt(
+          (flt(this.Total) * flt(offer.discount_percentage)) / 100,
+          this.currency_precision
+        );
+        this.discount_percentage_offer_name = offer.name;
+      }
+    },
+
+    RemoveOnTotal(offer) {
+      if (
+        this.discount_percentage_offer_name &&
+        this.discount_percentage_offer_name == offer.offer_name
+      ) {
+        this.discount_amount = 0;
+        this.discount_percentage_offer_name = null;
+      }
+    },
+
+    addOfferToItems(offer) {
+      const offer_items = JSON.parse(offer.items);
+      offer_items.forEach((el) => {
+        this.items.forEach((exist_item) => {
+          if (exist_item.posa_row_id == el) {
+            const item_offers = JSON.parse(exist_item.posa_offers);
+            if (!item_offers.includes(offer.row_id)) {
+              item_offers.push(offer.row_id);
+              if (offer.offer === "Item Price") {
+                exist_item.posa_offer_applied = 1;
+              }
+            }
+            exist_item.posa_offers = JSON.stringify(item_offers);
+          }
+        });
+      });
+    },
+
+    deleteOfferFromItems(offer) {
+      const offer_items = JSON.parse(offer.items);
+      offer_items.forEach((el) => {
+        this.items.forEach((exist_item) => {
+          if (exist_item.posa_row_id == el) {
+            const item_offers = JSON.parse(exist_item.posa_offers);
+            const updated_item_offers = item_offers.filter(
+              (row_id) => row_id != offer.row_id
+            );
+            if (offer.offer === "Item Price") {
+              exist_item.posa_offer_applied = 0;
+            }
+            exist_item.posa_offers = JSON.stringify(updated_item_offers);
+          }
+        });
+      });
+    },
+
+    validate_due_date(item) {
+      const today = frappe.datetime.now_date();
+      const parse_today = Date.parse(today);
+      const new_date = Date.parse(item.posa_delivery_date);
+      if (new_date < parse_today) {
+        setTimeout(() => {
+          item.posa_delivery_date = today;
+        }, 0);
+      }
+    },
+    load_print_page(invoice_name) {
+      const print_format =
+        this.pos_profile.print_format_for_online ||
+        this.pos_profile.print_format;
+      const letter_head = this.pos_profile.letter_head || 0;
+      const url =
+        frappe.urllib.get_base_url() +
+        "/printview?doctype=Sales%20Invoice&name=" +
+        invoice_name +
+        "&trigger_print=1" +
+        "&format=" +
+        print_format +
+        "&no_letterhead=" +
+        letter_head;
+      const printWindow = window.open(url, "Print");
+      printWindow.addEventListener(
+        "load",
+        function () {
+          printWindow.print();
+          // printWindow.close();
+          // NOTE : uncomoent this to auto closing printing window
+        },
+        true
+      );
+    },
+
+    print_draft_invoice() {
+      if (!this.pos_profile.posa_allow_print_draft_invoices) {
+        evntBus.emit("show_mesage", {
+          text: __(`You are not allowed to print draft invoices`),
+          color: "error",
+        });
+        return;
+      }
+      let invoice_name = this.invoice_doc.name;
+      frappe.run_serially([
+        () => {
+          const invoice_doc = this.new_invoice();
+          invoice_name = invoice_doc.name ? invoice_doc.name : invoice_name;
+        },
+        () => {
+          this.load_print_page(invoice_name);
+        },
+      ]);
+    },
+    set_delivery_charges() {
+      const vm = this;
+      if (
+        !this.pos_profile ||
+        !this.customer ||
+        !this.pos_profile.posa_use_delivery_charges
+      ) {
+        this.delivery_charges = [];
+        this.delivery_charges_rate = 0;
+        this.selcted_delivery_charges = {};
+        return;
+      }
+      this.delivery_charges_rate = 0;
+      this.selcted_delivery_charges = {};
+      frappe.call({
+        method:
+          "posawesome.posawesome.api.posapp.get_applicable_delivery_charges",
+        args: {
+          company: this.pos_profile.company,
+          pos_profile: this.pos_profile.name,
+          customer: this.customer,
+        },
+        async: true,
+        callback: function (r) {
+          if (r.message) {
+            vm.delivery_charges = r.message;
+          }
+        },
+      });
+    },
+    deliveryChargesFilter(item, queryText, itemText) {
+      const textOne = item.name.toLowerCase();
+      const searchText = queryText.toLowerCase();
+      return textOne.indexOf(searchText) > -1;
+    },
+    update_delivery_charges($event) {
+      this.selcted_delivery_charges = $event.target.value;
+      if (this.selcted_delivery_charges) {
+        this.delivery_charges_rate = this.selcted_delivery_charges.rate;
+      } else {
+        this.delivery_charges_rate = 0;
+      }
+    },
+  },
+
+  mounted() {
+    evntBus.on("register_pos_profile", (data) => {
+      this.pos_profile = data.pos_profile;
+      this.customer = data.pos_profile.customer;
+      this.pos_opening_shift = data.pos_opening_shift;
+      this.stock_settings = data.stock_settings;
+      this.float_precision =
+        frappe.defaults.get_default("float_precision") || 2;
+      this.currency_precision =
+        frappe.defaults.get_default("currency_precision") || 2;
+      this.invoiceType = this.pos_profile.posa_default_sales_order
+        ? "Order"
+        : "Invoice";
+    });
+    evntBus.on("add_item", (item) => {
+      this.add_item(item);
+    });
+    evntBus.on("update_customer", (customer) => {
+      this.customer = customer;
+    });
+    evntBus.on("fetch_customer_details", () => {
+      this.fetch_customer_details();
+    });
+    evntBus.on("new_invoice", () => {
+      this.invoice_doc = "";
+      this.cancel_invoice();
+    });
+    evntBus.on("load_invoice", (data) => {
+      this.new_invoice(data);
+
+      if (this.invoice_doc.is_return) {
+        this.discount_amount = -data.discount_amount;
+        this.additional_discount_percentage =
+          -data.additional_discount_percentage;
+        this.return_doc = data;
+      } else {
+        evntBus.emit("set_pos_coupons", data.posa_coupons);
+      }
+    });
+    evntBus.on("load_order", (data) => {
+      this.new_order(data);
+      // evntBus.emit("set_pos_coupons", data.posa_coupons);
+    });
+    evntBus.on("set_offers", (data) => {
+      this.posOffers = data;
+    });
+    evntBus.on("update_invoice_offers", (data) => {
+      this.updateInvoiceOffers(data);
+    });
+    evntBus.on("update_invoice_coupons", (data) => {
+      this.posa_coupons = data;
+      this.handelOffers();
+    });
+    evntBus.on("set_all_items", (data) => {
+      this.allItems = data;
+      this.items.forEach((item) => {
+        this.update_item_detail(item);
+      });
+    });
+    evntBus.on("load_return_invoice", (data) => {
+      this.new_invoice(data.invoice_doc);
+      this.discount_amount = -data.return_doc.discount_amount;
+      this.additional_discount_percentage =
+        -data.return_doc.additional_discount_percentage;
+      this.return_doc = data.return_doc;
+    });
+    evntBus.on("set_new_line", (data) => {
+      this.new_line = data;
+    });
+  },
+  beforeDestroy() {
+    evntBus.$off("register_pos_profile");
+    evntBus.$off("add_item");
+    evntBus.$off("update_customer");
+    evntBus.$off("fetch_customer_details");
+    evntBus.$off("new_invoice");
+    evntBus.$off("set_offers");
+    evntBus.$off("update_invoice_offers");
+    evntBus.$off("update_invoice_coupons");
+    evntBus.$off("set_all_items");
+  },
+  created() {
+    document.addEventListener("keydown", this.shortOpenPayment.bind(this));
+    document.addEventListener("keydown", this.shortDeleteFirstItem.bind(this));
+    document.addEventListener("keydown", this.shortOpenFirstItem.bind(this));
+    document.addEventListener("keydown", this.shortSelectDiscount.bind(this));
+  },
+  destroyed() {
+    document.removeEventListener("keydown", this.shortOpenPayment);
+    document.removeEventListener("keydown", this.shortDeleteFirstItem);
+    document.removeEventListener("keydown", this.shortOpenFirstItem);
+    document.removeEventListener("keydown", this.shortSelectDiscount);
+  },
+  watch: {
+    customer() {
+      this.close_payments();
+      evntBus.emit("set_customer", this.customer);
+      this.fetch_customer_details();
+      this.set_delivery_charges();
+    },
+    customer_info() {
+      evntBus.emit("set_customer_info_to_edit", this.customer_info);
+    },
+    expanded(data_value) {
+      var me = this;
+      if(data_value.length == 2){
+        data_value.shift();
+      }
+      if (data_value.length > 0) {
+        $.each(this.items || [], function(i,v){
+          if(v.posa_row_id == data_value[0]){
+            me.update_item_detail(v);
+          }
+        });
+      }
+    },
+    discount_percentage_offer_name() {
+      evntBus.emit("update_discount_percentage_offer_name", {
+        value: this.discount_percentage_offer_name,
+      });
+    },
+    items: {
+      deep: true,
+      handler(items) {
+        this.handelOffers();
+        this.$forceUpdate();
+      },
+    },
+    invoiceType() {
+      evntBus.emit("update_invoice_type", this.invoiceType);
+    },
+    discount_amount() {
+      if (!this.discount_amount || this.discount_amount == 0) {
+        this.additional_discount_percentage = 0;
+      } else if (this.pos_profile.posa_use_percentage_discount) {
+        this.additional_discount_percentage =
+          (this.discount_amount / this.Total) * 100;
+      } else {
+        this.additional_discount_percentage = 0;
+      }
+    },
+  },
+};
+</script>
+
+<style scoped>
+.border_line_bottom {
+  border-bottom: 1px solid lightgray;
+}
+.disable-events {
+  pointer-events: none;
+}
+</style>
diff --git a/posawesome/public/js/posapp/components/pos/ItemsSelector.vue b/posawesome/public/js/posapp/components/pos/ItemsSelector.vue
new file mode 100644
index 0000000..4e8906c
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/ItemsSelector.vue
@@ -0,0 +1,681 @@
+<template>
+  <div>
+    <v-card
+      class="selection mx-auto grey lighten-5 mt-3"
+      style="max-height: 75vh; height: 75vh"
+    >
+      <v-progress-linear
+        :active="loading"
+        :indeterminate="loading"
+        absolute
+        top
+        color="info"
+      ></v-progress-linear>
+      <v-row class="items px-2 py-1">
+        <v-col class="pb-0 mb-2">
+          <v-text-field
+            dense
+            clearable
+            autofocus
+            outlined
+            color="primary"
+            :label="__('Search Items')"
+            hint="Search by item code, serial number, batch no or barcode"
+            background-color="white"
+            hide-details
+            v-model="debounce_search"
+            @keydown.esc="esc_event"
+            @keydown.enter="search_onchange"
+            ref="debounce_search"
+          ></v-text-field>
+        </v-col>
+        <v-col cols="3" class="pb-0 mb-2" v-if="pos_profile.posa_input_qty">
+          <v-text-field
+            dense
+            outlined
+            color="primary"
+            :label="__('QTY')"
+            background-color="white"
+            hide-details
+            v-model.number="qty"
+            type="number"
+            @keydown.enter="enter_event"
+            @keydown.esc="esc_event"
+          ></v-text-field>
+        </v-col>
+        <v-col cols="2" class="pb-0 mb-2" v-if="pos_profile.posa_new_line">
+          <v-checkbox
+            v-model="new_line"
+            color="accent"
+            value="true"
+            label="NLine"
+            dense
+            hide-details
+          ></v-checkbox>
+        </v-col>
+        <v-col cols="12" class="pt-0 mt-0">
+          <div fluid class="items" v-if="items_view == 'card'">
+            <v-row dense class="overflow-y-auto" style="max-height: 67vh">
+              <v-col
+                v-for="(item, idx) in filtred_items"
+                :key="idx"
+                xl="2"
+                lg="3"
+                md="6"
+                sm="6"
+                cols="6"
+                min-height="50"
+              >
+                <v-card hover="hover" @click="add_item(item)">
+                  <v-img
+                    :src="
+                      item.image ||
+                      '/assets/posawesome/js/posapp/components/pos/placeholder-image.png'
+                    "
+                    class="white--text align-end"
+                    gradient="to bottom, rgba(0,0,0,0), rgba(0,0,0,0.4)"
+                    height="100px"
+                  >
+                    <v-card-text
+                      v-text="item.item_name"
+                      class="text-caption px-1 pb-0"
+                    ></v-card-text>
+                  </v-img>
+                  <v-card-text class="text--primary pa-1">
+                    <div class="text-caption primary--text">
+                      {{ currencySymbol(item.currency) || "" }}
+                      {{ formtCurrency(item.rate) || 0 }}
+                    </div>
+                    <div class="text-caption golden--text">
+                      {{ item.stock_uom || "" }}
+                    </div>
+                  </v-card-text>
+                </v-card>
+              </v-col>
+            </v-row>
+          </div>
+          <div fluid class="items" v-if="items_view == 'list'">
+            <div class="my-0 py-0 overflow-y-auto" style="max-height: 65vh">
+                <v-data-table
+                  :headers="getItmesHeaders()"
+                  :items="filtred_items"
+                  item-key="item_code"
+                  class="elevation-1"
+                  :items-per-page="itemsPerPage"
+                  hide-default-footer
+                  @click:row="add_item_table"
+                >
+                  <template v-slot:item.rate="{ item }">
+                    <span class="primary--text"
+                      >{{ currencySymbol(item.currency) }}
+                      {{ formtCurrency(item.rate) }}</span
+                    >
+                  </template>
+                </v-data-table>
+            </div>
+          </div>
+        </v-col>
+      </v-row>
+    </v-card>
+    <v-card class="cards mb-0 mt-3 pa-2 grey lighten-5">
+      <v-row no-gutters align="center" justify="center">
+        <v-col cols="12">
+          <v-select
+            :items="items_group"
+            :label="__('Items Group')"
+            dense
+            outlined
+            hide-details
+            v-model="item_group"
+            v-on:change="search_onchange"
+          ></v-select>
+        </v-col>
+        <v-col cols="3" class="mt-1">
+          <v-btn-toggle
+            v-model="items_view"
+            color="primary"
+            group
+            dense
+            rounded
+          >
+            <v-btn small value="list">{{ __("List") }}</v-btn>
+            <v-btn small value="card">{{ __("Card") }}</v-btn>
+          </v-btn-toggle>
+        </v-col>
+        <v-col cols="4" class="mt-2">
+          <v-btn small block color="primary" text @click="show_coupons"
+            >{{ couponsCount }} {{ __("Coupons") }}</v-btn
+          >
+        </v-col>
+        <v-col cols="5" class="mt-2">
+          <v-btn small block color="primary" text @click="show_offers"
+            >{{ offersCount }} {{ __("Offers") }} : {{ appliedOffersCount }}
+            {{ __("Applied") }}</v-btn
+          >
+        </v-col>
+      </v-row>
+    </v-card>
+  </div>
+</template>
+
+<script>
+import { evntBus } from "../../bus";
+import format from "../../format";
+import _ from "lodash";
+export default {
+  mixins: [format],
+  data: () => ({
+    pos_profile: "",
+    flags: {},
+    items_view: "list",
+    item_group: "ALL",
+    loading: false,
+    items_group: ["ALL"],
+    items: [],
+    search: "",
+    first_search: "",
+    itemsPerPage: 1000,
+    offersCount: 0,
+    appliedOffersCount: 0,
+    couponsCount: 0,
+    appliedCouponsCount: 0,
+    customer_price_list: null,
+    customer: null,
+    new_line: false,
+    qty: 1,
+  }),
+
+  watch: {
+    filtred_items(new_value, old_value) {
+      if (!this.pos_profile.pose_use_limit_search) {
+        if (new_value.length != old_value.length) {
+          this.update_items_details(new_value);
+        }
+      }
+    },
+    customer() {
+      this.get_items();
+    },
+    new_line() {
+      evntBus.emit("set_new_line", this.new_line);
+    },
+  },
+
+  methods: {
+    show_offers() {
+      evntBus.emit("show_offers", "true");
+    },
+    show_coupons() {
+      evntBus.emit("show_coupons", "true");
+    },
+    get_items() {
+      if (!this.pos_profile) {
+        console.error("No POS Profile");
+        return;
+      }
+      const vm = this;
+      this.loading = true;
+      let search = this.get_search(this.first_search);
+      let gr = "";
+      let sr = "";
+      if (search) {
+        sr = search;
+      }
+      if (vm.item_group != "ALL") {
+        gr = vm.item_group.toLowerCase();
+      }
+      if (
+        vm.pos_profile.posa_local_storage &&
+        localStorage.items_storage &&
+        !vm.pos_profile.pose_use_limit_search
+      ) {
+        vm.items = JSON.parse(localStorage.getItem("items_storage"));
+        evntBus.emit("set_all_items", vm.items);
+        vm.loading = false;
+      }
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_items",
+        args: {
+          pos_profile: vm.pos_profile,
+          price_list: vm.customer_price_list,
+          item_group: gr,
+          search_value: sr,
+          customer: vm.customer,
+        },
+        callback: function (r) {
+          if (r.message) {
+            vm.items = r.message;
+            evntBus.emit("set_all_items", vm.items);
+            vm.loading = false;
+            console.info("Items Loaded");
+            if (
+              vm.pos_profile.posa_local_storage &&
+              !vm.pos_profile.pose_use_limit_search
+            ) {
+              localStorage.setItem("items_storage", "");
+              try {
+                localStorage.setItem(
+                  "items_storage",
+                  JSON.stringify(r.message)
+                );
+              } catch (e) {
+                console.error(e);
+              }
+            }
+            if (vm.pos_profile.pose_use_limit_search) {
+              vm.enter_event();
+            }
+          }
+        },
+      });
+    },
+    get_items_groups() {
+      if (!this.pos_profile) {
+        console.log("No POS Profile");
+        return;
+      }
+      if (this.pos_profile.item_groups.length > 0) {
+        this.pos_profile.item_groups.forEach((element) => {
+          if (element.item_group !== "All Item Groups") {
+            this.items_group.push(element.item_group);
+          }
+        });
+      } else {
+        const vm = this;
+        frappe.call({
+          method: "posawesome.posawesome.api.posapp.get_items_groups",
+          args: {},
+          callback: function (r) {
+            if (r.message) {
+              r.message.forEach((element) => {
+                vm.items_group.push(element.name);
+              });
+            }
+          },
+        });
+      }
+    },
+    getItmesHeaders() {
+      const items_headers = [
+        {
+          title: __("Name"),
+          align: "start",
+          sortable: true,
+          key: "item_name",
+        },
+        {
+          title: __("Code"),
+          align: "start",
+          sortable: true,
+          key: "item_code",
+        },
+        { title: __("Rate"), key: "rate", align: "start" },
+        { title: __("UOM"), key: "stock_uom", align: "start" },
+      ];
+      if (!this.pos_profile.posa_display_item_code) {
+        items_headers.splice(1, 1);
+      }
+
+      return items_headers;
+    },
+    add_item_table(event, item){
+      item = { ...item.item };
+      if (item.has_variants) {
+        evntBus.emit("open_variants_model", item, this.items);
+      } else {
+        if (!item.qty || item.qty === 1) {
+          item.qty = Math.abs(this.qty);
+        }
+        evntBus.emit("add_item", item);
+        this.qty = 1;
+      }
+    },
+    add_item(item) {
+      item = { ...item };
+      if (item.has_variants) {
+        evntBus.emit("open_variants_model", item, this.items);
+      } else {
+        if (!item.qty || item.qty === 1) {
+          item.qty = Math.abs(this.qty);
+        }
+        evntBus.emit("add_item", item);
+        this.qty = 1;
+      }
+    },
+    enter_event() {
+      let match = false;
+      if (!this.filtred_items.length || !this.first_search) {
+        return;
+      }
+      const qty = this.get_item_qty(this.first_search);
+      const new_item = { ...this.filtred_items[0] };
+      new_item.qty = flt(qty);
+      new_item.item_barcode.forEach((element) => {
+        if (this.search == element.barcode) {
+          new_item.uom = element.posa_uom;
+          match = true;
+        }
+      });
+      if (
+        !new_item.to_set_serial_no &&
+        new_item.has_serial_no &&
+        this.pos_profile.posa_search_serial_no
+      ) {
+        new_item.serial_no_data.forEach((element) => {
+          if (this.search && element.serial_no == this.search) {
+            new_item.to_set_serial_no = this.first_search;
+            match = true;
+          }
+        });
+      }
+      if (this.flags.serial_no) {
+        new_item.to_set_serial_no = this.flags.serial_no;
+      }
+      if (
+        !new_item.to_set_batch_no &&
+        new_item.has_batch_no &&
+        this.pos_profile.posa_search_batch_no
+      ) {
+        new_item.batch_no_data.forEach((element) => {
+          if (this.search && element.batch_no == this.search) {
+            new_item.to_set_batch_no = this.first_search;
+            new_item.batch_no = this.first_search;
+            match = true;
+          }
+        });
+      }
+      if (this.flags.batch_no) {
+        new_item.to_set_batch_no = this.flags.batch_no;
+      }
+      if (match) {
+        this.add_item(new_item);
+        this.search = null;
+        this.first_search = null;
+        this.debounce_search = null;
+        this.flags.serial_no = null;
+        this.flags.batch_no = null;
+        this.qty = 1;
+        this.$refs.debounce_search.focus();
+      }
+    },
+    search_onchange() {
+      const vm = this;
+      if (vm.pos_profile.pose_use_limit_search) {
+        vm.get_items();
+      } else {
+        vm.enter_event();
+      }
+    },
+    get_item_qty(first_search) {
+      let scal_qty = Math.abs(this.qty);
+      if (first_search.startsWith(this.pos_profile.posa_scale_barcode_start)) {
+        let pesokg1 = first_search.substr(7, 5);
+        let pesokg;
+        if (pesokg1.startsWith("0000")) {
+          pesokg = "0.00" + pesokg1.substr(4);
+        } else if (pesokg1.startsWith("000")) {
+          pesokg = "0.0" + pesokg1.substr(3);
+        } else if (pesokg1.startsWith("00")) {
+          pesokg = "0." + pesokg1.substr(2);
+        } else if (pesokg1.startsWith("0")) {
+          pesokg =
+            pesokg1.substr(1, 1) + "." + pesokg1.substr(2, pesokg1.length);
+        } else if (!pesokg1.startsWith("0")) {
+          pesokg =
+            pesokg1.substr(0, 2) + "." + pesokg1.substr(2, pesokg1.length);
+        }
+        scal_qty = pesokg;
+      }
+      return scal_qty;
+    },
+    get_search(first_search) {
+      let search_term = "";
+      if (
+        first_search &&
+        first_search.startsWith(this.pos_profile.posa_scale_barcode_start)
+      ) {
+        search_term = first_search.substr(0, 7);
+      } else {
+        search_term = first_search;
+      }
+      return search_term;
+    },
+    esc_event() {
+      this.search = null;
+      this.first_search = null;
+      this.qty = 1;
+      this.$refs.debounce_search.focus();
+    },
+    update_items_details(items) {
+      // set debugger
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_items_details",
+        args: {
+          pos_profile: vm.pos_profile,
+          items_data: items,
+        },
+        callback: function (r) {
+          if (r.message) {
+            items.forEach((item) => {
+              const updated_item = r.message.find(
+                (element) => element.item_code == item.item_code
+              );
+              item.actual_qty = updated_item.actual_qty;
+              item.serial_no_data = updated_item.serial_no_data;
+              item.batch_no_data = updated_item.batch_no_data;
+              item.item_uoms = updated_item.item_uoms;
+            });
+          }
+        },
+      });
+    },
+    update_cur_items_details() {
+      this.update_items_details(this.filtred_items);
+    },
+    scan_barcoud() {
+      const vm = this;
+      onScan.attachTo(document, {
+        suffixKeyCodes: [],
+        keyCodeMapper: function (oEvent) {
+          oEvent.stopImmediatePropagation();
+          return onScan.decodeKeyEvent(oEvent);
+        },
+        onScan: function (sCode) {
+          setTimeout(() => {
+            vm.trigger_onscan(sCode);
+          }, 300);
+        },
+      });
+    },
+    trigger_onscan(sCode) {
+      if (this.filtred_items.length == 0) {
+        evntBus.emit("show_mesage", {
+          text: `No Item has this barcode "${sCode}"`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+      } else {
+        this.enter_event();
+        this.debounce_search = null;
+        this.search = null;
+      }
+    },
+    generateWordCombinations(inputString) {
+      const words = inputString.split(" ");
+      const wordCount = words.length;
+      const combinations = [];
+
+      // Helper function to generate all permutations
+      function permute(arr, m = []) {
+        if (arr.length === 0) {
+          combinations.push(m.join(" "));
+        } else {
+          for (let i = 0; i < arr.length; i++) {
+            const current = arr.slice();
+            const next = current.splice(i, 1);
+            permute(current.slice(), m.concat(next));
+          }
+        }
+      }
+
+      permute(words);
+
+      return combinations;
+    },
+  },
+
+  computed: {
+    filtred_items() {
+      this.search = this.get_search(this.first_search);
+      if (!this.pos_profile.pose_use_limit_search) {
+        let filtred_list = [];
+        let filtred_group_list = [];
+        if (this.item_group != "ALL") {
+          filtred_group_list = this.items.filter((item) =>
+            item.item_group
+              .toLowerCase()
+              .includes(this.item_group.toLowerCase())
+          );
+        } else {
+          filtred_group_list = this.items;
+        }
+        if (!this.search || this.search.length < 3) {
+          if (
+            this.pos_profile.posa_show_template_items &&
+            this.pos_profile.posa_hide_variants_items
+          ) {
+            return (filtred_list = filtred_group_list
+              .filter((item) => !item.variant_of)
+              .slice(0, 50));
+          } else {
+            return (filtred_list = filtred_group_list.slice(0, 50));
+          }
+        } else if (this.search) {
+          filtred_list = filtred_group_list.filter((item) => {
+            let found = false;
+            for (let element of item.item_barcode) {
+              if (element.barcode == this.search) {
+                found = true;
+                break;
+              }
+            }
+            return found;
+          });
+          if (filtred_list.length == 0) {
+            filtred_list = filtred_group_list.filter((item) =>
+              item.item_code.toLowerCase().includes(this.search.toLowerCase())
+            );
+            if (filtred_list.length == 0) {
+              const search_combinations = this.generateWordCombinations(
+                this.search
+              );
+              filtred_list = filtred_group_list.filter((item) => {
+                let found = false;
+                for (let element of search_combinations) {
+                  element = element.toLowerCase().trim();
+                  let element_regex = new RegExp(
+                    `.*${element.split("").join(".*")}.*`
+                  );
+                  if (element_regex.test(item.item_name.toLowerCase())) {
+                    found = true;
+                    break;
+                  }
+                }
+                return found;
+              });
+            }
+            if (
+              filtred_list.length == 0 &&
+              this.pos_profile.posa_search_serial_no
+            ) {
+              filtred_list = filtred_group_list.filter((item) => {
+                let found = false;
+                for (let element of item.serial_no_data) {
+                  if (element.serial_no == this.search) {
+                    found = true;
+                    this.flags.serial_no = null;
+                    this.flags.serial_no = this.search;
+                    break;
+                  }
+                }
+                return found;
+              });
+            }
+            if (
+              filtred_list.length == 0 &&
+              this.pos_profile.posa_search_batch_no
+            ) {
+              filtred_list = filtred_group_list.filter((item) => {
+                let found = false;
+                for (let element of item.batch_no_data) {
+                  if (element.batch_no == this.search) {
+                    found = true;
+                    this.flags.batch_no = null;
+                    this.flags.batch_no = this.search;
+                    break;
+                  }
+                }
+                return found;
+              });
+            }
+          }
+        }
+        if (
+          this.pos_profile.posa_show_template_items &&
+          this.pos_profile.posa_hide_variants_items
+        ) {
+          return filtred_list.filter((item) => !item.variant_of).slice(0, 50);
+        } else {
+          return filtred_list.slice(0, 50);
+        }
+      } else {
+        return this.items.slice(0, 50);
+      }
+    },
+    debounce_search: {
+      get() {
+        return this.first_search;
+      },
+      set: _.debounce(function (newValue) {
+        this.first_search = newValue;
+      }, 200),
+    },
+  },
+
+  created: function () {
+    this.$nextTick(function () {});
+    evntBus.on("register_pos_profile", (data) => {
+      this.pos_profile = data.pos_profile;
+      this.get_items();
+      this.get_items_groups();
+      this.items_view = this.pos_profile.posa_default_card_view
+        ? "card"
+        : "list";
+    });
+    evntBus.on("update_cur_items_details", () => {
+      this.update_cur_items_details();
+    });
+    evntBus.on("update_offers_counters", (data) => {
+      this.offersCount = data.offersCount;
+      this.appliedOffersCount = data.appliedOffersCount;
+    });
+    evntBus.on("update_coupons_counters", (data) => {
+      this.couponsCount = data.couponsCount;
+      this.appliedCouponsCount = data.appliedCouponsCount;
+    });
+    evntBus.on("update_customer_price_list", (data) => {
+      this.customer_price_list = data;
+    });
+    evntBus.on("update_customer", (data) => {
+      this.customer = data;
+    });
+  },
+
+  mounted() {
+    this.scan_barcoud();
+  },
+};
+</script>
+
+<style scoped></style>
diff --git a/posawesome/public/js/posapp/components/pos/Mpesa-Payments.vue b/posawesome/public/js/posapp/components/pos/Mpesa-Payments.vue
new file mode 100644
index 0000000..d37050c
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Mpesa-Payments.vue
@@ -0,0 +1,182 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="dialog" max-width="800px" min-width="800px">
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{ __('Select Payment') }}</span>
+        </v-card-title>
+        <v-container>
+          <v-row class="mb-4">
+            <v-text-field
+              color="primary"
+              :label="__('Full Name')"
+              background-color="white"
+              hide-details
+              v-model="full_name"
+              dense
+              clearable
+              class="mx-4"
+            ></v-text-field>
+            <v-text-field
+              color="primary"
+              :label="__('Mobile No')"
+              background-color="white"
+              hide-details
+              v-model="mobile_no"
+              dense
+              clearable
+              class="mx-4"
+            ></v-text-field>
+            <v-btn text class="ml-2" color="primary" dark @click="search">{{
+              __('Search')
+            }}</v-btn>
+          </v-row>
+          <v-row>
+            <v-col cols="12" class="pa-1" v-if="dialog_data">
+              <template>
+                <v-data-table
+                  :headers="headers"
+                  :items="dialog_data"
+                  item-key="name"
+                  class="elevation-1"
+                  :single-select="singleSelect"
+                  show-select
+                  v-model="selected"
+                >
+                  <template v-slot:item.amount="{ item }">{{
+                    formtCurrency(item.amount)
+                  }}</template>
+                  <template v-slot:item.posting_date="{ item }">{{
+                    item.posting_date.slice(0, 16)
+                  }}</template>
+                </v-data-table>
+              </template>
+            </v-col>
+          </v-row>
+        </v-container>
+        <v-card-actions class="mt-4">
+          <v-spacer></v-spacer>
+          <v-btn color="error mx-2" dark @click="close_dialog">Close</v-btn>
+          <v-btn
+            v-if="selected.length"
+            color="success"
+            dark
+            @click="submit_dialog"
+            >{{ __('Submit') }}</v-btn
+          >
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+export default {
+  data: () => ({
+    dialog: false,
+    singleSelect: true,
+    selected: [],
+    dialog_data: '',
+    company: '',
+    customer: '',
+    mode_of_payment: '',
+    full_name: '',
+    mobile_no: '',
+    headers: [
+      {
+        text: __('Full Name'),
+        value: 'full_name',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        text: __('Mobile No'),
+        value: 'mobile_no',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        text: __('Amount'),
+        value: 'amount',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        text: __('Date'),
+        align: 'start',
+        sortable: true,
+        value: 'posting_date',
+      },
+    ],
+  }),
+  watch: {},
+  methods: {
+    close_dialog() {
+      this.dialog = false;
+    },
+    search_by_enter(e) {
+      if (e.keyCode === 13) {
+        this.search();
+      }
+    },
+    search() {
+      const vm = this;
+      frappe.call({
+        method: 'posawesome.posawesome.api.m_pesa.get_mpesa_draft_payments',
+        args: {
+          company: this.company,
+          mode_of_payment: this.mode_of_payment,
+          mobile_no: this.mobile_no,
+          full_name: this.full_name,
+        },
+        async: false,
+        callback: function (r) {
+          if (!r.exc) {
+            vm.dialog_data = r.message;
+          }
+        },
+      });
+    },
+    submit_dialog() {
+      const vm = this;
+      if (this.selected.length > 0) {
+        const selected_payment = this.selected[0].name;
+        frappe.call({
+          method: 'posawesome.posawesome.api.m_pesa.submit_mpesa_payment',
+          args: {
+            mpesa_payment: selected_payment,
+            customer: this.customer,
+          },
+          async: false,
+          callback: function (r) {
+            if (!r.exc) {
+              evntBus.emit('set_mpesa_payment', r.message);
+              vm.dialog = false;
+            }
+          },
+        });
+      }
+    },
+    formtCurrency(value) {
+      value = parseFloat(value);
+      return value.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
+    },
+  },
+  created: function () {
+    evntBus.on('open_mpesa_payments', (data) => {
+      this.dialog = true;
+      this.full_name = '';
+      this.mobile_no = '';
+      this.company = data.company;
+      this.customer = data.customer;
+      this.mode_of_payment = data.mode_of_payment;
+      this.dialog_data = '';
+      this.selected = [];
+    });
+  },
+  beforeDestroy() {
+    evntBus.$off('open_mpesa_payments');
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/NewAddress.vue b/posawesome/public/js/posapp/components/pos/NewAddress.vue
new file mode 100644
index 0000000..09aa0bd
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/NewAddress.vue
@@ -0,0 +1,124 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="addressDialog" max-width="600px">
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{
+            __('Add New Address')
+          }}</span>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container>
+            <v-row>
+              <v-col cols="12">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Address Name')"
+                  background-color="white"
+                  hide-details
+                  v-model="address.name"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="12">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Address Line 1')"
+                  background-color="white"
+                  hide-details
+                  v-model="address.address_line1"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="12">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Address Line 2')"
+                  background-color="white"
+                  hide-details
+                  v-model="address.address_line2"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  label="City"
+                  dense
+                  color="primary"
+                  background-color="white"
+                  hide-details
+                  v-model="address.city"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  label="State"
+                  dense
+                  background-color="white"
+                  hide-details
+                  v-model="address.state"
+                ></v-text-field>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">{{
+            __('Close')
+          }}</v-btn>
+          <v-btn color="success" dark @click="submit_dialog">{{
+            __('Submit')
+          }}</v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+export default {
+  data: () => ({
+    addressDialog: false,
+    address: {},
+    customer: '',
+  }),
+
+  methods: {
+    close_dialog() {
+      this.addressDialog = false;
+    },
+
+    submit_dialog() {
+      const vm = this;
+      this.address.customer = this.customer;
+      this.address.doctype = 'Customer';
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.make_address',
+        args: {
+          args: this.address,
+        },
+        callback: (r) => {
+          if (!r.exc) {
+            evntBus.emit('add_the_new_address', r.message);
+            evntBus.emit('show_mesage', {
+              text: 'Customer Address created successfully.',
+              color: 'success',
+            });
+            vm.addressDialog = false;
+            vm.customer = '';
+            vm.address = {};
+          }
+        },
+      });
+    },
+  },
+  created: function () {
+    evntBus.on('open_new_address', (data) => {
+      this.addressDialog = true;
+      this.customer = data;
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/OpeningDialog.vue b/posawesome/public/js/posapp/components/pos/OpeningDialog.vue
new file mode 100644
index 0000000..17bb796
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/OpeningDialog.vue
@@ -0,0 +1,210 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="isOpen" persistent max-width="600px">
+      <!-- <template v-slot:activator="{ on, attrs }">
+        <v-btn color="primary" dark v-bind="attrs" v-on="on">Open Dialog</v-btn>
+      </template>-->
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{
+            __('Create POS Opening Shift')
+          }}</span>
+        </v-card-title>
+        <v-card-text>
+          <v-container>
+            <v-row>
+              <v-col cols="12">
+                <v-autocomplete
+                  :items="companies"
+                  :label="frappe._('Company')"
+                  v-model="company"
+                  required
+                ></v-autocomplete>
+              </v-col>
+              <v-col cols="12">
+                <v-autocomplete
+                  :items="pos_profiles"
+                  :label="frappe._('POS Profile')"
+                  v-model="pos_profile"
+                  required
+                ></v-autocomplete>
+              </v-col>
+              <v-col cols="12">
+                  <v-data-table
+                    :headers="payments_methods_headers"
+                    :items="payments_methods"
+                    item-key="mode_of_payment"
+                    class="elevation-1"
+                    :items-per-page="itemsPerPage"
+                    hide-default-footer
+                  >
+                    <template v-slot:[`item.amount`]="{ item }">
+                      {{ currencySymbol(item.currency) }}
+                      <v-text-field
+                        v-model="item.amount"
+                        :rules="[max25chars]"
+                        :label="frappe._('Edit')"
+                        single-line
+                        counter
+                        type="number"
+                        @blur="item.editing = false"
+                      ></v-text-field>
+                    </template>
+                  </v-data-table>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="go_desk">Cancel</v-btn>
+          <v-btn
+            color="success"
+            :disabled="is_loading"
+            dark
+            @click="submit_dialog"
+            >Submit</v-btn
+          >
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { ref, onMounted, watch } from 'vue';
+import { evntBus } from '../../bus';
+import format from '../../format';
+
+export default {
+  mixins: [format],
+  props: ['dialog'],
+  setup(props) {
+    const isOpen = ref(props.dialog ? props.dialog : false);
+    const dialog_data = ref({});
+    const is_loading = ref(false);
+    const companies = ref([]);
+    const company = ref('');
+    const pos_profiles_data = ref([]);
+    const pos_profiles = ref([]);
+    const pos_profile = ref('');
+    const payments_method_data = ref([]);
+    const payments_methods = ref([]);
+    const payments_methods_headers = ref([
+      {
+        title: __('Mode of Payment'),
+        align: 'start',
+        sortable: false,
+        key: 'mode_of_payment',
+      },
+      {
+        title: __('Opening Amount'),
+        key: 'amount',
+        align: 'center',
+        sortable: false,
+      },
+    ]);
+    const itemsPerPage = ref(100);
+    const max25chars = (v) => v.length <= 12 || 'Input too long!'; // TODO : should validate as number
+
+    const close_opening_dialog = () => {
+      evntBus.emit('close_opening_dialog');
+    };
+
+    const get_opening_dialog_data = () => {
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.get_opening_dialog_data',
+        args: {},
+        callback: function (r) {
+          if (r.message) {
+            r.message.companies.forEach((element) => {
+              companies.value.push(element.name);
+            });
+            company.value = companies.value[0];
+            pos_profiles_data.value = r.message.pos_profiles_data;
+            payments_method_data.value = r.message.payments_method;
+          }
+        },
+      });
+    };
+
+    const submit_dialog = () => {
+      if (!payments_methods.value.length || !company.value || !pos_profile.value) {
+        return;
+      }
+      is_loading.value = true;
+      frappe
+        .call('posawesome.posawesome.api.posapp.create_opening_voucher', {
+          pos_profile: pos_profile.value,
+          company: company.value,
+          balance_details: payments_methods.value,
+        })
+        .then((r) => {
+          if (r.message) {
+            evntBus.emit('register_pos_data', r.message);
+            evntBus.emit('set_company', r.message.company);
+            close_opening_dialog();
+            is_loading.value = false;
+          }
+        });
+    };
+
+    const go_desk = () => {
+      frappe.set_route('/');
+      location.reload();
+    };
+
+    watch(company, (val) => {
+      pos_profiles.value = [];
+      pos_profiles_data.value.forEach((element) => {
+        if (element.company === val) {
+          pos_profiles.value.push(element.name);
+        }
+      });
+      pos_profile.value = pos_profiles.value.length ? pos_profiles.value[0] : '';
+    });
+
+    watch(pos_profile, (val) => {
+      payments_methods.value = [];
+      payments_method_data.value.forEach((element) => {
+        if (element.parent === val) {
+          payments_methods.value.push({
+            mode_of_payment: element.mode_of_payment,
+            amount: 0,
+            currency: element.currency,
+          });
+        }
+      });
+    });
+
+    onMounted(() => {
+      get_opening_dialog_data();
+    });
+
+    return {
+      isOpen,
+      dialog_data,
+      is_loading,
+      companies,
+      company,
+      pos_profiles_data,
+      pos_profiles,
+      pos_profile,
+      payments_method_data,
+      payments_methods,
+      payments_methods_headers,
+      itemsPerPage,
+      max25chars,
+      close_opening_dialog,
+      submit_dialog,
+      go_desk,
+    };
+  },
+};
+</script>
+
+<style scoped>
+.margen-top {
+  margin-top: 0px;
+}
+</style>
diff --git a/posawesome/public/js/posapp/components/pos/Payments.vue b/posawesome/public/js/posapp/components/pos/Payments.vue
new file mode 100644
index 0000000..7518069
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Payments.vue
@@ -0,0 +1,1472 @@
+<template>
+  <div>
+    <v-card
+      class="selection mx-auto grey lighten-5 pa-1"
+      style="max-height: 76vh; height: 76vh"
+    >
+      <v-progress-linear
+        :active="loading"
+        :indeterminate="loading"
+        absolute
+        top
+        color="info"
+      ></v-progress-linear>
+      <div class="overflow-y-auto px-2 pt-2" style="max-height: 75vh">
+        <v-row v-if="invoice_doc" class="px-1 py-0">
+          <v-col cols="7">
+            <v-text-field
+              variant="outlined"
+              color="primary"
+              :label="__('Paid Amount')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(total_payments)"
+              readonly
+              :prefix="currencySymbol(invoice_doc.currency)"
+              dense
+            ></v-text-field>
+          </v-col>
+          <v-col cols="5">
+            <v-text-field
+              variant="outlined"
+              color="primary"
+              :label="__(diff_lable)"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(diff_payment)"
+              readonly
+              :prefix="currencySymbol(invoice_doc.currency)"
+              dense
+            ></v-text-field>
+          </v-col>
+
+          <v-col cols="7" v-if="diff_payment < 0 && !invoice_doc.is_return">
+            <v-text-field
+              variant="outlined"
+              color="primary"
+              :label="__('Paid Change')"
+              background-color="white"
+              v-model="paid_change"
+              @input="set_paid_change()"
+              :prefix="currencySymbol(invoice_doc.currency)"
+              :rules="paid_change_rules"
+              dense
+              readonly
+              type="number"
+            ></v-text-field>
+          </v-col>
+
+          <v-col cols="5" v-if="diff_payment < 0 && !invoice_doc.is_return">
+            <v-text-field
+              variant="outlined"
+              color="primary"
+              :label="__('Credit Change')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(credit_change)"
+              readonly
+              :prefix="currencySymbol(invoice_doc.currency)"
+              dense
+            ></v-text-field>
+          </v-col>
+        </v-row>
+        <v-divider></v-divider>
+
+        <div v-if="is_cashback">
+          <v-row
+            class="pyments px-1 py-0"
+            v-for="payment in invoice_doc.payments"
+            :key="payment.name"
+          >
+            <v-col cols="6" v-if="!is_mpesa_c2b_payment(payment)">
+              <v-text-field
+                dense
+                variant="outlined"
+                color="primary"
+                :label="__(payment.mode_of_payment)"
+                background-color="white"
+                hide-details
+                :model-value="formtCurrency(payment.amount)"
+                @change="
+                  setFormatedCurrency(payment, 'amount', null, true, $event)
+                "
+                :rules="[isNumber]"
+                :prefix="currencySymbol(invoice_doc.currency)"
+                @focus="set_rest_amount(payment.idx)"
+                :readonly="invoice_doc.is_return ? true : false"
+              ></v-text-field>
+            </v-col>
+            <v-col
+              v-if="!is_mpesa_c2b_payment(payment)"
+              :cols="
+                6
+                  ? (payment.type != 'Phone' ||
+                      payment.amount == 0 ||
+                      !request_payment_field) &&
+                    !is_mpesa_c2b_payment(payment)
+                  : 3
+              "
+            >
+              <v-btn
+                block
+                class=""
+                color="primary"
+                dark
+                @click="set_full_amount(payment.idx)"
+                >{{ payment.mode_of_payment }}</v-btn
+              >
+            </v-col>
+            <v-col v-if="is_mpesa_c2b_payment(payment)" :cols="12" class="pl-3">
+              <v-btn
+                block
+                class=""
+                color="success"
+                dark
+                @click="mpesa_c2b_dialg(payment)"
+              >
+                {{ __(`Get Payments ${payment.mode_of_payment}`) }}
+              </v-btn>
+            </v-col>
+            <v-col
+              v-if="
+                payment.type == 'Phone' &&
+                payment.amount > 0 &&
+                request_payment_field
+              "
+              :cols="3"
+              class="pl-1"
+            >
+              <v-btn
+                block
+                class=""
+                color="success"
+                dark
+                :disabled="payment.amount == 0"
+                @click="
+                  (phone_dialog = true),
+                    (payment.amount = flt(payment.amount, 0))
+                "
+              >
+                {{ __("Request") }}
+              </v-btn>
+            </v-col>
+          </v-row>
+        </div>
+
+        <v-row
+          class="pyments px-1 py-0"
+          v-if="
+            invoice_doc &&
+            available_pioints_amount > 0 &&
+            !invoice_doc.is_return
+          "
+        >
+          <v-col cols="7">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Redeem Loyalty Points')"
+              background-color="white"
+              hide-details
+              v-model="loyalty_amount"
+              type="number"
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="5">
+            <v-text-field
+              dense
+              outlined
+              color="primary"
+              :label="__('You can redeem upto')"
+              background-color="white"
+              hide-details
+              :model-value="formtFloat(available_pioints_amount)"
+              :prefix="currencySymbol(invoice_doc.currency)"
+              disabled
+            ></v-text-field>
+          </v-col>
+        </v-row>
+
+        <v-row
+          class="pyments px-1 py-0"
+          v-if="
+            invoice_doc &&
+            available_customer_credit > 0 &&
+            !invoice_doc.is_return &&
+            redeem_customer_credit
+          "
+        >
+          <v-col cols="7">
+            <v-text-field
+              dense
+              variant="outlined"
+              disabled
+              color="primary"
+              :label="__('Redeemed Customer Credit')"
+              background-color="white"
+              hide-details
+              v-model="redeemed_customer_credit"
+              type="number"
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="5">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('You can redeem credit upto')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(available_customer_credit)"
+              :prefix="currencySymbol(invoice_doc.currency)"
+              disabled
+            ></v-text-field>
+          </v-col>
+        </v-row>
+        <v-divider></v-divider>
+
+        <v-row class="px-1 py-0">
+          <v-col cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Net Total')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.net_total)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Tax and Charges')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.total_taxes_and_charges)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Total Amount')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.total)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Discount Amount')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.discount_amount)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Grand Total')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.grand_total)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col v-if="invoice_doc.rounded_total" cols="6">
+            <v-text-field
+              dense
+              variant="outlined"
+              color="primary"
+              :label="__('Rounded Total')"
+              background-color="white"
+              hide-details
+              :model-value="formtCurrency(invoice_doc.rounded_total)"
+              disabled
+              :prefix="currencySymbol(invoice_doc.currency)"
+            ></v-text-field>
+          </v-col>
+          <v-col
+            cols="6"
+            v-if="pos_profile.posa_allow_sales_order && invoiceType == 'Order'"
+          >
+            <v-menu
+              ref="order_delivery_date"
+              v-model="order_delivery_date"
+              :close-on-content-click="false"
+              transition="scale-transition"
+              dense
+            >
+              <template v-slot:activator="{ on, attrs }">
+                <v-text-field
+                  v-model="invoice_doc.posa_delivery_date"
+                  :label="__('Delivery Date')"
+                  readonly
+                  variant="outlined"
+                  dense
+                  background-color="white"
+                  clearable
+                  color="primary"
+                  hide-details
+                  v-bind="attrs"
+                  v-on="on"
+                ></v-text-field>
+              </template>
+              <v-date-picker
+                v-model="invoice_doc.posa_delivery_date"
+                no-title
+                scrollable
+                color="primary"
+                :min="frappe.datetime.now_date()"
+                @input="order_delivery_date = false"
+              >
+              </v-date-picker>
+            </v-menu>
+          </v-col>
+          <v-col cols="12" v-if="invoice_doc.posa_delivery_date">
+            <v-autocomplete
+              dense
+              clearable
+              auto-select-first
+              variant="outlined"
+              color="primary"
+              :label="__('Address')"
+              v-model="invoice_doc.shipping_address_name"
+              :items="addresses"
+              item-title="address_title"
+              item-value="name"
+              background-color="white"
+              no-data-text="Address not found"
+              hide-details
+              :filter="addressFilter"
+              append-icon="mdi-plus"
+              @click:append="new_address"
+            >
+              <template v-slot:item="{ props, item }">
+                  <v-list-item
+                    v-bind="props"
+                    >
+                    <v-list-item-title
+                      class="primary--text subtitle-1"
+                      v-html="item.address_title"
+                    ></v-list-item-title>
+                    <v-list-item-title
+                      v-html="item.address_line1"
+                    ></v-list-item-title>
+                    <v-list-item-subtitle
+                      v-if="item.custoaddress_line2mer_name"
+                      v-html="item.address_line2"
+                    ></v-list-item-subtitle>
+                    <v-list-item-subtitle
+                      v-if="item.city"
+                      v-html="item.city"
+                    ></v-list-item-subtitle>
+                    <v-list-item-subtitle
+                      v-if="item.state"
+                      v-html="item.state"
+                    ></v-list-item-subtitle>
+                    <v-list-item-subtitle
+                      v-if="item.country"
+                      v-html="item.mobile_no"
+                    ></v-list-item-subtitle>
+                    <v-list-item-subtitle
+                      v-if="item.address_type"
+                      v-html="item.address_type"
+                    ></v-list-item-subtitle>
+                  </v-list-item>
+              </template>
+            </v-autocomplete>
+          </v-col>
+          <v-col cols="12" v-if="pos_profile.posa_display_additional_notes">
+            <v-textarea
+              class="pa-0"
+              variant="outlined"
+              dense
+              background-color="white"
+              clearable
+              color="primary"
+              auto-grow
+              rows="2"
+              :label="__('Additional Notes')"
+              v-model="invoice_doc.posa_notes"
+              :model-value="invoice_doc.posa_notes"
+            ></v-textarea>
+          </v-col>
+        </v-row>
+
+        <div v-if="pos_profile.posa_allow_customer_purchase_order">
+          <v-divider></v-divider>
+          <v-row class="px-1 py-0" justify="center" align="start">
+            <v-col cols="6">
+              <v-text-field
+                v-model="invoice_doc.po_no"
+                :label="__('Purchase Order')"
+                variant="outlined"
+                dense
+                background-color="white"
+                clearable
+                color="primary"
+                hide-details
+              ></v-text-field>
+            </v-col>
+            <v-col cols="6">
+              <v-menu
+                ref="po_date_menu"
+                v-model="po_date_menu"
+                :close-on-content-click="false"
+                transition="scale-transition"
+              >
+                <template v-slot:activator="{ on, attrs }">
+                  <v-text-field
+                    v-model="invoice_doc.po_date"
+                    :label="__('Purchase Order Date')"
+                    readonly
+                    variant="outlined"
+                    dense
+                    hide-details
+                    v-bind="attrs"
+                    v-on="on"
+                    color="primary"
+                  ></v-text-field>
+                </template>
+                <v-date-picker
+                  v-model="invoice_doc.po_date"
+                  no-title
+                  scrollable
+                  color="primary"
+                  @input="po_date_menu = false"
+                >
+                </v-date-picker>
+              </v-menu>
+            </v-col>
+          </v-row>
+        </div>
+        <v-divider></v-divider>
+        <v-row class="px-1 py-0" align="start" no-gutters>
+          <v-col
+            cols="6"
+            v-if="
+              pos_profile.posa_allow_write_off_change &&
+              diff_payment > 0 &&
+              !invoice_doc.is_return
+            "
+          >
+            <v-switch
+              class="my-0 py-0"
+              v-model="is_write_off_change"
+              flat
+              :label="__('Write Off Difference Amount')"
+            ></v-switch>
+          </v-col>
+          <v-col
+            cols="6"
+            v-if="pos_profile.posa_allow_credit_sale && !invoice_doc.is_return"
+          >
+            <v-switch
+              v-model="is_credit_sale"
+              variant="flat"
+              :label="__('Is Credit Sale')"
+              class="my-0 py-0"
+            ></v-switch>
+          </v-col>
+          <v-col
+            cols="6"
+            v-if="invoice_doc.is_return && pos_profile.use_cashback"
+          >
+            <v-switch
+              v-model="is_cashback"
+              flat
+              :label="__('Is Cashback')"
+              class="my-0 py-0"
+            ></v-switch>
+          </v-col>
+          <v-col cols="6" v-if="is_credit_sale">
+            <v-menu ref="date_menu" v-model="date_menu" :close-on-content-click="false" transition="scale-transition">
+              <template v-slot:activator="{ props: { on, attrs } }">
+                <v-text-field
+                  v-model="invoice_doc.due_date"
+                  :label="__('Due Date')"
+                  readonly
+                  variant="outlined"
+                  density="compact"
+                  hide-details
+                  v-bind="attrs"
+                  v-on="on"
+                  color="primary"
+                ></v-text-field>
+              </template>
+              <v-date-picker
+                v-model="invoice_doc.due_date"
+                :no-title="true"
+                scrollable
+                color="primary"
+                :min="frappe.datetime.now_date()"
+                @update:model-value="date_menu = false"
+              ></v-date-picker>
+            </v-menu>
+          </v-col>
+          <v-col
+            cols="6"
+            v-if="!invoice_doc.is_return && pos_profile.use_customer_credit"
+          >
+            <v-switch
+              v-model="redeem_customer_credit"
+              flat
+              :label="__('Use Customer Credit')"
+              class="my-0 py-0"
+              @change="get_available_credit($event.target.value)"
+            ></v-switch>
+          </v-col>
+        </v-row>
+        <div
+          v-if="
+            invoice_doc &&
+            available_customer_credit > 0 &&
+            !invoice_doc.is_return &&
+            redeem_customer_credit
+          "
+        >
+          <v-row v-for="(row, idx) in customer_credit_dict" :key="idx">
+            <v-col cols="4">
+              <div class="pa-2 py-3">{{ row.credit_origin }}</div>
+            </v-col>
+            <v-col cols="4">
+              <v-text-field
+                dense
+                variant="outlined"
+                color="primary"
+                :label="__('Available Credit')"
+                background-color="white"
+                hide-details
+                :model-value="formtCurrency(row.total_credit)"
+                disabled
+                :prefix="currencySymbol(invoice_doc.currency)"
+              ></v-text-field>
+            </v-col>
+            <v-col cols="4">
+              <v-text-field
+                dense
+                variant="outlined"
+                color="primary"
+                :label="__('Redeem Credit')"
+                background-color="white"
+                hide-details
+                type="number"
+                v-model="row.credit_to_redeem"
+                :prefix="currencySymbol(invoice_doc.currency)"
+              ></v-text-field>
+            </v-col>
+          </v-row>
+        </div>
+        <v-divider></v-divider>
+        <v-row class="pb-0 mb-2" align="start">
+          <v-col cols="12">
+            <v-autocomplete
+              dense
+              clearable
+              auto-select-first
+              variant="outlined"
+              color="primary"
+              :label="__('Sales Person')"
+              v-model="sales_person"
+              :items="sales_persons"
+              item-title="sales_person_name"
+              item-value="name"
+              background-color="white"
+              :no-data-text="__('Sales Person not found')"
+              hide-details
+              :filter="salesPersonFilter"
+              :disabled="readonly"
+            >
+              <template v-slot:item="{ props, item }">
+                  <v-list-item
+                    v-bind="props"
+                  >
+                    <v-list-item-title
+                      class="primary--text subtitle-1"
+                      v-html="item.sales_person_name"
+                    ></v-list-item-title>
+                    <v-list-item-subtitle
+                      v-if="item.sales_person_name != item.name"
+                      v-html="`ID: ${item.name}`"
+                    ></v-list-item-subtitle>
+                  </v-list-item>
+              </template>
+            </v-autocomplete>
+          </v-col>
+        </v-row>
+      </div>
+    </v-card>
+
+    <v-card flat class="cards mb-0 mt-3 py-0">
+      <v-row align="start" no-gutters>
+        <v-col cols="6">
+          <v-btn
+            block
+            large
+            color="primary"
+            dark
+            @click="submit"
+            :disabled="vaildatPayment"
+            >{{ __("Submit") }}</v-btn
+          >
+        </v-col>
+        <v-col cols="6" class="pl-1">
+          <v-btn
+            block
+            large
+            color="success"
+            dark
+            @click="submit(undefined, false, true)"
+            :disabled="vaildatPayment"
+            >{{ __("Submit & Print") }}</v-btn
+          >
+        </v-col>
+        <v-col cols="12">
+          <v-btn
+            block
+            class="mt-2 pa-1"
+            large
+            color="error"
+            dark
+            @click="back_to_invoice"
+            >{{ __("Cancel Payment") }}</v-btn
+          >
+        </v-col>
+      </v-row>
+    </v-card>
+    <div>
+      <v-dialog v-model="phone_dialog" max-width="400px">
+        <v-card>
+          <v-card-title>
+            <span class="headline primary--text">{{
+              __("Confirm Mobile Number")
+            }}</span>
+          </v-card-title>
+          <v-card-text class="pa-0">
+            <v-container>
+              <v-text-field
+                dense
+                variant="outlined"
+                color="primary"
+                :label="__('Mobile Number')"
+                background-color="white"
+                hide-details
+                v-model="invoice_doc.contact_mobile"
+                type="number"
+              ></v-text-field>
+            </v-container>
+          </v-card-text>
+          <v-card-actions>
+            <v-spacer></v-spacer>
+            <v-btn color="error" dark @click="phone_dialog = false">{{
+              __("Close")
+            }}</v-btn>
+            <v-btn color="primary" dark @click="request_payment">{{
+              __("Request")
+            }}</v-btn>
+          </v-card-actions>
+        </v-card>
+      </v-dialog>
+    </div>
+  </div>
+</template>
+
+<script>
+import { evntBus } from "../../bus";
+import format from "../../format";
+export default {
+  mixins: [format],
+  data: () => ({
+    loading: false,
+    pos_profile: "",
+    invoice_doc: "",
+    loyalty_amount: 0,
+    is_credit_sale: 0,
+    is_write_off_change: 0,
+    date_menu: false,
+    po_date_menu: false,
+    addresses: [],
+    sales_persons: [],
+    sales_person: "",
+    paid_change: 0,
+    order_delivery_date: false,
+    paid_change_rules: [],
+    is_return: false,
+    is_cashback: true,
+    redeem_customer_credit: false,
+    customer_credit_dict: [],
+    phone_dialog: false,
+    invoiceType: "Invoice",
+    pos_settings: "",
+    customer_info: "",
+    mpesa_modes: [],
+    readonly: false,
+  }),
+
+  methods: {
+    back_to_invoice() {
+      evntBus.emit("show_payment", "false");
+      evntBus.emit("set_customer_readonly", false);
+    },
+    submit(event, payment_received = false, print = false) {
+      if (!this.invoice_doc.is_return && this.total_payments < 0) {
+        evntBus.emit("show_mesage", {
+          text: `Payments not correct`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+      // validate phone payment
+      let phone_payment_is_valid = true;
+      if (!payment_received) {
+        this.invoice_doc.payments.forEach((payment) => {
+          if (
+            payment.type == "Phone" &&
+            ![0, "0", "", null, undefined].includes(payment.amount)
+          ) {
+            phone_payment_is_valid = false;
+          }
+        });
+        if (!phone_payment_is_valid) {
+          evntBus.emit("show_mesage", {
+            text: __(
+              "Please request phone payment or use other payment method"
+            ),
+            color: "error",
+          });
+          frappe.utils.play_sound("error");
+          console.error("phone payment not requested");
+          return;
+        }
+      }
+
+      if (
+        !this.pos_profile.posa_allow_partial_payment &&
+        this.total_payments <
+          (this.invoice_doc.rounded_total || this.invoice_doc.grand_total)
+      ) {
+        evntBus.emit("show_mesage", {
+          text: `The amount paid is not complete`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      if (
+        this.pos_profile.posa_allow_partial_payment &&
+        !this.pos_profile.posa_allow_credit_sale &&
+        this.total_payments == 0
+      ) {
+        evntBus.emit("show_mesage", {
+          text: `Please enter the amount paid`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      if (!this.paid_change) this.paid_change = 0;
+
+      if (this.paid_change > -this.diff_payment) {
+        evntBus.emit("show_mesage", {
+          text: `Paid change can not be greater than total change!`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      let total_change = this.flt(
+        this.flt(this.paid_change) + this.flt(-this.credit_change)
+      );
+
+      if (this.is_cashback && total_change != -this.diff_payment) {
+        evntBus.emit("show_mesage", {
+          text: `Error in change calculations!`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      let credit_calc_check = this.customer_credit_dict.filter((row) => {
+        if (flt(row.credit_to_redeem))
+          return flt(row.credit_to_redeem) > flt(row.total_credit);
+        else return false;
+      });
+
+      if (credit_calc_check.length > 0) {
+        evntBus.emit("show_mesage", {
+          text: `redeamed credit can not greater than its total.`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      if (
+        !this.invoice_doc.is_return &&
+        this.redeemed_customer_credit >
+          (this.invoice_doc.rounded_total || this.invoice_doc.grand_total)
+      ) {
+        evntBus.emit("show_mesage", {
+          text: `can not redeam customer credit more than invoice total`,
+          color: "error",
+        });
+        frappe.utils.play_sound("error");
+        return;
+      }
+
+      this.submit_invoice(print);
+      this.customer_credit_dict = [];
+      this.redeem_customer_credit = false;
+      this.is_cashback = true;
+      this.sales_person = "";
+
+      evntBus.emit("new_invoice", "false");
+      this.back_to_invoice();
+    },
+    submit_invoice(print) {
+      let totalPayedAmount = 0;
+      this.invoice_doc.payments.forEach((payment) => {
+        payment.amount = flt(payment.amount);
+        totalPayedAmount += payment.amount;
+      });
+      if (this.invoice_doc.is_return && totalPayedAmount == 0) {
+        this.invoice_doc.is_pos = 0;
+      }
+      if (this.customer_credit_dict.length) {
+        this.customer_credit_dict.forEach((row) => {
+          row.credit_to_redeem = flt(row.credit_to_redeem);
+        });
+      }
+      let data = {};
+      data["total_change"] = !this.invoice_doc.is_return
+        ? -this.diff_payment
+        : 0;
+      data["paid_change"] = !this.invoice_doc.is_return ? this.paid_change : 0;
+      data["credit_change"] = -this.credit_change;
+      data["redeemed_customer_credit"] = this.redeemed_customer_credit;
+      data["customer_credit_dict"] = this.customer_credit_dict;
+      data["is_cashback"] = this.is_cashback;
+
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.submit_invoice",
+        args: {
+          data: data,
+          invoice: this.invoice_doc,
+        },
+        async: true,
+        callback: function (r) {
+          if (r.message) {
+            if (print) {
+              vm.load_print_page();
+            }
+            evntBus.emit("set_last_invoice", vm.invoice_doc.name);
+            evntBus.emit("show_mesage", {
+              text: `Invoice ${r.message.name} is Submited`,
+              color: "success",
+            });
+            frappe.utils.play_sound("submit");
+            this.addresses = [];
+          }
+        },
+      });
+    },
+    set_full_amount(idx) {
+      this.invoice_doc.payments.forEach((payment) => {
+        payment.amount =
+          payment.idx == idx
+            ? this.invoice_doc.rounded_total || this.invoice_doc.grand_total
+            : 0;
+      });
+    },
+    set_rest_amount(idx) {
+      this.invoice_doc.payments.forEach((payment) => {
+        if (
+          payment.idx == idx &&
+          payment.amount == 0 &&
+          this.diff_payment > 0
+        ) {
+          payment.amount = this.diff_payment;
+        }
+      });
+    },
+    clear_all_amounts() {
+      this.invoice_doc.payments.forEach((payment) => {
+        payment.amount = 0;
+      });
+    },
+    load_print_page() {
+      const print_format =
+        this.pos_profile.print_format_for_online ||
+        this.pos_profile.print_format;
+      const letter_head = this.pos_profile.letter_head || 0;
+      const url =
+        frappe.urllib.get_base_url() +
+        "/printview?doctype=Sales%20Invoice&name=" +
+        this.invoice_doc.name +
+        "&trigger_print=1" +
+        "&format=" +
+        print_format +
+        "&no_letterhead=" +
+        letter_head;
+      const printWindow = window.open(url, "Print");
+      printWindow.addEventListener(
+        "load",
+        function () {
+          printWindow.print();
+          // printWindow.close();
+          // NOTE : uncomoent this to auto closing printing window
+        },
+        true
+      );
+    },
+    validate_due_date() {
+      const today = frappe.datetime.now_date();
+      const parse_today = Date.parse(today);
+      const new_date = Date.parse(this.invoice_doc.due_date);
+      if (new_date < parse_today) {
+        setTimeout(() => {
+          this.invoice_doc.due_date = today;
+        }, 0);
+      }
+    },
+    shortPay(e) {
+      if (e.key === "x" && (e.ctrlKey || e.metaKey)) {
+        e.preventDefault();
+        this.submit();
+      }
+    },
+    set_paid_change() {
+      if (!this.paid_change) this.paid_change = 0;
+
+      this.paid_change_rules = [];
+      let change = -this.diff_payment;
+      if (this.paid_change > change) {
+        this.paid_change_rules = [
+          "Paid change can not be greater than total change!",
+        ];
+        this.credit_change = 0;
+      }
+    },
+    get_available_credit(e) {
+      this.clear_all_amounts();
+      if (e) {
+        frappe
+          .call("posawesome.posawesome.api.posapp.get_available_credit", {
+            customer: this.invoice_doc.customer,
+            company: this.pos_profile.company,
+          })
+          .then((r) => {
+            const data = r.message;
+            if (data.length) {
+              const amount =
+                this.invoice_doc.rounded_total || this.invoice_doc.grand_total;
+              let remainAmount = amount;
+
+              data.forEach((row) => {
+                if (remainAmount > 0) {
+                  if (remainAmount >= row.total_credit) {
+                    row.credit_to_redeem = row.total_credit;
+                    remainAmount = remainAmount - row.total_credit;
+                  } else {
+                    row.credit_to_redeem = remainAmount;
+                    remainAmount = 0;
+                  }
+                } else {
+                  row.credit_to_redeem = 0;
+                }
+              });
+
+              this.customer_credit_dict = data;
+            } else {
+              this.customer_credit_dict = [];
+            }
+          });
+      } else {
+        this.customer_credit_dict = [];
+      }
+    },
+    get_addresses() {
+      const vm = this;
+      if (!vm.invoice_doc) {
+        return;
+      }
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_customer_addresses",
+        args: { customer: vm.invoice_doc.customer },
+        async: true,
+        callback: function (r) {
+          if (!r.exc) {
+            vm.addresses = r.message;
+          } else {
+            vm.addresses = [];
+          }
+        },
+      });
+    },
+    addressFilter(item, queryText, itemText) {
+      const textOne = item.address_title
+        ? item.address_title.toLowerCase()
+        : "";
+      const textTwo = item.address_line1
+        ? item.address_line1.toLowerCase()
+        : "";
+      const textThree = item.address_line2
+        ? item.address_line2.toLowerCase()
+        : "";
+      const textFour = item.city ? item.city.toLowerCase() : "";
+      const textFifth = item.name.toLowerCase();
+      const searchText = queryText.toLowerCase();
+      return (
+        textOne.indexOf(searchText) > -1 ||
+        textTwo.indexOf(searchText) > -1 ||
+        textThree.indexOf(searchText) > -1 ||
+        textFour.indexOf(searchText) > -1 ||
+        textFifth.indexOf(searchText) > -1
+      );
+    },
+    new_address() {
+      evntBus.emit("open_new_address", this.invoice_doc.customer);
+    },
+    get_sales_person_names() {
+      const vm = this;
+      if (
+        vm.pos_profile.posa_local_storage &&
+        localStorage.sales_persons_storage
+      ) {
+        vm.sales_persons = JSON.parse(
+          localStorage.getItem("sales_persons_storage")
+        );
+      }
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.get_sales_person_names",
+        callback: function (r) {
+          if (r.message) {
+            vm.sales_persons = r.message;
+            if (vm.pos_profile.posa_local_storage) {
+              localStorage.setItem("sales_persons_storage", "");
+              localStorage.setItem(
+                "sales_persons_storage",
+                JSON.stringify(r.message)
+              );
+            }
+          }
+        },
+      });
+    },
+    salesPersonFilter(item, queryText, itemText) {
+      const textOne = item.sales_person_name
+        ? item.sales_person_name.toLowerCase()
+        : "";
+      const textTwo = item.name.toLowerCase();
+      const searchText = queryText.toLowerCase();
+
+      return (
+        textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1
+      );
+    },
+    request_payment() {
+      this.phone_dialog = false;
+      const vm = this;
+      if (!this.invoice_doc.contact_mobile) {
+        evntBus.emit("show_mesage", {
+          text: __(`Pleas Set Customer Mobile Number`),
+          color: "error",
+        });
+        evntBus.emit("open_edit_customer");
+        this.back_to_invoice();
+        return;
+      }
+      evntBus.emit("freeze", {
+        title: __(`Waiting for payment... `),
+      });
+      this.invoice_doc.payments.forEach((payment) => {
+        payment.amount = flt(payment.amount);
+      });
+      let formData = { ...this.invoice_doc };
+      formData["total_change"] = -this.diff_payment;
+      formData["paid_change"] = this.paid_change;
+      formData["credit_change"] = -this.credit_change;
+      formData["redeemed_customer_credit"] = this.redeemed_customer_credit;
+      formData["customer_credit_dict"] = this.customer_credit_dict;
+      formData["is_cashback"] = this.is_cashback;
+
+      frappe
+        .call({
+          method: "posawesome.posawesome.api.posapp.update_invoice",
+          args: {
+            data: formData,
+          },
+          async: false,
+          callback: function (r) {
+            if (r.message) {
+              vm.invoice_doc = r.message;
+            }
+          },
+        })
+        .then(() => {
+          frappe
+            .call({
+              method: "posawesome.posawesome.api.posapp.create_payment_request",
+              args: {
+                doc: vm.invoice_doc,
+              },
+            })
+            .fail(() => {
+              evntBus.emit("unfreeze");
+              evntBus.emit("show_mesage", {
+                text: __(`Payment request failed`),
+                color: "error",
+              });
+            })
+            .then(({ message }) => {
+              const payment_request_name = message.name;
+              setTimeout(() => {
+                frappe.db
+                  .get_value("Payment Request", payment_request_name, [
+                    "status",
+                    "grand_total",
+                  ])
+                  .then(({ message }) => {
+                    if (message.status != "Paid") {
+                      evntBus.emit("unfreeze");
+                      evntBus.emit("show_mesage", {
+                        text: __(
+                          `Payment Request took too long to respond. Please try requesting for payment again`
+                        ),
+                        color: "error",
+                      });
+                    } else {
+                      evntBus.emit("unfreeze");
+                      evntBus.emit("show_mesage", {
+                        text: __("Payment of {0} received successfully.", [
+                          vm.formtCurrency(
+                            message.grand_total,
+                            vm.invoice_doc.currency,
+                            0
+                          ),
+                        ]),
+                        color: "success",
+                      });
+                      frappe.db
+                        .get_doc("Sales Invoice", vm.invoice_doc.name)
+                        .then((doc) => {
+                          vm.invoice_doc = doc;
+                          vm.submit(null, true);
+                        });
+                    }
+                  });
+              }, 30000);
+            });
+        });
+    },
+    get_mpesa_modes() {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.m_pesa.get_mpesa_mode_of_payment",
+        args: { company: vm.pos_profile.company },
+        async: true,
+        callback: function (r) {
+          if (!r.exc) {
+            vm.mpesa_modes = r.message;
+          } else {
+            vm.mpesa_modes = [];
+          }
+        },
+      });
+    },
+    is_mpesa_c2b_payment(payment) {
+      if (
+        this.mpesa_modes.includes(payment.mode_of_payment) &&
+        payment.type == "Bank"
+      ) {
+        payment.amount = 0;
+        return true;
+      } else {
+        return false;
+      }
+    },
+    mpesa_c2b_dialg(payment) {
+      const data = {
+        company: this.pos_profile.company,
+        mode_of_payment: payment.mode_of_payment,
+        customer: this.invoice_doc.customer,
+      };
+      evntBus.emit("open_mpesa_payments", data);
+    },
+    set_mpesa_payment(payment) {
+      this.pos_profile.use_customer_credit = 1;
+      this.redeem_customer_credit = true;
+      const invoiceAmount =
+        this.invoice_doc.rounded_total || this.invoice_doc.grand_total;
+      let amount =
+        payment.unallocated_amount > invoiceAmount
+          ? invoiceAmount
+          : payment.unallocated_amount;
+      if (amount < 0 || !amount) amount = 0;
+      const advance = {
+        type: "Advance",
+        credit_origin: payment.name,
+        total_credit: flt(payment.unallocated_amount),
+        credit_to_redeem: flt(amount),
+      };
+      this.clear_all_amounts();
+      this.customer_credit_dict.push(advance);
+    },
+  },
+
+  computed: {
+    total_payments() {
+      let total = parseFloat(this.invoice_doc.loyalty_amount);
+      if (this.invoice_doc && this.invoice_doc.payments) {
+        this.invoice_doc.payments.forEach((payment) => {
+          total += this.flt(payment.amount);
+        });
+      }
+
+      total += this.flt(this.redeemed_customer_credit);
+
+      if (!this.is_cashback) total = 0;
+
+      return this.flt(total, this.currency_precision);
+    },
+    diff_payment() {
+      let diff_payment = this.flt(
+        (this.invoice_doc.rounded_total || this.invoice_doc.grand_total) -
+          this.total_payments,
+        this.currency_precision
+      );
+      this.paid_change = -diff_payment;
+      return diff_payment;
+    },
+    credit_change() {
+      let change = -this.diff_payment;
+      if (this.paid_change > change) return 0;
+      return this.flt(this.paid_change - change, this.currency_precision);
+    },
+    diff_lable() {
+      let lable = this.diff_payment < 0 ? "Change" : "To Be Paid";
+      return lable;
+    },
+    available_pioints_amount() {
+      let amount = 0;
+      if (this.customer_info.loyalty_points) {
+        amount =
+          this.customer_info.loyalty_points *
+          this.customer_info.conversion_factor;
+      }
+      return amount;
+    },
+    available_customer_credit() {
+      let total = 0;
+      this.customer_credit_dict.map((row) => {
+        total += row.total_credit;
+      });
+
+      return total;
+    },
+    redeemed_customer_credit() {
+      let total = 0;
+      this.customer_credit_dict.map((row) => {
+        if (flt(row.credit_to_redeem)) total += flt(row.credit_to_redeem);
+        else row.credit_to_redeem = 0;
+      });
+
+      return total;
+    },
+    vaildatPayment() {
+      if (this.pos_profile.posa_allow_sales_order) {
+        if (
+          this.invoiceType == "Order" &&
+          !this.invoice_doc.posa_delivery_date
+        ) {
+          return true;
+        } else {
+          return false;
+        }
+      } else {
+        return false;
+      }
+    },
+    request_payment_field() {
+      let res = false;
+      if (!this.pos_settings || this.pos_settings.invoice_fields.length == 0) {
+        res = false;
+      } else {
+        this.pos_settings.invoice_fields.forEach((el) => {
+          if (
+            el.fieldtype == "Button" &&
+            el.fieldname == "request_for_payment"
+          ) {
+            res = true;
+          }
+        });
+      }
+      return res;
+    },
+  },
+
+  mounted: function () {
+    this.$nextTick(function () {
+      evntBus.on("send_invoice_doc_payment", (invoice_doc) => {
+        this.invoice_doc = invoice_doc;
+        const default_payment = this.invoice_doc.payments.find(
+          (payment) => payment.default == 1
+        );
+        this.is_credit_sale = 0;
+        this.is_write_off_change = 0;
+        if (default_payment && !invoice_doc.is_return) {
+          default_payment.amount = this.flt(
+            invoice_doc.rounded_total || invoice_doc.grand_total,
+            this.currency_precision
+          );
+        }
+        if (invoice_doc.is_return) {
+          this.is_return = true;
+          invoice_doc.payments.forEach((payment) => {
+            payment.amount = 0;
+            payment.base_amount = 0;
+          });
+        }
+        this.loyalty_amount = 0;
+        this.get_addresses();
+        this.get_sales_person_names();
+      });
+      evntBus.on("register_pos_profile", (data) => {
+        this.pos_profile = data.pos_profile;
+        this.get_mpesa_modes();
+      });
+      evntBus.on("add_the_new_address", (data) => {
+        this.addresses.push(data);
+        this.$forceUpdate();
+      });
+      evntBus.on("update_invoice_type", (data) => {
+        this.invoiceType = data;
+        if (this.invoice_doc && data != "Order") {
+          this.invoice_doc.posa_delivery_date = null;
+          this.invoice_doc.posa_notes = null;
+          this.invoice_doc.shipping_address_name = null;
+        }
+      });
+    });
+    evntBus.on("update_customer", (customer) => {
+      if (this.customer != customer) {
+        this.customer_credit_dict = [];
+        this.redeem_customer_credit = false;
+        this.is_cashback = true;
+      }
+    });
+    evntBus.on("set_pos_settings", (data) => {
+      this.pos_settings = data;
+    });
+    evntBus.on("set_customer_info_to_edit", (data) => {
+      this.customer_info = data;
+    });
+    evntBus.on("set_mpesa_payment", (data) => {
+      this.set_mpesa_payment(data);
+    });
+  },
+  created() {
+    document.addEventListener("keydown", this.shortPay.bind(this));
+  },
+  beforeDestroy() {
+    evntBus.$off("send_invoice_doc_payment");
+    evntBus.$off("register_pos_profile");
+    evntBus.$off("add_the_new_address");
+    evntBus.$off("update_invoice_type");
+    evntBus.$off("update_customer");
+    evntBus.$off("set_pos_settings");
+    evntBus.$off("set_customer_info_to_edit");
+    evntBus.$off("update_invoice_coupons");
+    evntBus.$off("set_mpesa_payment");
+  },
+
+  destroyed() {
+    document.removeEventListener("keydown", this.shortPay);
+  },
+
+  watch: {
+    loyalty_amount(value) {
+      if (value > this.available_pioints_amount) {
+        this.invoice_doc.loyalty_amount = 0;
+        this.invoice_doc.redeem_loyalty_points = 0;
+        this.invoice_doc.loyalty_points = 0;
+        evntBus.emit("show_mesage", {
+          text: `Loyalty Amount can not be more then ${this.available_pioints_amount}`,
+          color: "error",
+        });
+      } else {
+        this.invoice_doc.loyalty_amount = this.flt(this.loyalty_amount);
+        this.invoice_doc.redeem_loyalty_points = 1;
+        this.invoice_doc.loyalty_points =
+          this.flt(this.loyalty_amount) / this.customer_info.conversion_factor;
+      }
+    },
+    is_credit_sale(value) {
+      console.log(this.invoice_doc);
+      if (value == 1) {
+        this.invoice_doc.payments.forEach((payment) => {
+          payment.amount = 0;
+          payment.base_amount = 0;
+        });
+      }
+    },
+    is_write_off_change(value) {
+      if (value == 1) {
+        this.invoice_doc.write_off_amount = this.diff_payment;
+        this.invoice_doc.write_off_outstanding_amount_automatically = 1;
+      } else {
+        this.invoice_doc.write_off_amount = 0;
+        this.invoice_doc.write_off_outstanding_amount_automatically = 0;
+      }
+    },
+    redeemed_customer_credit(value) {
+      if (value > this.available_customer_credit) {
+        evntBus.emit("show_mesage", {
+          text: `You can redeem customer credit upto ${this.available_customer_credit}`,
+          color: "error",
+        });
+      }
+    },
+    sales_person() {
+      if (this.sales_person) {
+        this.invoice_doc.sales_team = [
+          {
+            sales_person: this.sales_person,
+            allocated_percentage: 100,
+          },
+        ];
+      } else {
+        this.invoice_doc.sales_team = [];
+      }
+    },
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/Pos.vue b/posawesome/public/js/posapp/components/pos/Pos.vue
new file mode 100644
index 0000000..1899935
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Pos.vue
@@ -0,0 +1,235 @@
+<template>
+  <div fluid class="mt-2">
+    <ClosingDialog></ClosingDialog>
+    <Drafts></Drafts>
+    <SalesOrders></SalesOrders>
+    <Returns></Returns>
+    <NewAddress></NewAddress>
+    <MpesaPayments></MpesaPayments>
+    <Variants></Variants>
+    <OpeningDialog v-if="dialog" :dialog="dialog"></OpeningDialog>
+    <v-row v-show="!dialog">
+      <v-col
+        v-show="!payment && !offers && !coupons"
+        xl="5"
+        lg="5"
+        md="5"
+        sm="5"
+        cols="12"
+        class="pos pr-0"
+      >
+        <ItemsSelector></ItemsSelector>
+      </v-col>
+      <v-col
+        v-show="offers"
+        xl="5"
+        lg="5"
+        md="5"
+        sm="5"
+        cols="12"
+        class="pos pr-0"
+      >
+        <PosOffers></PosOffers>
+      </v-col>
+      <v-col
+        v-show="coupons"
+        xl="5"
+        lg="5"
+        md="5"
+        sm="5"
+        cols="12"
+        class="pos pr-0"
+      >
+        <PosCoupons></PosCoupons>
+      </v-col>
+      <v-col
+        v-show="payment"
+        xl="5"
+        lg="5"
+        md="5"
+        sm="5"
+        cols="12"
+        class="pos pr-0"
+      >
+        <Payments></Payments>
+      </v-col>
+
+      <v-col xl="7" lg="7" md="7" sm="7" cols="12" class="pos">
+        <Invoice></Invoice>
+      </v-col>
+    </v-row>
+  </div>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+import ItemsSelector from './ItemsSelector.vue';
+import Invoice from './Invoice.vue';
+import OpeningDialog from './OpeningDialog.vue';
+import Payments from './Payments.vue';
+import PosOffers from './PosOffers.vue';
+import PosCoupons from './PosCoupons.vue';
+import Drafts from './Drafts.vue';
+import SalesOrders from "./SalesOrders.vue";
+import ClosingDialog from './ClosingDialog.vue';
+import NewAddress from './NewAddress.vue';
+import Variants from './Variants.vue';
+import Returns from './Returns.vue';
+import MpesaPayments from './Mpesa-Payments.vue';
+
+export default {
+  data: function () {
+    return {
+      dialog: false,
+      pos_profile: '',
+      pos_opening_shift: '',
+      payment: false,
+      offers: false,
+      coupons: false,
+    };
+  },
+
+  components: {
+    ItemsSelector,
+    Invoice,
+    OpeningDialog,
+    Payments,
+    Drafts,
+    ClosingDialog,
+
+    Returns,
+    PosOffers,
+    PosCoupons,
+    NewAddress,
+    Variants,
+    MpesaPayments,
+    SalesOrders,
+  },
+
+  methods: {
+    check_opening_entry() {
+      return frappe
+        .call('posawesome.posawesome.api.posapp.check_opening_shift', {
+          user: frappe.session.user,
+        })
+        .then((r) => {
+          if (r.message) {
+            this.pos_profile = r.message.pos_profile;
+            this.pos_opening_shift = r.message.pos_opening_shift;
+            this.get_offers(this.pos_profile.name);
+            evntBus.emit('register_pos_profile', r.message);
+            evntBus.emit('set_company', r.message.company);
+            console.info('LoadPosProfile');
+          } else {
+            this.create_opening_voucher();
+          }
+        });
+    },
+    create_opening_voucher() {
+      this.dialog = true;
+    },
+    get_closing_data() {
+      return frappe
+        .call(
+          'posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.make_closing_shift_from_opening',
+          {
+            opening_shift: this.pos_opening_shift,
+          }
+        )
+        .then((r) => {
+          if (r.message) {
+            evntBus.emit('open_ClosingDialog', r.message);
+          } else {
+            // console.log(r);
+          }
+        });
+    },
+    submit_closing_pos(data) {
+      frappe
+        .call(
+          'posawesome.posawesome.doctype.pos_closing_shift.pos_closing_shift.submit_closing_shift',
+          {
+            closing_shift: data,
+          }
+        )
+        .then((r) => {
+          if (r.message) {
+            evntBus.emit('show_mesage', {
+              text: `POS Shift Closed`,
+              color: 'success',
+            });
+            this.check_opening_entry();
+          } else {
+            console.log(r);
+          }
+        });
+    },
+    get_offers(pos_profile) {
+      return frappe
+        .call('posawesome.posawesome.api.posapp.get_offers', {
+          profile: pos_profile,
+        })
+        .then((r) => {
+          if (r.message) {
+            console.info('LoadOffers');
+            evntBus.emit('set_offers', r.message);
+          }
+        });
+    },
+    get_pos_setting() {
+      frappe.db.get_doc('POS Settings', undefined).then((doc) => {
+        evntBus.emit('set_pos_settings', doc);
+      });
+    },
+  },
+
+  mounted: function () {
+    this.$nextTick(function () {
+      this.check_opening_entry();
+      this.get_pos_setting();
+      evntBus.on('close_opening_dialog', () => {
+        this.dialog = false;
+      });
+      evntBus.on('register_pos_data', (data) => {
+        this.pos_profile = data.pos_profile;
+        this.get_offers(this.pos_profile.name);
+        this.pos_opening_shift = data.pos_opening_shift;
+        evntBus.emit('register_pos_profile', data);
+        console.info('LoadPosProfile');
+      });
+      evntBus.on('show_payment', (data) => {
+        this.payment = true ? data === 'true' : false;
+        this.offers = false ? data === 'true' : false;
+        this.coupons = false ? data === 'true' : false;
+      });
+      evntBus.on('show_offers', (data) => {
+        this.offers = true ? data === 'true' : false;
+        this.payment = false ? data === 'true' : false;
+        this.coupons = false ? data === 'true' : false;
+      });
+      evntBus.on('show_coupons', (data) => {
+        this.coupons = true ? data === 'true' : false;
+        this.offers = false ? data === 'true' : false;
+        this.payment = false ? data === 'true' : false;
+      });
+      evntBus.on('open_closing_dialog', () => {
+        this.get_closing_data();
+      });
+      evntBus.on('submit_closing_pos', (data) => {
+        this.submit_closing_pos(data);
+      });
+    });
+  },
+  beforeDestroy() {
+    evntBus.$off('close_opening_dialog');
+    evntBus.$off('register_pos_data');
+    evntBus.$off('LoadPosProfile');
+    evntBus.$off('show_offers');
+    evntBus.$off('show_coupons');
+    evntBus.$off('open_closing_dialog');
+    evntBus.$off('submit_closing_pos');
+  },
+};
+</script>
+
+<style scoped></style>
diff --git a/posawesome/public/js/posapp/components/pos/PosCoupons.vue b/posawesome/public/js/posapp/components/pos/PosCoupons.vue
new file mode 100644
index 0000000..fa512c1
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/PosCoupons.vue
@@ -0,0 +1,247 @@
+<template>
+  <div>
+    <v-card
+      class="selection mx-auto grey lighten-5"
+      style="max-height: 80vh; height: 80vh"
+    >
+      <v-card-title>
+        <v-row no-gutters align="center" justify="center">
+          <v-col cols="6">
+            <span class="text-h6 primary--text">{{ __('Coupons') }}</span>
+          </v-col>
+          <v-col cols="4">
+            <v-text-field
+              dense
+              outlined
+              color="primary"
+              :label="__('Coupon')"
+              background-color="white"
+              hide-details
+              v-model="new_coupon"
+              class="mr-4"
+            ></v-text-field>
+          </v-col>
+          <v-col cols="2">
+            <v-btn
+              class="pa-1"
+              color="success"
+              dark
+              @click="add_coupon(new_coupon)"
+              >{{ __('add') }}</v-btn
+            >
+          </v-col>
+        </v-row>
+      </v-card-title>
+      <div class="my-0 py-0 overflow-y-auto" style="max-height: 75vh">
+        <template @mouseover="style = 'cursor: pointer'">
+          <v-data-table
+            :headers="items_headers"
+            :items="posa_coupons"
+            :single-expand="singleExpand"
+            :expanded.sync="expanded"
+            item-key="coupon"
+            class="elevation-1"
+            :items-per-page="itemsPerPage"
+            hide-default-footer
+          >
+            <template v-slot:item.applied="{ item }">
+              <v-checkbox
+                v-model="item.applied"
+                disabled
+              ></v-checkbox>
+            </template>
+          </v-data-table>
+        </template>
+      </div>
+    </v-card>
+
+    <v-card
+      flat
+      style="max-height: 11vh; height: 11vh"
+      class="cards mb-0 mt-3 py-0"
+    >
+      <v-row align="start" no-gutters>
+        <v-col cols="12">
+          <v-btn
+            block
+            class="pa-1"
+            large
+            color="warning"
+            dark
+            @click="back_to_invoice"
+            >{{ __('Back') }}</v-btn
+          >
+        </v-col>
+      </v-row>
+    </v-card>
+  </div>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+export default {
+  data: () => ({
+    loading: false,
+    pos_profile: '',
+    customer: '',
+    posa_coupons: [],
+    new_coupon: null,
+    itemsPerPage: 1000,
+    singleExpand: true,
+    expanded: [],
+    items_headers: [
+      { title: __('Coupon'), key: 'coupon_code', align: 'start' },
+      { title: __('Type'), key: 'type', align: 'start' },
+      { title: __('Offer'), key: 'pos_offer', align: 'start' },
+      { title: __('Applied'), key: 'applied', align: 'start' },
+    ],
+  }),
+
+  computed: {
+    couponsCount() {
+      return this.posa_coupons.length;
+    },
+    appliedCouponsCount() {
+      return this.posa_coupons.filter((el) => !!el.applied).length;
+    },
+  },
+
+  methods: {
+    back_to_invoice() {
+      evntBus.emit('show_coupons', 'false');
+    },
+    add_coupon(new_coupon) {
+      if (!this.customer || !new_coupon) return;
+      const exist = this.posa_coupons.find(
+        (el) => el.coupon_code == new_coupon
+      );
+      if (exist) {
+        evntBus.emit('show_mesage', {
+          text: __('This coupon already used !'),
+          color: 'error',
+        });
+        return;
+      }
+      const vm = this;
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.get_pos_coupon',
+        args: {
+          coupon: new_coupon,
+          customer: vm.customer,
+          company: vm.pos_profile.company,
+        },
+        callback: function (r) {
+          if (r.message) {
+            const res = r.message;
+            if (res.msg != 'Apply' || !res.coupon) {
+              evntBus.emit('show_mesage', {
+                text: res.msg,
+                color: 'error',
+              });
+            } else {
+              vm.new_coupon = null;
+              const coupon = res.coupon;
+              vm.posa_coupons.push({
+                coupon: coupon.name,
+                coupon_code: coupon.coupon_code,
+                type: coupon.coupon_type,
+                applied: 0,
+                pos_offer: coupon.pos_offer,
+                customer: coupon.customer || vm.customer,
+              });
+            }
+          }
+        },
+      });
+    },
+    setActiveGiftCoupons() {
+      if (!this.customer) return;
+      const vm = this;
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.get_active_gift_coupons',
+        args: {
+          customer: vm.customer,
+          company: vm.pos_profile.company,
+        },
+        callback: function (r) {
+          if (r.message) {
+            const coupons = r.message;
+            coupons.forEach((coupon_code) => {
+              vm.add_coupon(coupon_code);
+            });
+          }
+        },
+      });
+    },
+
+    updatePosCoupons(offers) {
+      this.posa_coupons.forEach((coupon) => {
+        const offer = offers.find(
+          (el) => el.offer_applied && el.coupon == coupon.coupon
+        );
+        if (offer) {
+          coupon.applied = 1;
+        } else {
+          coupon.applied = 0;
+        }
+      });
+    },
+
+    removeCoupon(reomove_list) {
+      this.posa_coupons = this.posa_coupons.filter(
+        (coupon) => !reomove_list.includes(coupon.coupon)
+      );
+    },
+    updateInvoice() {
+      evntBus.emit('update_invoice_coupons', this.posa_coupons);
+    },
+    updateCounters() {
+      evntBus.emit('update_coupons_counters', {
+        couponsCount: this.couponsCount,
+        appliedCouponsCount: this.appliedCouponsCount,
+      });
+    },
+  },
+
+  watch: {
+    posa_coupons: {
+      deep: true,
+      handler() {
+        this.updateInvoice();
+        this.updateCounters();
+      },
+    },
+  },
+
+  created: function () {
+    this.$nextTick(function () {
+      evntBus.on('register_pos_profile', (data) => {
+        this.pos_profile = data.pos_profile;
+      });
+    });
+    evntBus.on('update_customer', (customer) => {
+      if (this.customer != customer) {
+        const to_remove = [];
+        this.posa_coupons.forEach((el) => {
+          if (el.type == 'Promotional') {
+            el.customer = customer;
+          } else {
+            to_remove.push(el.coupon);
+          }
+        });
+        this.customer = customer;
+        if (to_remove.length) {
+          this.removeCoupon(to_remove);
+        }
+      }
+      this.setActiveGiftCoupons();
+    });
+    evntBus.on('update_pos_coupons', (data) => {
+      this.updatePosCoupons(data);
+    });
+    evntBus.on('set_pos_coupons', (data) => {
+      this.posa_coupons = data;
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/PosOffers.vue b/posawesome/public/js/posapp/components/pos/PosOffers.vue
new file mode 100644
index 0000000..1ab0c53
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/PosOffers.vue
@@ -0,0 +1,296 @@
+<template>
+  <div>
+    <v-card
+      class="selection mx-auto grey lighten-5"
+      style="max-height: 80vh; height: 80vh"
+    >
+      <v-card-title>
+        <span class="text-h6 primary--text">{{ __('Offers') }}</span>
+      </v-card-title>
+      <div class="my-0 py-0 overflow-y-auto" style="max-height: 75vh">
+        <template @mouseover="style = 'cursor: pointer'">
+          <v-data-table
+            :headers="items_headers"
+            :items="pos_offers"
+            :single-expand="singleExpand"
+            :expanded.sync="expanded"
+            show-expand
+            item-key="row_id"
+            class="elevation-1"
+            :items-per-page="itemsPerPage"
+            hide-default-footer
+          >
+            <template v-slot:item.offer_applied="{ item }">
+              <v-checkbox
+                @click="forceUpdateItem"
+                v-model="item.offer_applied"
+                :disabled="
+                  (item.offer == 'Give Product' &&
+                    !item.give_item &&
+                    (!offer.replace_cheapest_item || !offer.replace_item)) ||
+                  (item.offer == 'Grand Total' &&
+                    discount_percentage_offer_name &&
+                    discount_percentage_offer_name != item.name)
+                "
+              ></v-checkbox>
+            </template>
+            <template v-slot:expanded-item="{ headers, item }">
+              <td :colspan="headers.length">
+                <v-row class="mt-2">
+                  <v-col v-if="item.description">
+                    <div
+                      class="primary--text"
+                      v-html="handleNewLine(item.description)"
+                    ></div>
+                  </v-col>
+                  <v-col v-if="item.offer == 'Give Product'">
+                    <v-autocomplete
+                      v-model="item.give_item"
+                      :items="get_give_items(item)"
+                      item-text="item_code"
+                      outlined
+                      dense
+                      color="primary"
+                      :label="__('Give Item')"
+                      :disabled="
+                        item.apply_type != 'Item Group' ||
+                        item.replace_item ||
+                        item.replace_cheapest_item
+                      "
+                    ></v-autocomplete>
+                  </v-col>
+                </v-row>
+              </td>
+            </template>
+          </v-data-table>
+        </template>
+      </div>
+    </v-card>
+
+    <v-card
+      flat
+      style="max-height: 11vh; height: 11vh"
+      class="cards mb-0 mt-3 py-0"
+    >
+      <v-row align="start" no-gutters>
+        <v-col cols="12">
+          <v-btn
+            block
+            class="pa-1"
+            large
+            color="warning"
+            dark
+            @click="back_to_invoice"
+            >{{ __('Back') }}</v-btn
+          >
+        </v-col>
+      </v-row>
+    </v-card>
+  </div>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+import format from '../../format';
+export default {
+  mixins: [format],
+  data: () => ({
+    loading: false,
+    pos_profile: '',
+    pos_offers: [],
+    allItems: [],
+    discount_percentage_offer_name: null,
+    itemsPerPage: 1000,
+    expanded: [],
+    singleExpand: true,
+    items_headers: [
+      { title: __('Name'), key: 'name', align: 'start' },
+      { title: __('Apply On'), key: 'apply_on', align: 'start' },
+      { title: __('Offer'), key: 'offer', align: 'start' },
+      { title: __('Applied'), key: 'offer_applied', align: 'start' },
+    ],
+  }),
+
+  computed: {
+    offersCount() {
+      return this.pos_offers.length;
+    },
+    appliedOffersCount() {
+      return this.pos_offers.filter((el) => !!el.offer_applied).length;
+    },
+  },
+
+  methods: {
+    back_to_invoice() {
+      evntBus.emit('show_offers', 'false');
+    },
+    forceUpdateItem() {
+      let list_offers = [];
+      list_offers = [...this.pos_offers];
+      this.pos_offers = list_offers;
+    },
+    makeid(length) {
+      let result = '';
+      const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
+      const charactersLength = characters.length;
+      for (var i = 0; i < length; i++) {
+        result += characters.charAt(
+          Math.floor(Math.random() * charactersLength)
+        );
+      }
+      return result;
+    },
+    updatePosOffers(offers) {
+      const toRemove = [];
+      this.pos_offers.forEach((pos_offer) => {
+        const offer = offers.find((offer) => offer.name === pos_offer.name);
+        if (!offer) {
+          toRemove.push(pos_offer.row_id);
+        }
+      });
+      this.removeOffers(toRemove);
+      offers.forEach((offer) => {
+        const pos_offer = this.pos_offers.find(
+          (pos_offer) => offer.name === pos_offer.name
+        );
+        if (pos_offer) {
+          pos_offer.items = offer.items;
+          if (
+            pos_offer.offer === 'Grand Total' &&
+            !this.discount_percentage_offer_name
+          ) {
+            pos_offer.offer_applied = !!pos_offer.auto;
+          }
+          if (
+            offer.apply_on == 'Item Group' &&
+            offer.apply_type == 'Item Group' &&
+            offer.replace_cheapest_item
+          ) {
+            pos_offer.give_item = offer.give_item;
+            pos_offer.apply_item_code = offer.apply_item_code;
+          }
+        } else {
+          const newOffer = { ...offer };
+          if (!offer.row_id) {
+            newOffer.row_id = this.makeid(20);
+          }
+          if (offer.apply_type == 'Item Code') {
+            newOffer.give_item = offer.apply_item_code || 'Nothing';
+          }
+          if (offer.offer_applied) {
+            newOffer.offer_applied == !!offer.offer_applied;
+          } else {
+            if (
+              offer.apply_type == 'Item Group' &&
+              offer.offer == 'Give Product' &&
+              !offer.replace_cheapest_item &&
+              !offer.replace_item
+            ) {
+              newOffer.offer_applied = false;
+            } else if (
+              offer.offer === 'Grand Total' &&
+              this.discount_percentage_offer_name
+            ) {
+              newOffer.offer_applied = false;
+            } else {
+              newOffer.offer_applied = !!offer.auto;
+            }
+          }
+          if (newOffer.offer == 'Give Product' && !newOffer.give_item) {
+            newOffer.give_item = this.get_give_items(newOffer)[0].item_code;
+          }
+          this.pos_offers.push(newOffer);
+          evntBus.emit('show_mesage', {
+            text: __('New Offer Available'),
+            color: 'warning',
+          });
+        }
+      });
+    },
+    removeOffers(offers_id_list) {
+      this.pos_offers = this.pos_offers.filter(
+        (offer) => !offers_id_list.includes(offer.row_id)
+      );
+    },
+    handelOffers() {
+      const applyedOffers = this.pos_offers.filter(
+        (offer) => offer.offer_applied
+      );
+      evntBus.emit('update_invoice_offers', applyedOffers);
+    },
+    handleNewLine(str) {
+      if (str) {
+        return str.replace(/(?:\r\n|\r|\n)/g, '<br />');
+      } else {
+        return '';
+      }
+    },
+    get_give_items(offer) {
+      if (offer.apply_type == 'Item Code') {
+        return [offer.apply_item_code];
+      } else if (offer.apply_type == 'Item Group') {
+        const items = this.allItems;
+        let filterd_items = [];
+        const filterd_items_1 = items.filter(
+          (item) => item.item_group == offer.apply_item_group
+        );
+        if (offer.less_then > 0) {
+          filterd_items = filterd_items_1.filter(
+            (item) => item.rate < offer.less_then
+          );
+        } else {
+          filterd_items = filterd_items_1;
+        }
+        return filterd_items;
+      } else {
+        return [];
+      }
+    },
+    updateCounters() {
+      evntBus.emit('update_offers_counters', {
+        offersCount: this.offersCount,
+        appliedOffersCount: this.appliedOffersCount,
+      });
+    },
+    updatePosCoupuns() {
+      const applyedOffers = this.pos_offers.filter(
+        (offer) => offer.offer_applied && offer.coupon_based
+      );
+      evntBus.emit('update_pos_coupons', applyedOffers);
+    },
+  },
+
+  watch: {
+    pos_offers: {
+      deep: true,
+      handler(pos_offers) {
+        this.handelOffers();
+        this.updateCounters();
+        this.updatePosCoupuns();
+      },
+    },
+  },
+
+  created: function () {
+    this.$nextTick(function () {
+      evntBus.on('register_pos_profile', (data) => {
+        this.pos_profile = data.pos_profile;
+      });
+    });
+    evntBus.on('update_customer', (customer) => {
+      if (this.customer != customer) {
+        this.offers = [];
+      }
+    });
+    evntBus.on('update_pos_offers', (data) => {
+      this.updatePosOffers(data);
+    });
+    evntBus.on('update_discount_percentage_offer_name', (data) => {
+      this.discount_percentage_offer_name = data.value;
+    });
+    evntBus.on('set_all_items', (data) => {
+      this.allItems = data;
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/Returns.vue b/posawesome/public/js/posapp/components/pos/Returns.vue
new file mode 100644
index 0000000..9c9b0e6
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Returns.vue
@@ -0,0 +1,161 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="invoicesDialog" max-width="800px" min-width="800px">
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{ __('Select Return Invoice') }}</span>
+        </v-card-title>
+        <v-container>
+          <v-row class="mb-4">
+            <v-text-field
+              color="primary"
+              :label="__('Invoice ID')"
+              background-color="white"
+              hide-details
+              v-model="invoice_name"
+              dense
+              clearable
+              class="mx-4"
+            ></v-text-field>
+            <v-btn text class="ml-2" color="primary" dark @click="search_invoices">
+              {{ __('Search') }}
+            </v-btn>
+          </v-row>
+          <v-row>
+            <v-col cols="12" class="pa-1" v-if="dialog_data">
+              <v-data-table
+                :headers="headers"
+                :items="dialog_data"
+                item-value="name"
+                class="elevation-1"
+                show-select
+                v-model="selected"
+              >
+                <template v-slot:[`item.grand_total`]="{ item }">
+                  {{ currencySymbol(item.currency) }} {{ formtCurrency(item.grand_total) }}
+                </template>
+              </v-data-table>
+            </v-col>
+          </v-row>
+        </v-container>
+        <v-card-actions class="mt-4">
+          <v-spacer></v-spacer>
+          <v-btn color="error mx-2" dark @click="close_dialog">Close</v-btn>
+          <v-btn color="success" dark @click="submit_dialog">
+            {{ __('Select') }}
+          </v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+import format from '../../format';
+export default {
+  mixins: [format],
+  data: () => ({
+    invoicesDialog: false,
+    singleSelect: true,
+    selected: [],
+    dialog_data: '',
+    company: '',
+    invoice_name: '',
+    headers: [
+      {
+        title: __('Customer'),
+        key: 'customer',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        title: __('Date'),
+        align: 'start',
+        sortable: true,
+        key: 'posting_date',
+      },
+      {
+        title: __('Invoice'),
+        key: 'name',
+        align: 'start',
+        sortable: true,
+      },
+      {
+        title: __('Amount'),
+        key: 'grand_total',
+        align: 'end',
+        sortable: false,
+      },
+    ],
+  }),
+  watch: {},
+  methods: {
+    close_dialog() {
+      this.invoicesDialog = false;
+    },
+    search_invoices_by_enter(e) {
+      if (e.keyCode === 13) {
+        this.search_invoices();
+      }
+    },
+    search_invoices() {
+      const vm = this;
+      frappe.call({
+        method: 'posawesome.posawesome.api.posapp.search_invoices_for_return',
+        args: {
+          invoice_name: vm.invoice_name,
+          company: vm.company,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            vm.dialog_data = r.message;
+          }
+        },
+      });
+    },
+    submit_dialog() {
+      var me = this;
+      if (this.selected.length == 1) {
+         $.each(this.dialog_data || [], function(i,v){
+          if(v.name == me.selected[0]){
+            const return_doc = v;
+            const invoice_doc = {};
+            const items = [];
+            return_doc.items.forEach((item) => {
+              const new_item = { ...item };
+              new_item.qty = item.qty * -1;
+              new_item.stock_qty = item.stock_qty * -1;
+              new_item.amount = item.amount * -1;
+              items.push(new_item);
+            });
+            invoice_doc.items = items;
+            invoice_doc.is_return = 1;
+            invoice_doc.return_against = return_doc.name;
+            invoice_doc.customer = return_doc.customer;
+            const data = { invoice_doc, return_doc };
+            evntBus.emit('load_return_invoice', data);
+            me.invoicesDialog = false;
+          }
+        });
+      }
+      else{
+        evntBus.emit("show_mesage", {
+          text: `Select Only 1 Row`,
+          color: "error",
+        });
+      }
+    },
+  },
+  created: function () {
+    evntBus.on('open_returns', (data) => {
+      this.invoicesDialog = true;
+      this.company = data;
+      this.invoice_name = '';
+      this.dialog_data = '';
+      this.selected = [];
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/SalesOrders.vue b/posawesome/public/js/posapp/components/pos/SalesOrders.vue
new file mode 100644
index 0000000..e63e5d9
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/SalesOrders.vue
@@ -0,0 +1,223 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="draftsDialog" max-width="900px">
+      <!-- <template v-slot:activator="{ on, attrs }">
+              <v-btn color="primary" dark v-bind="attrs" v-on="on">Open Dialog</v-btn>
+            </template>-->
+      <v-card>
+        <v-card-title>
+          <span class="headline primary--text">{{
+            __("Select Sales Orders")
+          }}</span>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container>
+            <v-row class="mb-4">
+              <v-text-field
+                color="primary"
+                :label="__('Order ID')"
+                background-color="white"
+                hide-details
+                v-model="order_name"
+                dense
+                clearable
+                class="mx-4"
+              ></v-text-field>
+              <v-btn
+                text
+                class="ml-2"
+                color="primary"
+                dark
+                @click="search_orders"
+                >{{ __("Search") }}</v-btn
+              >
+            </v-row>
+            <v-row no-gutters>
+              <v-col cols="12" class="pa-1">
+                <template>
+                  <v-data-table
+                    :headers="headers"
+                    :items="dialog_data"
+                    item-key="name"
+                    class="elevation-1"
+                    :single-select="singleSelect"
+                    show-select
+                    v-model="selected"
+                  >
+                    <!-- <template v-slot:item.posting_time="{ item }">
+                          {{ item.posting_time.split(".")[0] }}
+                        </template> -->
+                    <template v-slot:item.grand_total="{ item }">
+                      {{ currencySymbol(item.currency) }}
+                      {{ formtCurrency(item.grand_total) }}
+                    </template>
+                  </v-data-table>
+                </template>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">Close</v-btn>
+          <v-btn
+            v-if="selected.length"
+            color="success"
+            dark
+            @click="submit_dialog"
+            >Select</v-btn
+          >
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from "../../bus";
+import format from "../../format";
+export default {
+  // props: ["draftsDialog"],
+  mixins: [format],
+  data: () => ({
+    draftsDialog: false,
+    singleSelect: true,
+    pos_profile: {},
+    selected: [],
+    dialog_data: {},
+    order_name: "",
+    headers: [
+      {
+        text: __("Customer"),
+        value: "customer_name",
+        align: "start",
+        sortable: true,
+      },
+      {
+        text: __("Date"),
+        align: "start",
+        sortable: true,
+        value: "transaction_date",
+      },
+      //   {
+      //     text: __("Time"),
+      //     align: "start",
+      //     sortable: true,
+      //     value: "posting_time",
+      //   },
+      {
+        text: __("Order"),
+        value: "name",
+        align: "start",
+        sortable: true,
+      },
+      {
+        text: __("Amount"),
+        value: "grand_total",
+        align: "end",
+        sortable: false,
+      },
+    ],
+  }),
+  watch: {},
+  methods: {
+    close_dialog() {
+      this.draftsDialog = false;
+    },
+
+    clearSelected() {
+      this.selected = [];
+    },
+
+    search_orders() {
+      const vm = this;
+      frappe.call({
+        method: "posawesome.posawesome.api.posapp.search_orders",
+        args: {
+          order_name: vm.order_name,
+          company: this.pos_profile.company,
+          currency: this.pos_profile.currency,
+        },
+        async: false,
+        callback: function (r) {
+          if (r.message) {
+            vm.dialog_data = r.message;
+          }
+        },
+      });
+    },
+
+    async submit_dialog() {
+      if (this.selected.length > 0) {
+        var invoice_doc_for_load = {};
+        await frappe.call({
+          method:
+            "posawesome.posawesome.api.posapp.create_sales_invoice_from_order",
+          args: {
+            sales_order: this.selected[0].name,
+          },
+          callback: function (r) {
+            if (r.message) {
+              invoice_doc_for_load = r.message;
+            }
+          },
+        });
+        if (invoice_doc_for_load.items) {
+          const selectedItems = this.selected[0].items;
+          const loadedItems = invoice_doc_for_load.items;
+
+          const loadedItemsMap = {};
+          loadedItems.forEach((item) => {
+            loadedItemsMap[item.item_code] = item;
+          });
+
+          // Iterate through selectedItems and update or discard items
+          for (let i = 0; i < selectedItems.length; i++) {
+            const selectedItem = selectedItems[i];
+            const loadedItem = loadedItemsMap[selectedItem.item_code];
+
+            if (loadedItem) {
+              // Update the fields of selected item with loaded item's values
+              selectedItem.qty = loadedItem.qty;
+              selectedItem.amount = loadedItem.amount;
+              selectedItem.uom = loadedItem.uom;
+              selectedItem.rate = loadedItem.rate;
+              // Update other fields as needed
+            } else {
+              // If 'item_code' doesn't exist in loadedItems, discard the item
+              selectedItems.splice(i, 1);
+              i--; // Adjust the index as items are removed
+            }
+          }
+        }
+        evntBus.emit("load_order", this.selected[0]);
+        this.draftsDialog = false;
+        frappe.call({
+          method: "posawesome.posawesome.api.posapp.delete_sales_invoice",
+          args: {
+            sales_invoice: invoice_doc_for_load.name,
+          },
+          callback: function (r) {
+            if (r.message) {
+              // invoice_doc_for_load = r.message;
+            }
+          },
+        });
+      }
+    },
+  },
+  created: function () {
+    evntBus.on("open_orders", (data) => {
+      this.clearSelected();
+      this.draftsDialog = true;
+      this.dialog_data = data;
+      this.order_name = "";
+    });
+  },
+  mounted() {
+    evntBus.on("register_pos_profile", (data) => {
+      this.pos_profile = data.pos_profile;
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/UpdateCustomer.vue b/posawesome/public/js/posapp/components/pos/UpdateCustomer.vue
new file mode 100644
index 0000000..5b1c781
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/UpdateCustomer.vue
@@ -0,0 +1,378 @@
+<template>
+  <v-row justify="center">
+    <v-dialog
+      v-model="customerDialog"
+      max-width="600px"
+      @click:outside="clear_customer"
+    >
+      <v-card>
+        <v-card-title>
+          <span v-if="customer_id" class="headline primary--text">{{
+            __('Update Customer')
+          }}</span>
+          <span v-else class="headline primary--text">{{
+            __('Create Customer')
+          }}</span>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container>
+            <v-row>
+              <v-col cols="12">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Customer Name') + ' *'"
+                  background-color="white"
+                  hide-details
+                  v-model="customer_name"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Tax ID')"
+                  background-color="white"
+                  hide-details
+                  v-model="tax_id"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Mobile No')"
+                  background-color="white"
+                  hide-details
+                  v-model="mobile_no"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Email Id')"
+                  background-color="white"
+                  hide-details
+                  v-model="email_id"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-select
+                  dense
+                  label="Gender"
+                  :items="genders"
+                  v-model="gender"
+                ></v-select>
+              </v-col>
+              <v-col cols="6">
+                <v-text-field
+                  dense
+                  color="primary"
+                  :label="__('Referral Code')"
+                  background-color="white"
+                  hide-details
+                  v-model="referral_code"
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6">
+                <v-menu
+                  ref="birthday_menu"
+                  v-model="birthday_menu"
+                  :close-on-content-click="false"
+                  transition="scale-transition"
+                  dense
+                >
+                  <template v-slot:activator="{ on, attrs }">
+                    <v-text-field
+                      v-model="birthday"
+                      :label="__('Birthday')"
+                      readonly
+                      dense
+                      clearable
+                      hide-details
+                      v-bind="attrs"
+                      v-on="on"
+                      color="primary"
+                    ></v-text-field>
+                  </template>
+                  <v-date-picker
+                    v-model="birthday"
+                    color="primary"
+                    no-title
+                    scrollable
+                    :max="frappe.datetime.now_date()"
+                    @input="birthday_menu = false"
+                  >
+                  </v-date-picker>
+                </v-menu>
+              </v-col>
+              <v-col cols="6">
+                <v-autocomplete
+                  clearable
+                  dense
+                  auto-select-first
+                  color="primary"
+                  :label="__('Customer Group') + ' *'"
+                  v-model="group"
+                  :items="groups"
+                  background-color="white"
+                  :no-data-text="__('Group not found')"
+                  hide-details
+                  required
+                >
+                </v-autocomplete>
+              </v-col>
+              <v-col cols="6">
+                <v-autocomplete
+                  clearable
+                  dense
+                  auto-select-first
+                  color="primary"
+                  :label="__('Territory') + ' *'"
+                  v-model="territory"
+                  :items="territorys"
+                  background-color="white"
+                  :no-data-text="__('Territory not found')"
+                  hide-details
+                  required
+                >
+                </v-autocomplete>
+              </v-col>
+              <v-col cols="6" v-if="loyalty_program">
+                <v-text-field
+                  v-model="loyalty_program"
+                  :label="__('Loyalty Program')"
+                  dense
+                  readonly
+                  hide-details
+                ></v-text-field>
+              </v-col>
+              <v-col cols="6" v-if="loyalty_points">
+                <v-text-field
+                  v-model="loyalty_points"
+                  :label="__('Loyalty Points')"
+                  dense
+                  readonly
+                  hide-details
+                ></v-text-field>
+              </v-col>
+            </v-row>
+          </v-container>
+        </v-card-text>
+        <v-card-actions>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">{{
+            __('Close')
+          }}</v-btn>
+          <v-btn color="success" dark @click="submit_dialog">{{
+            __('Submit')
+          }}</v-btn>
+        </v-card-actions>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+export default {
+  data: () => ({
+    customerDialog: false,
+    pos_profile: '',
+    customer_id: '',
+    customer_name: '',
+    tax_id: '',
+    mobile_no: '',
+    email_id: '',
+    referral_code: '',
+    birthday: null,
+    birthday_menu: false,
+    group: '',
+    groups: [],
+    territory: '',
+    territorys: [],
+    genders: [],
+    customer_type: 'Individual',
+    gender: '',
+    loyalty_points: null,
+    loyalty_program: null,
+  }),
+  watch: {},
+  methods: {
+    close_dialog() {
+      this.customerDialog = false;
+      this.clear_customer();
+    },
+    clear_customer() {
+      this.customer_name = '';
+      this.tax_id = '';
+      this.mobile_no = '';
+      this.email_id = '';
+      this.referral_code = '';
+      this.birthday = '';
+      this.group = frappe.defaults.get_user_default('Customer Group');
+      this.territory = frappe.defaults.get_user_default('Territory');
+      this.customer_id = '';
+      this.customer_type = 'Individual';
+      this.gender = '';
+      this.loyalty_points = null;
+      this.loyalty_program = null;
+    },
+    getCustomerGroups() {
+      if (this.groups.length > 0) return;
+      const vm = this;
+      frappe.db
+        .get_list('Customer Group', {
+          fields: ['name'],
+          filters: { is_group: 0 },
+          limit: 1000,
+          order_by: 'name',
+        })
+        .then((data) => {
+          if (data.length > 0) {
+            data.forEach((el) => {
+              vm.groups.push(el.name);
+            });
+          }
+        });
+    },
+    getCustomerTerritorys() {
+      if (this.territorys.length > 0) return;
+      const vm = this;
+      frappe.db
+        .get_list('Territory', {
+          fields: ['name'],
+          filters: { is_group: 0 },
+          limit: 5000,
+          order_by: 'name',
+        })
+        .then((data) => {
+          if (data.length > 0) {
+            data.forEach((el) => {
+              vm.territorys.push(el.name);
+            });
+          }
+        });
+    },
+    getGenders() {
+      const vm = this;
+      frappe.db
+        .get_list('Gender', {
+          fields: ['name'],
+          page_length: 10,
+        })
+        .then((data) => {
+          if (data.length > 0) {
+            data.forEach((el) => {
+              vm.genders.push(el.name);
+            });
+          }
+        });
+    },
+    submit_dialog() {
+      // validate if all required fields are filled
+      if (!this.customer_name) {
+        evntBus.emit('show_mesage', {
+          text: __('Customer name is required.'),
+          color: 'error',
+        });
+        return;
+      }
+      if (!this.group) {
+        evntBus.emit('show_mesage', {
+          text: __('Customer group is required.'),
+          color: 'error',
+        });
+        return;
+      }
+      if (!this.territory) {
+        evntBus.emit('show_mesage', {
+          text: __('Customer territory is required.'),
+          color: 'error',
+        });
+        return;
+      }
+      if (this.customer_name) {
+        const vm = this;
+        const args = {
+          customer_id: this.customer_id,
+          customer_name: this.customer_name,
+          company: this.pos_profile.company,
+          tax_id: this.tax_id,
+          mobile_no: this.mobile_no,
+          email_id: this.email_id,
+          referral_code: this.referral_code,
+          birthday: this.birthday,
+          customer_group: this.group,
+          territory: this.territory,
+          customer_type: this.customer_type,
+          gender: this.gender,
+          method: this.customer_id ? 'update' : 'create',
+          pos_profile_doc: this.pos_profile,
+        };
+        frappe.call({
+          method: 'posawesome.posawesome.api.posapp.create_customer',
+          args: args,
+          callback: (r) => {
+            if (!r.exc && r.message.name) {
+              let text = __('Customer created successfully.');
+              if (vm.customer_id) {
+                text = __('Customer updated successfully.');
+              }
+              evntBus.emit('show_mesage', {
+                text: text,
+                color: 'success',
+              });
+              args.name = r.message.name;
+              frappe.utils.play_sound('submit');
+              evntBus.emit('add_customer_to_list', args);
+              evntBus.emit('set_customer', r.message.name);
+              evntBus.emit('fetch_customer_details');
+              this.close_dialog();
+            } else {
+              frappe.utils.play_sound('error');
+              evntBus.emit('show_mesage', {
+                text: __('Customer creation failed.'),
+                color: 'error',
+              });
+            }
+          },
+        });
+        this.customerDialog = false;
+      }
+    },
+  },
+  created: function () {
+    evntBus.on('open_update_customer', (data) => {
+      this.customerDialog = true;
+      if (data) {
+        this.customer_name = data.customer_name;
+        this.customer_id = data.name;
+        this.tax_id = data.tax_id;
+        this.mobile_no = data.mobile_no;
+        this.email_id = data.email_id;
+        this.referral_code = data.referral_code;
+        this.birthday = data.birthday;
+        this.group = data.customer_group;
+        this.territory = data.territory;
+        this.loyalty_points = data.loyalty_points;
+        this.loyalty_program = data.loyalty_program;
+        this.gender = data.gender;
+      }
+    });
+    evntBus.on('register_pos_profile', (data) => {
+      this.pos_profile = data.pos_profile;
+    });
+    evntBus.on('payments_register_pos_profile', (data) => {
+      this.pos_profile = data.pos_profile;
+    });
+    this.getCustomerGroups();
+    this.getCustomerTerritorys();
+    this.getGenders();
+    // set default values for customer group and territory from user defaults
+    this.group = frappe.defaults.get_user_default('Customer Group');
+    this.territory = frappe.defaults.get_user_default('Territory');
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/Variants.vue b/posawesome/public/js/posapp/components/pos/Variants.vue
new file mode 100644
index 0000000..4e739fc
--- /dev/null
+++ b/posawesome/public/js/posapp/components/pos/Variants.vue
@@ -0,0 +1,155 @@
+<template>
+  <v-row justify="center">
+    <v-dialog v-model="varaintsDialog" max-width="600px">
+      <v-card min-height="500px">
+        <v-card-title>
+          <span class="headline primary--text">Select Item</span>
+          <v-spacer></v-spacer>
+          <v-btn color="error" dark @click="close_dialog">Close</v-btn>
+        </v-card-title>
+        <v-card-text class="pa-0">
+          <v-container v-if="parentItem">
+            <div v-for="attr in parentItem.attributes" :key="attr.attribute">
+              <v-chip-group
+                v-model="filters[attr.attribute]"
+                active-class="green--text text--accent-4"
+                column
+              >
+                <v-chip
+                  v-for="value in attr.values"
+                  :key="value.abbr"
+                  :value="value.attribute_value"
+                  outlined
+                  label
+                  @click="updateFiltredItems"
+                >
+                  {{ value.attribute_value }}
+                </v-chip>
+              </v-chip-group>
+              <v-divider class="p-0 m-0"></v-divider>
+            </div>
+            <div>
+              <v-row dense class="overflow-y-auto" style="max-height: 500px">
+                <v-col
+                  v-for="(item, idx) in filterdItems"
+                  :key="idx"
+                  xl="2"
+                  lg="3"
+                  md="4"
+                  sm="4"
+                  cols="6"
+                  min-height="50"
+                >
+                  <v-card hover="hover" @click="add_item(item)">
+                    <v-img
+                      :src="
+                        item.image ||
+                        '/assets/posawesome/js/posapp/components/pos/placeholder-image.png'
+                      "
+                      class="white--text align-end"
+                      gradient="to bottom, rgba(0,0,0,.2), rgba(0,0,0,.7)"
+                      height="100px"
+                    >
+                      <v-card-text
+                        v-text="item.item_name"
+                        class="text-subtitle-2 px-1 pb-2"
+                      ></v-card-text>
+                    </v-img>
+                    <v-card-text class="text--primary pa-1">
+                      <div class="text-caption primary--text accent-3">
+                        {{ item.rate || 0 }} {{ item.currency || '' }}
+                      </div>
+                    </v-card-text>
+                  </v-card>
+                </v-col>
+              </v-row>
+            </div>
+          </v-container>
+        </v-card-text>
+      </v-card>
+    </v-dialog>
+  </v-row>
+</template>
+
+<script>
+import { evntBus } from '../../bus';
+export default {
+  data: () => ({
+    varaintsDialog: false,
+    parentItem: null,
+    items: null,
+    filters: {},
+    filterdItems: [],
+  }),
+
+  computed: {
+    variantsItems() {
+      if (!this.parentItem) {
+        return [];
+      } else {
+        return this.items.filter(
+          (item) => item.variant_of == this.parentItem.item_code
+        );
+      }
+    },
+  },
+
+  methods: {
+    close_dialog() {
+      this.varaintsDialog = false;
+    },
+    formtCurrency(value) {
+      value = parseFloat(value);
+      return value.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
+    },
+    updateFiltredItems() {
+      this.$nextTick(function () {
+        const values = [];
+        Object.entries(this.filters).forEach(([key, value]) => {
+          if (value) {
+            values.push(value);
+          }
+        });
+
+        if (!values.length) {
+          this.filterdItems = this.variantsItems;
+        } else {
+          const itemsList = [];
+          this.filterdItems = [];
+          this.variantsItems.forEach((item) => {
+            let apply = true;
+            item.item_attributes.forEach((attr) => {
+              if (
+                this.filters[attr.attribute] &&
+                this.filters[attr.attribute] != attr.attribute_value
+              ) {
+                apply = false;
+              }
+            });
+            if (apply && !itemsList.includes(item.item_code)) {
+              this.filterdItems.push(item);
+              itemsList.push(item.item_code);
+            }
+          });
+        }
+      });
+    },
+    add_item(item) {
+      evntBus.emit('add_item', item);
+      this.close_dialog();
+    },
+  },
+
+  created: function () {
+    evntBus.on('open_variants_model', (item, items) => {
+      this.varaintsDialog = true;
+      this.parentItem = item || null;
+      this.items = items;
+      this.filters = {};
+      this.$nextTick(function () {
+        this.filterdItems = this.variantsItems;
+      });
+    });
+  },
+};
+</script>
diff --git a/posawesome/public/js/posapp/components/pos/placeholder-image.png b/posawesome/public/js/posapp/components/pos/placeholder-image.png
new file mode 100644
index 0000000..a0fbdad
Binary files /dev/null and b/posawesome/public/js/posapp/components/pos/placeholder-image.png differ
diff --git a/posawesome/public/js/posapp/components/pos/pos.png b/posawesome/public/js/posapp/components/pos/pos.png
new file mode 100644
index 0000000..e8624c6
Binary files /dev/null and b/posawesome/public/js/posapp/components/pos/pos.png differ
diff --git a/posawesome/public/js/posapp/format.js b/posawesome/public/js/posapp/format.js
new file mode 100644
index 0000000..a11c31e
--- /dev/null
+++ b/posawesome/public/js/posapp/format.js
@@ -0,0 +1,98 @@
+export default {
+    data () {
+        return {
+            float_precision: 2,
+            currency_precision: 2
+        };
+    },
+    methods: {
+        flt (value, precision, number_format, rounding_method) {
+            if (!precision && precision != 0) {
+                precision = this.currency_precision || 2;
+            }
+            if (!rounding_method) {
+                rounding_method = "Banker's Rounding (legacy)";
+            }
+            return flt(value, precision, number_format, rounding_method);
+        },
+        formtCurrency (value, precision) {
+            const format = get_number_format(this.pos_profile?.currency);
+            value = format_number(
+                value,
+                format,
+                precision || this.currency_precision || 2
+            );
+            return value;
+        },
+        formtFloat (value, precision) {
+            const format = get_number_format(this.pos_profile.currency);
+            value = format_number(value, format, precision || this.float_precision || 2);
+            return value;
+        },
+        setFormatedCurrency (el, field_name, precision, no_negative = false, $event) {
+            let value = 0;
+            try {
+                // make sure it is a number and positive
+                let _value = parseFloat($event.target.value);
+                if (!isNaN(_value)) {
+                    value = _value;
+                }
+                if (no_negative && value < 0) {
+                    value = value * -1;
+                }
+                value = this.formtCurrency($event.target.value, precision);
+            } catch (e) {
+                console.error(e);
+                value = 0;
+            }
+            // check if el is an object
+            if (typeof el === "object") {
+                el[field_name] = value;
+            }
+            else {
+                this[field_name] = value;
+            }
+
+
+            return value;
+        },
+        setFormatedFloat (el, field_name, precision, no_negative = false, $event) {
+            let value = 0;
+            try {
+                // make sure it is a number and positive
+                value = parseFloat($event.target.value);
+                if (isNaN(value)) {
+                    value = 0;
+                } else if (no_negative && value < 0) {
+                    value = value * -1;
+                }
+                value = this.formtFloat($event.target.value, precision);
+            } catch (e) {
+                console.error(e);
+                value = 0;
+            }
+            // check if el is an object
+            if (typeof el === "object") {
+                el[field_name] = value;
+            }
+            else {
+                this[field_name] = value;
+            }
+            return value;
+        },
+        currencySymbol (currency) {
+            return get_currency_symbol(currency);
+        },
+        isNumber (value) {
+            const pattern = /^-?(\d+|\d{1,3}(\.\d{3})*)(,\d+)?$/;
+            return pattern.test(value) || "invalid number";
+
+        }
+    },
+    mounted () {
+        this.float_precision =
+            frappe.defaults.get_default('float_precision') || 2;
+        this.currency_precision =
+            frappe.defaults.get_default('currency_precision') || 2;
+    }
+};
\ No newline at end of file
diff --git a/posawesome/public/js/posapp/posapp.js b/posawesome/public/js/posapp/posapp.js
new file mode 100644
index 0000000..d9b5061
--- /dev/null
+++ b/posawesome/public/js/posapp/posapp.js
@@ -0,0 +1,234 @@
+import { createApp } from 'vue';
+import Home from './Home.vue';
+import { createVuetify } from 'vuetify';
+import 'vuetify/styles';
+import {
+  // Layout
+  VApp,
+  VAppBar,
+  VAppBarNavIcon,
+  VAppBarTitle,
+  VNavigationDrawer,
+  VFooter,
+  VToolbar,
+  VToolbarTitle,
+
+  // Data display
+  VAlert,
+  VAvatar,
+  VBadge,
+  VBanner,
+  VBottomNavigation,
+  VBottomSheet,
+  VBreadcrumbs,
+  VBreadcrumbsItem,
+  VBtn,
+  VBtnToggle,
+  VCard,
+  VCardActions,
+  VCardSubtitle,
+  VCardText,
+  VCardTitle,
+  VCarousel,
+  VCarouselItem,
+  VCheckbox,
+  VChip,
+  VChipGroup,
+  VColorPicker,
+  VCombobox,
+  VCounter,
+  VDataTable,
+  VDialog,
+  VDivider,
+  VExpansionPanel,
+  VForm,
+  VIcon,
+  VImg,
+  VInput,
+  VItemGroup,
+  VLabel,
+  VList,
+  VListGroup,
+  VListItem,
+  VListItemAction,
+  VListItemSubtitle,
+  VListItemTitle,
+  VMain,
+  VMenu,
+  VMessages,
+  VPagination,
+  VParallax,
+  VProgressCircular,
+  VProgressLinear,
+  VRadio,
+  VRadioGroup,
+  VRating,
+  VResponsive,
+  VRow,
+  VCol,
+  VSelect,
+  VSheet,
+  VSlider,
+  VSnackbar,
+  VSpacer,
+  VSpeedDial,
+  VStepper,
+  VSwitch,
+  VSystemBar,
+  VTabs,
+  VTab,
+  VTextarea,
+  VTextField,
+  VTimeline,
+  VTimelineItem,
+  VTooltip,
+  VWindow,
+
+  // Utilities
+  VDatePicker,
+
+  // Directives
+  VHover,
+  VContainer,
+  VAutocomplete,
+  VConfirmEdit
+
+} from 'vuetify/components';
+import translationPlugin from './translation'
+
+
+frappe.provide('frappe.PosApp');
+
+frappe.PosApp.posapp = class {
+    constructor({ parent }) {
+        this.$parent = $(document);
+        this.page = parent.page;
+        this.make_body();
+    }
+
+    make_body() {
+        this.$el = this.$parent.find('.main-section');
+
+        const vuetify = createVuetify({
+            components: {
+                // Layout
+                  VChipGroup,
+                  VConfirmEdit,
+                  VAutocomplete,
+                  VApp,
+                  VAppBar,
+                  VAppBarNavIcon,
+                  VAppBarTitle,
+                  VNavigationDrawer,
+                  VFooter,
+                  VToolbar,
+                  VToolbarTitle,
+
+                  // Data display
+                  VAlert,
+                  VAvatar,
+                  VBadge,
+                  VBanner,
+                  VBottomNavigation,
+                  VBottomSheet,
+                  VBreadcrumbs,
+                  VBreadcrumbsItem,
+                  VBtn,
+                  VBtnToggle,
+                  VCard,
+                  VCardActions,
+                  VCardSubtitle,
+                  VCardText,
+                  VCardTitle,
+                  VCarousel,
+                  VCarouselItem,
+                  VCheckbox,
+                  VChip,
+                  VColorPicker,
+                  VCombobox,
+                  VCounter,
+                  VDataTable,
+                  VDialog,
+                  VDivider,
+                  VExpansionPanel,
+                  VForm,
+                  VIcon,
+                  VImg,
+                  VInput,
+                  VItemGroup,
+                  VLabel,
+                  VList,
+                  VListGroup,
+                  VListItem,
+                  VListItemAction,
+                  VListItemSubtitle,
+                  VListItemTitle,
+                  VMain,
+                  VMenu,
+                  VMessages,
+                  VPagination,
+                  VParallax,
+                  VProgressCircular,
+                  VProgressLinear,
+                  VRadio,
+                  VRadioGroup,
+                  VRating,
+                  VResponsive,
+                  VRow,
+                  VCol,
+                  VSelect,
+                  VSheet,
+                  VSlider,
+                  VSnackbar,
+                  VSpacer,
+                  VSpeedDial,
+                  VStepper,
+                  VSwitch,
+                  VSystemBar,
+                  VTabs,
+                  VTab,
+                  VTextarea,
+                  VTextField,
+                  VTimeline,
+                  VTimelineItem,
+                  VTooltip,
+                  VWindow,
+
+                  // Utilities
+                  VDatePicker,
+
+                  // Directives
+                  VHover,
+                  VContainer
+            },
+            theme: {
+                themes: {
+                    light: {
+                        background: '#FFFFFF',
+                        primary: '#0097A7',
+                        secondary: '#00BCD4',
+                        accent: '#9575CD',
+                        success: '#66BB6A',
+                        info: '#2196F3',
+                        warning: '#FF9800',
+                        error: '#E86674',
+                        orange: '#E65100',
+                        golden: '#A68C59',
+                        badge: '#F5528C',
+                        customPrimary: '#085294',
+                    },
+                },
+            },
+        });
+
+        const app = createApp(Home);
+
+        app.use(vuetify);
+        SetVueGlobals(app);
+        app.mount(this.$el[0]);
+    }
+
+    setup_header() {
+        // Implement header setup logic here
+    }
+};
diff --git a/posawesome/public/js/posapp/translation.js b/posawesome/public/js/posapp/translation.js
new file mode 100644
index 0000000..455b092
--- /dev/null
+++ b/posawesome/public/js/posapp/translation.js
@@ -0,0 +1,33 @@
+export default function translationPlugin(app) {
+  app.config.globalProperties.__ = translate
+  window.__ = translate
+}
+
+function format(message, replace) {
+  return message.replace(/{(\d+)}/g, function (match, number) {
+    return typeof replace[number] != 'undefined' ? replace[number] : match
+  })
+}
+
+function translate(message, replace, context = null) {
+  let translatedMessages = window.translatedMessages || {}
+  let translatedMessage = ''
+
+  if (context) {
+    let key = `${message}:${context}`
+    if (translatedMessages[key]) {
+      translatedMessage = translatedMessages[key]
+    }
+  }
+
+  if (!translatedMessage) {
+    translatedMessage = translatedMessages[message] || message
+  }
+
+  const hasPlaceholders = /{\d+}/.test(message)
+  if (!hasPlaceholders) {
+    return translatedMessage
+  }
+
+  return format(translatedMessage, replace)
+}
diff --git a/posawesome/public/js/posawesome.bundle.js b/posawesome/public/js/posawesome.bundle.js
new file mode 100644
index 0000000..681ae05
--- /dev/null
+++ b/posawesome/public/js/posawesome.bundle.js
@@ -0,0 +1,2 @@
+import './toConsole';
+import './posapp/posapp';
\ No newline at end of file
diff --git a/posawesome/public/js/toConsole.js b/posawesome/public/js/toConsole.js
new file mode 100644
index 0000000..26a727c
--- /dev/null
+++ b/posawesome/public/js/toConsole.js
@@ -0,0 +1,7 @@
+$(function() {
+	frappe.realtime.on('toconsole', function(data) {
+		data.forEach(element => {
+			console.log(element);
+		});
+	});
+});
\ No newline at end of file
diff --git a/posawesome/templates/__init__.py b/posawesome/templates/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/templates/pages/__init__.py b/posawesome/templates/pages/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/templates/pages/__pycache__/__init__.py b/posawesome/templates/pages/__pycache__/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/posawesome/translations/pt.csv b/posawesome/translations/pt.csv
new file mode 100755
index 0000000..4c9df35
--- /dev/null
+++ b/posawesome/translations/pt.csv
@@ -0,0 +1,149 @@
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html,Account,Contabilidade
+DocType: POS Closing Shift Taxes,Account Head,Chefe de Conta
+DocType: POS Offer,Accounts Manager,Gestor de Contas
+DocType: POS Offer,Accounts User,Usuário de Contas
+Custom Field - label: Sales Invoice-posa_additional_notes_section,Additional Notes,Notas adicionais
+DocType: POS Closing Shift,Administrator,Administrador
+Custom Field - label: POS Profile-posa_allow_sales_order,Allow Create Sales Order,Permitir Criar Ordem de Vendas
+Custom Field - label: POS Profile-posa_allow_credit_sale,Allow Credit Sale,Permitir Credito de Venda
+Custom Field - label: POS Profile-posa_allow_partial_payment,Allow Partial Payment,Permitir Pagamento Parcial
+Custom Field - label: POS Profile-posa_allow_return,Allow Return,Permitir Devolução
+Custom Field - label: POS Profile-posa_allow_submissions_in_background_job,Allow Submissions in background job,Permitir Submissões em trabalho de segundo plano
+Custom Field - label: POS Profile-posa_allow_user_to_edit_item_discount,Allow User to Edit Item Discount,Permitir Usuário Editar Desconto de Item
+Custom Field - label: POS Profile-posa_allow_user_to_edit_additional_discount,Allow user to edit Additional Discount,Permitir Usuário Editar Desconto Adicional
+Custom Field - label: POS Profile-posa_allow_user_to_edit_rate,Allow user to edit Rate,Permitir Usuário Editar Preço
+DocType: POS Closing Shift,Amended From,Corrigido Apartir
+DocType: POS Closing Shift Taxes,Amount,Valor
+Custom Field - label: POS Profile-posa_apply_customer_discount,Apply Customer Discount,Aplicar Desconto de Cliente
+DocType: POS Offer,Apply For,Aplicar Para
+DocType: POS Offer Detail,Apply On,Aplicar Em
+DocType: POS Offer,Apply Rule On Brand,Aplicar Regra na Marca
+DocType: POS Offer,Apply Rule On Item Code,Aplicar Regra no Codigo do Item
+DocType: POS Offer,Apply Rule On Item Group,Aplicar Regra no Grupo do Item
+DocType: POS Offer,Apply Type,Aplicar Tipo
+DocType: POS Offer,Auto Apply,Auto Aplicar
+Custom Field - label: POS Profile-posa_allow_delete,Auto Delete Draft Invoice,Auto Apagar Factura Rascunho
+Custom Field - label: POS Profile-posa_auto_set_batch,Auto Set Batch,Auto Definir Lote
+DocType: POS Offer,Brand,Marca
+DocType: POS Opening Shift,Cancelled,Cancelado
+Custom Field - label: POS Profile-posa_cash_mode_of_payment,Cash Mode of Payment,Modo de Pagamento em Dinheiro
+DocType: POS Closing Shift,Cashier,Caixa
+DocType: POS Opening Shift,Closed,Fechado
+DocType: POS Closing Shift Detail,Closing Amount,Valor de Fecho
+DocType: POS Closing Shift,Company,Empresa
+DocType: Sales Invoice Reference,Customer,Cliente
+DocType: Sales Invoice Reference,Date,Data
+DocType: POS Offer,Default Loyalty Program,Programa de Lealdade Padrão
+Custom Field - label: Sales Invoice-posa_delivery_date,Delivery Date,Data de Entrega
+DocType: POS Offer,Description,Descrição
+DocType: POS Closing Shift,Details,Detalhes
+DocType: POS Closing Shift Detail,Difference,Diferença
+DocType: POS Offer,Disable,Desactivado
+Custom Field - label: Customer-posa_discount,Discount %,% Desconto
+DocType: POS Offer,Discount Amount,Valor de Desconto
+DocType: POS Offer,Discount Percentage,Percentagem de Desconto
+DocType: POS Offer,Discount Type,Tipo de Desconto
+DocType: POS Opening Shift,Draft,Rascunho
+DocType: POS Closing Shift Detail,Expected Amount,Valor Esperado
+Custom Field - description: POS Profile-posa_cash_mode_of_payment,For POS Closing Shift Payment Reconciliation,Para Reconciliação de Pagamento de Fecho de Turno POS
+DocType: POS Offer Detail,Give Item,Item a Entregar
+DocType: POS Offer Detail,Give Item Row ID,Linha do ID do Item a Entregar
+DocType: POS Offer,Give Product,Producto a Entregar
+DocType: POS Offer,Given Quantity,Quantidade Entregue
+DocType: POS Closing Shift,Grand Total,Total Geral
+Custom Field - label: POS Profile-posa_hide_closing_shift,Hide Close Shift,Esconder o Fecho de turno
+Custom Field - label: POS Profile-posa_display_items_in_stock,Hide Unavailable Items,Esconder Itens não Disponiveis
+Custom Field - label: POS Profile-posa_hide_variants_items,Hide Variants Items,Esconder Variantes de Itens
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py,Invalid Period,Periodo Invalido
+Custom Field - label: Sales Invoice Item-posa_is_offer,Is Offer,É uma Oferta
+Custom Field - label: Sales Invoice Item-posa_is_replace,Is Offer Replace For item Row ID,É uma Substituição de Oferta para o Linha do ID do Item
+Custom Field - description: POS Profile-posa_scale_barcode_start,It is best not to use more than four numbers,É aconselhavel não usar mais que quatro numeros
+DocType: POS Offer,Item Code,Codigo do Item
+DocType: POS Offer,Item Group,Grupo do Item
+DocType: POS Offer,Item Price,Preço do Item
+DocType: POS Offer,Item Rate Should Less Then,Preço do Item Deve Ser Menor Que
+DocType: POS Offer Detail,Items,Itens
+DocType: POS Closing Shift,Linked Invoices,Facturas Ligadas
+DocType: POS Offer,Loyalty Point,Ponto de Lealdade
+DocType: POS Offer,Loyalty Point Scheme,Esquema de Pontos de Lealdade
+DocType: POS Offer,Loyalty Points,Pontos de Lealdade
+DocType: POS Offer,Max Amount,Valor Maximo
+Custom Field - label: POS Profile-posa_max_discount_allowed,Max Discount Percentage Allowed ,Percentagem de Desconto Maximo Permitido
+DocType: POS Offer,Max Quantity,Quantidade Maxima
+DocType: POS Offer,Min Amount,Valor Minimo
+DocType: POS Offer,Min Quantity,Quantidade Minima
+DocType: POS Closing Shift Detail,Mode of Payment,Modo de Pagamento
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html,Mode of Payments,Modo de Pagamentos
+DocType: POS Closing Shift,Modes of Payment,Modos de Pagamento
+DocType: POS Closing Shift,Net Total,Total Liquido
+DocType: POS Offer Detail,Offer,Oferta
+DocType: POS Offer Detail,Offer Applied,Oferta Aplicada
+DocType: POS Offer Detail,Offer Name,Nome da Oferta
+DocType: POS Opening Shift,Open,Aberto
+DocType: POS Closing Shift Detail,Opening Amount,Valor de Abertura
+DocType: POS Opening Shift,Opening Balance Details,Detalhes de Balanço de Abertura
+,POS Awesome,POS Awesome
+Custom Field - label: POS Profile-posa_pos_awesome_advance_settings,POS Awesome Advance Settings,Configurações Avançadas do POS Awesome
+Custom Field - label: POS Profile-posa_pos_awesome_settings,POS Awesome Settings,Configurações POS Awesome
+DocType: POS Closing Shift,POS Closing Shift,POS Fecho de Turno
+DocType: POS Closing Shift Detail,POS Closing Shift Detail,POS Detalhes de Fecho de Turno
+DocType: POS Closing Shift Taxes,POS Closing Shift Taxes,POS Impostos de Fecho de Turno
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py,POS Closing Shift {} against {} between selected period,POS Fecho de Turno {} contra {} entre os periodos selecionados
+DocType: POS Offer,POS Offer,POS Oferta
+DocType: POS Offer Detail,POS Offer Detail,POS Detalhe de Oferta
+Custom Field - label: Sales Invoice Item-posa_offers,POS Offers,POS Ofertas
+Custom Field - label: Sales Invoice-posa_offers,POS Offers Detail,POS Detalhes de Ofertas
+DocType: POS Closing Shift,POS Opening Shift,POS Abertura de Turno
+DocType: POS Opening Shift Detail,POS Opening Shift Detail,POS Detalhes de Abertura de Turno
+DocType: POS Closing Shift,POS Profile,POS Perfil
+apps/posawesome/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.py,POS Profile {} does not belongs to company {},POS Perfil {} não pertence a empresa {}
+Custom Field - label: Sales Invoice-posa_pos_opening_shift,POS Shift,POS Turno
+DocType: POS Closing Shift,POS Transactions,POS Transções
+DocType: POS Closing Shift,POSAwesome,POSAwesome
+DocType: POS Closing Shift,Payment Reconciliation,Reconciliação de Pagamento
+DocType: POS Closing Shift,Period End Date,Data de Fim de Periodo
+DocType: POS Closing Shift,Period Start Date,Data de Inicio de Periodo
+DocType: POS Closing Shift,Posting Date,Data de Postagem
+Custom Field - label: Batch-posa_batch_price,Price,Preço
+DocType: POS Offer,Price Discount Scheme ,Esquema de Desconto de Preço
+Custom Field - label: Sales Invoice-posa_is_printed,Printed,Imprimido
+DocType: POS Offer,Product Discount Scheme,Esquema de Desconto de Produto
+DocType: POS Offer,Promo Type,Tipo de Promo
+DocType: POS Offer,Qualifying Transaction / Item,Qualificando Transação / Item
+DocType: POS Offer,Quantity and Amount Conditions,Condições de Quantidade e Valor
+DocType: POS Closing Shift Taxes,Rate,Preço
+DocType: POS Offer,Replace Cheapest Item,Substituir Item mais Barato
+DocType: POS Offer,Replace Same Item,Substituir pelo Mesmo Item
+DocType: POS Offer Detail,Row ID,ID da Linha
+DocType: Sales Invoice Reference,Sales Invoice,Factura de Venda
+DocType: Sales Invoice Reference,Sales Invoice Reference,Referencia da Factura de Venda
+DocType: POS Closing Shift,Sales Manager,Gestor de Vendas
+DocType: POS Offer,Sales Master Manager,Gerente Mestre de Vendas
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/closing_shift_details.html,Sales Summary,Resumo de Vendas
+DocType: POS Offer,Sales User,Usuário de Vendas
+Custom Field - label: POS Profile-posa_scale_barcode_start,Scale Barcode Start With,Codigo de Barras de Peso começa com 
+Custom Field - label: POS Profile-posa_search_serial_no,Search by Serial Number,Procurar por Numero de Serie
+apps/posawesome/posawesome/posawesome/doctype/pos_closing_shift/pos_closing_shift.py,Selected POS Opening Shift should be open.,Abertura de Turno do POS selecionado deve estar aberto.
+Custom Field - description: POS Profile-posa_allow_submissions_in_background_job,Send invoice to submit after printing,Enviar Factura para Submeter depois de Imprimir
+DocType: POS Opening Shift,Set Posting Date,Definir Data de Postagem
+Custom Field - label: POS Profile-posa_show_template_items,Show Template Items,Mostrar Modelo de Itens
+DocType: POS Opening Shift,Status,Status
+apps/posawesome/posawesome/posawesome/api/status_updater.py,Status must be one of {0},O Status deve ser um dos {0}
+DocType: POS Closing Shift,System Manager,Gestor de Sistema
+DocType: POS Closing Shift,Taxes,Impostos
+apps/posawesome/posawesome/posawesome/api/posapp.py,This invoice {0} cannot be deleted,Esta factura {0} não pode ser apagada
+apps/posawesome/posawesome/posawesome/api/posapp.py,Invoice {0} Deleted,Factura {0} Apagada
+DocType: POS Offer,Title,Titulo
+DocType: POS Closing Shift,Total Quantity,Quantidade Total
+DocType: POS Offer,Transaction,Transação
+Custom Field - label: Item Barcode-posa_uom,UOM,UDM
+Custom Field - label: POS Profile-posa_local_storage,Use Browser Local Storage,Use o armazenamento local do navegador
+Custom Field - label: POS Profile-use_cashback,Use Cashback,Use Cashback
+Custom Field - label: POS Profile-use_customer_credit,Use Customer Credit,Usar Credito de Cliente
+apps/posawesome/posawesome/posawesome/doctype/pos_opening_shift/pos_opening_shift.py,User {} has been disabled. Please select valid user/cashier,Usuário {} foi desactivado. Por favor selecione um usuário/caixa valido
+DocType: POS Offer,Valid From,Valido Apartir
+DocType: POS Offer,Valid Upto,Valido Até
+DocType: POS Offer,Warehouse,Armazém
+apps/posawesome/posawesome/posawesome/page/posapp/posapp.js,is Offer,é Oferta
+apps/posawesome/posawesome/posawesome/page/posapp/posapp.js,Type,Tipo
+apps/posawesome/posawesome/posawesome/page/posapp/posapp.js,Total Qty,Qtd Total
\ No newline at end of file
diff --git a/posawesome/uninstall.py b/posawesome/uninstall.py
new file mode 100644
index 0000000..6bbc096
--- /dev/null
+++ b/posawesome/uninstall.py
@@ -0,0 +1,24 @@
+import frappe
+
+
+def after_uninstall():
+    clear_custom_fields_and_properties()
+
+
+def clear_custom_fields_and_properties():
+    fixtures = frappe.get_hooks("fixtures", app_name="posawesome")
+    for fixture in fixtures:
+        if fixture.get("doctype") == "Custom Field":
+            filters = fixture.get("filters")
+            if filters:
+                for filter in filters:
+                    frappe.db.delete("Custom Field", filter)
+                    print("Deleted Custom Fields: ", filter)
+        if fixture.get("doctype") == "Property Setter":
+            filters = fixture.get("filters")
+            if filters:
+                for filter in filters:
+                    frappe.db.delete("Property Setter", filter)
+                    print("Deleted Property Setter: ", filter)
+
+    frappe.db.commit()
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..58c18d8
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,2 @@
+# frappe   # https://github.com/frappe/frappe is installed during bench-init
+# erpnext   # https://github.com/frappe/erpnext it should be installed manually
diff --git a/setup.py b/setup.py
new file mode 100644
index 0000000..601dbfb
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+from setuptools import setup, find_packages
+
+with open("requirements.txt") as f:
+    install_requires = f.read().strip().split("\n")
+
+# get version from __version__ variable in posawesome/__init__.py
+from posawesome import __version__ as version
+
+setup(
+    name="posawesome",
+    version=version,
+    description="POS Awesome",
+    author="Yousef Restom",
+    author_email="youssef@totrox.com",
+    packages=find_packages(),
+    zip_safe=False,
+    include_package_data=True,
+    install_requires=install_requires,
+)
diff --git a/wiki_images/CONFIG AND FILTERS.PNG b/wiki_images/CONFIG AND FILTERS.PNG
new file mode 100644
index 0000000..c9f55d1
Binary files /dev/null and b/wiki_images/CONFIG AND FILTERS.PNG differ
diff --git a/wiki_images/CONFIGIRATION.PNG b/wiki_images/CONFIGIRATION.PNG
new file mode 100644
index 0000000..18908fb
Binary files /dev/null and b/wiki_images/CONFIGIRATION.PNG differ
diff --git a/wiki_images/Customer icon.PNG b/wiki_images/Customer icon.PNG
new file mode 100644
index 0000000..e9e2921
Binary files /dev/null and b/wiki_images/Customer icon.PNG differ
diff --git a/wiki_images/PAYMENT METHODS.PNG b/wiki_images/PAYMENT METHODS.PNG
new file mode 100644
index 0000000..ae44382
Binary files /dev/null and b/wiki_images/PAYMENT METHODS.PNG differ
diff --git a/wiki_images/PROMOS.PNG b/wiki_images/PROMOS.PNG
new file mode 100644
index 0000000..2291ed3
Binary files /dev/null and b/wiki_images/PROMOS.PNG differ
diff --git a/wiki_images/QUANTITYCONDITIONS.PNG b/wiki_images/QUANTITYCONDITIONS.PNG
new file mode 100644
index 0000000..6037a18
Binary files /dev/null and b/wiki_images/QUANTITYCONDITIONS.PNG differ
diff --git a/wiki_images/auto set.PNG b/wiki_images/auto set.PNG
new file mode 100644
index 0000000..ea27dac
Binary files /dev/null and b/wiki_images/auto set.PNG differ
diff --git a/wiki_images/batch price.PNG b/wiki_images/batch price.PNG
new file mode 100644
index 0000000..df4537d
Binary files /dev/null and b/wiki_images/batch price.PNG differ
diff --git a/wiki_images/batch pricing show.PNG b/wiki_images/batch pricing show.PNG
new file mode 100644
index 0000000..125bfb8
Binary files /dev/null and b/wiki_images/batch pricing show.PNG differ
diff --git a/wiki_images/batch.PNG b/wiki_images/batch.PNG
new file mode 100644
index 0000000..916e09d
Binary files /dev/null and b/wiki_images/batch.PNG differ
diff --git a/wiki_images/cake.PNG b/wiki_images/cake.PNG
new file mode 100644
index 0000000..c66f5ec
Binary files /dev/null and b/wiki_images/cake.PNG differ
diff --git a/wiki_images/cakes 2.PNG b/wiki_images/cakes 2.PNG
new file mode 100644
index 0000000..2bd3f75
Binary files /dev/null and b/wiki_images/cakes 2.PNG differ
diff --git a/wiki_images/changeview.PNG b/wiki_images/changeview.PNG
new file mode 100644
index 0000000..b437bc6
Binary files /dev/null and b/wiki_images/changeview.PNG differ
diff --git a/wiki_images/closing popup.PNG b/wiki_images/closing popup.PNG
new file mode 100644
index 0000000..a9295f9
Binary files /dev/null and b/wiki_images/closing popup.PNG differ
diff --git a/wiki_images/credit sale.PNG b/wiki_images/credit sale.PNG
new file mode 100644
index 0000000..c8019ed
Binary files /dev/null and b/wiki_images/credit sale.PNG differ
diff --git a/wiki_images/cust4loyalty.PNG b/wiki_images/cust4loyalty.PNG
new file mode 100644
index 0000000..3d2f93c
Binary files /dev/null and b/wiki_images/cust4loyalty.PNG differ
diff --git a/wiki_images/customer credit.PNG b/wiki_images/customer credit.PNG
new file mode 100644
index 0000000..a12aff6
Binary files /dev/null and b/wiki_images/customer credit.PNG differ
diff --git a/wiki_images/customer search.PNG b/wiki_images/customer search.PNG
new file mode 100644
index 0000000..31d2a6e
Binary files /dev/null and b/wiki_images/customer search.PNG differ
diff --git a/wiki_images/delivery 2.PNG b/wiki_images/delivery 2.PNG
new file mode 100644
index 0000000..de45cae
Binary files /dev/null and b/wiki_images/delivery 2.PNG differ
diff --git a/wiki_images/delivery date.PNG b/wiki_images/delivery date.PNG
new file mode 100644
index 0000000..4610b2b
Binary files /dev/null and b/wiki_images/delivery date.PNG differ
diff --git a/wiki_images/endofshift.PNG b/wiki_images/endofshift.PNG
new file mode 100644
index 0000000..e9d32fb
Binary files /dev/null and b/wiki_images/endofshift.PNG differ
diff --git a/wiki_images/hiddenshift.PNG b/wiki_images/hiddenshift.PNG
new file mode 100644
index 0000000..ff30d7f
Binary files /dev/null and b/wiki_images/hiddenshift.PNG differ
diff --git a/wiki_images/hide shift.PNG b/wiki_images/hide shift.PNG
new file mode 100644
index 0000000..b2eee34
Binary files /dev/null and b/wiki_images/hide shift.PNG differ
diff --git a/wiki_images/inside pos offers.PNG b/wiki_images/inside pos offers.PNG
new file mode 100644
index 0000000..426ae20
Binary files /dev/null and b/wiki_images/inside pos offers.PNG differ
diff --git a/wiki_images/item details.PNG b/wiki_images/item details.PNG
new file mode 100644
index 0000000..cbd78b2
Binary files /dev/null and b/wiki_images/item details.PNG differ
diff --git a/wiki_images/label.PNG b/wiki_images/label.PNG
new file mode 100644
index 0000000..cb246a8
Binary files /dev/null and b/wiki_images/label.PNG differ
diff --git a/wiki_images/listview.PNG b/wiki_images/listview.PNG
new file mode 100644
index 0000000..b78f955
Binary files /dev/null and b/wiki_images/listview.PNG differ
diff --git a/wiki_images/loyalty view.PNG b/wiki_images/loyalty view.PNG
new file mode 100644
index 0000000..500bac1
Binary files /dev/null and b/wiki_images/loyalty view.PNG differ
diff --git a/wiki_images/new advanced awesome settings.PNG b/wiki_images/new advanced awesome settings.PNG
new file mode 100644
index 0000000..1662176
Binary files /dev/null and b/wiki_images/new advanced awesome settings.PNG differ
diff --git a/wiki_images/opening.png b/wiki_images/opening.png
new file mode 100644
index 0000000..76ea295
Binary files /dev/null and b/wiki_images/opening.png differ
diff --git a/wiki_images/options2.png b/wiki_images/options2.png
new file mode 100644
index 0000000..be4f523
Binary files /dev/null and b/wiki_images/options2.png differ
diff --git a/wiki_images/payment cart.PNG b/wiki_images/payment cart.PNG
new file mode 100644
index 0000000..d280031
Binary files /dev/null and b/wiki_images/payment cart.PNG differ
diff --git a/wiki_images/payment.PNG b/wiki_images/payment.PNG
new file mode 100644
index 0000000..ae028b5
Binary files /dev/null and b/wiki_images/payment.PNG differ
diff --git a/wiki_images/popup.PNG b/wiki_images/popup.PNG
new file mode 100644
index 0000000..6c5cafd
Binary files /dev/null and b/wiki_images/popup.PNG differ
diff --git a/wiki_images/pos 1.PNG b/wiki_images/pos 1.PNG
new file mode 100644
index 0000000..6e2dc0f
Binary files /dev/null and b/wiki_images/pos 1.PNG differ
diff --git a/wiki_images/pos closing 3.PNG b/wiki_images/pos closing 3.PNG
new file mode 100644
index 0000000..40f748a
Binary files /dev/null and b/wiki_images/pos closing 3.PNG differ
diff --git a/wiki_images/posclosing1.PNG b/wiki_images/posclosing1.PNG
new file mode 100644
index 0000000..0c70be8
Binary files /dev/null and b/wiki_images/posclosing1.PNG differ
diff --git a/wiki_images/posclosing2.PNG b/wiki_images/posclosing2.PNG
new file mode 100644
index 0000000..7e68015
Binary files /dev/null and b/wiki_images/posclosing2.PNG differ
diff --git a/wiki_images/profile1.PNG b/wiki_images/profile1.PNG
new file mode 100644
index 0000000..33ffb8a
Binary files /dev/null and b/wiki_images/profile1.PNG differ
diff --git a/wiki_images/profile2.PNG b/wiki_images/profile2.PNG
new file mode 100644
index 0000000..a2a0e94
Binary files /dev/null and b/wiki_images/profile2.PNG differ
diff --git a/wiki_images/promo type.png b/wiki_images/promo type.png
new file mode 100644
index 0000000..67653ad
Binary files /dev/null and b/wiki_images/promo type.png differ
diff --git a/wiki_images/qualifying section.PNG b/wiki_images/qualifying section.PNG
new file mode 100644
index 0000000..005872d
Binary files /dev/null and b/wiki_images/qualifying section.PNG differ
diff --git a/wiki_images/qualigying options.png b/wiki_images/qualigying options.png
new file mode 100644
index 0000000..90ea581
Binary files /dev/null and b/wiki_images/qualigying options.png differ
diff --git a/wiki_images/readme.md b/wiki_images/readme.md
new file mode 100644
index 0000000..2a1a7c0
--- /dev/null
+++ b/wiki_images/readme.md
@@ -0,0 +1 @@
+This Folder contains images for the Wiki
diff --git a/wiki_images/redeem.PNG b/wiki_images/redeem.PNG
new file mode 100644
index 0000000..041a4dd
Binary files /dev/null and b/wiki_images/redeem.PNG differ
diff --git a/wiki_images/replace.PNG b/wiki_images/replace.PNG
new file mode 100644
index 0000000..baed162
Binary files /dev/null and b/wiki_images/replace.PNG differ
diff --git a/wiki_images/return button.PNG b/wiki_images/return button.PNG
new file mode 100644
index 0000000..e2d4fa7
Binary files /dev/null and b/wiki_images/return button.PNG differ
diff --git a/wiki_images/return cart.PNG b/wiki_images/return cart.PNG
new file mode 100644
index 0000000..ab24553
Binary files /dev/null and b/wiki_images/return cart.PNG differ
diff --git a/wiki_images/return search.PNG b/wiki_images/return search.PNG
new file mode 100644
index 0000000..ff38d83
Binary files /dev/null and b/wiki_images/return search.PNG differ
diff --git a/wiki_images/rewatrd.PNG b/wiki_images/rewatrd.PNG
new file mode 100644
index 0000000..8a9bfc8
Binary files /dev/null and b/wiki_images/rewatrd.PNG differ
diff --git a/wiki_images/sales order.PNG b/wiki_images/sales order.PNG
new file mode 100644
index 0000000..409a25c
Binary files /dev/null and b/wiki_images/sales order.PNG differ
diff --git a/wiki_images/scale.PNG b/wiki_images/scale.PNG
new file mode 100644
index 0000000..3c6dcaf
Binary files /dev/null and b/wiki_images/scale.PNG differ
diff --git a/wiki_images/search.PNG b/wiki_images/search.PNG
new file mode 100644
index 0000000..9377e86
Binary files /dev/null and b/wiki_images/search.PNG differ
diff --git a/wiki_images/serial numbers.PNG b/wiki_images/serial numbers.PNG
new file mode 100644
index 0000000..cb3de7d
Binary files /dev/null and b/wiki_images/serial numbers.PNG differ
diff --git a/wiki_images/shiftdiff.PNG b/wiki_images/shiftdiff.PNG
new file mode 100644
index 0000000..32cf821
Binary files /dev/null and b/wiki_images/shiftdiff.PNG differ
diff --git a/wiki_images/starting.PNG b/wiki_images/starting.PNG
new file mode 100644
index 0000000..03c103f
Binary files /dev/null and b/wiki_images/starting.PNG differ
diff --git a/wiki_images/users.PNG b/wiki_images/users.PNG
new file mode 100644
index 0000000..7bcb659
Binary files /dev/null and b/wiki_images/users.PNG differ
diff --git a/yarn-error.log b/yarn-error.log
new file mode 100644
index 0000000..b873931
--- /dev/null
+++ b/yarn-error.log
@@ -0,0 +1,113 @@
+Arguments: 
+  /home/muhammad/.nvm/versions/node/v21.7.3/bin/node /usr/local/bin/yarn install
+
+PATH: 
+  /home/nomi/Work/erpnext/.venv/bin:/home/muhammad/.nvm/versions/node/v21.7.3/bin:/home/muhammad/.local/bin:/usr/share/rvm/gems/ruby-3.2.2/bin:/usr/share/rvm/gems/ruby-3.2.2@global/bin:/usr/share/rvm/rubies/ruby-3.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/usr/share/rvm/bin
+
+Yarn version: 
+  1.22.19
+
+Node version: 
+  21.7.3
+
+Platform: 
+  linux x64
+
+Trace: 
+  SyntaxError: /home/muhammad/Work/erpnext/version-15/apps/posawesome/package.json: Expected double-quoted property name in JSON at position 138 (line 7 column 3)
+      at JSON.parse (<anonymous>)
+      at /usr/local/lib/node_modules/yarn/lib/cli.js:1629:59
+      at Generator.next (<anonymous>)
+      at step (/usr/local/lib/node_modules/yarn/lib/cli.js:310:30)
+      at /usr/local/lib/node_modules/yarn/lib/cli.js:321:13
+
+npm manifest: 
+  {
+    "dependencies": {
+      "lodash": "^4.17.21",
+      "vuetify": "^2.6.10",
+      "vue": "2.6.14",
+      "@vue/component-compiler": "^4.2.4",
+    }
+  }
+
+yarn manifest: 
+  No manifest
+
+Lockfile: 
+  # THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+  # yarn lockfile v1
+  
+  
+  "@babel/parser@^7.23.5":
+    version "7.24.7"
+    resolved "https://registry.yarnpkg.com/@babel/parser/-/parser-7.24.7.tgz#9a5226f92f0c5c8ead550b750f5608e766c8ce85"
+    integrity sha512-9uUYRm6OqQrCqQdG1iCBwBPZgN8ciDBro2nIOFaiRz1/BCxaI7CNvQbDHvsArAC7Tw9Hda/B3U+6ui9u4HWXPw==
+  
+  "@vue/compiler-sfc@2.7.16":
+    version "2.7.16"
+    resolved "https://registry.yarnpkg.com/@vue/compiler-sfc/-/compiler-sfc-2.7.16.tgz#ff81711a0fac9c68683d8bb00b63f857de77dc83"
+    integrity sha512-KWhJ9k5nXuNtygPU7+t1rX6baZeqOYLEforUPjgNDBnLicfHCoi48H87Q8XyLZOrNNsmhuwKqtpDQWjEFe6Ekg==
+    dependencies:
+      "@babel/parser" "^7.23.5"
+      postcss "^8.4.14"
+      source-map "^0.6.1"
+    optionalDependencies:
+      prettier "^1.18.2 || ^2.0.0"
+  
+  csstype@^3.1.0:
+    version "3.1.3"
+    resolved "https://registry.yarnpkg.com/csstype/-/csstype-3.1.3.tgz#d80ff294d114fb0e6ac500fbf85b60137d7eff81"
+    integrity sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==
+  
+  lodash@^4.17.21:
+    version "4.17.21"
+    resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
+    integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+  
+  nanoid@^3.3.7:
+    version "3.3.7"
+    resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.7.tgz#d0c301a691bc8d54efa0a2226ccf3fe2fd656bd8"
+    integrity sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==
+  
+  picocolors@^1.0.0:
+    version "1.0.1"
+    resolved "https://registry.yarnpkg.com/picocolors/-/picocolors-1.0.1.tgz#a8ad579b571952f0e5d25892de5445bcfe25aaa1"
+    integrity sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==
+  
+  postcss@^8.4.14:
+    version "8.4.38"
+    resolved "https://registry.yarnpkg.com/postcss/-/postcss-8.4.38.tgz#b387d533baf2054288e337066d81c6bee9db9e0e"
+    integrity sha512-Wglpdk03BSfXkHoQa3b/oulrotAkwrlLDRSOb9D0bN86FdRyE9lppSp33aHNPgBa0JKCoB+drFLZkQoRRYae5A==
+    dependencies:
+      nanoid "^3.3.7"
+      picocolors "^1.0.0"
+      source-map-js "^1.2.0"
+  
+  "prettier@^1.18.2 || ^2.0.0":
+    version "2.8.8"
+    resolved "https://registry.yarnpkg.com/prettier/-/prettier-2.8.8.tgz#e8c5d7e98a4305ffe3de2e1fc4aca1a71c28b1da"
+    integrity sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==
+  
+  source-map-js@^1.2.0:
+    version "1.2.0"
+    resolved "https://registry.yarnpkg.com/source-map-js/-/source-map-js-1.2.0.tgz#16b809c162517b5b8c3e7dcd315a2a5c2612b2af"
+    integrity sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==
+  
+  source-map@^0.6.1:
+    version "0.6.1"
+    resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.6.1.tgz#74722af32e9614e9c287a8d0bbde48b5e2f1a263"
+    integrity sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==
+  
+  vue@^2.6.10:
+    version "2.7.16"
+    resolved "https://registry.yarnpkg.com/vue/-/vue-2.7.16.tgz#98c60de9def99c0e3da8dae59b304ead43b967c9"
+    integrity sha512-4gCtFXaAA3zYZdTp5s4Hl2sozuySsgz4jy1EnpBHNfpMa9dK1ZCG7viqBPCwXtmgc8nHqUsAu3G4gtmXkkY3Sw==
+    dependencies:
+      "@vue/compiler-sfc" "2.7.16"
+      csstype "^3.1.0"
+  
+  vuetify@^2.6.10:
+    version "2.6.10"
+    resolved "https://registry.yarnpkg.com/vuetify/-/vuetify-2.6.10.tgz#b86cd7a97bf8cd3828a72c349795b5b3c539ebc2"
+    integrity sha512-fgUeRDDCwYkwu6WGEEKGe7IdfzOsXJCZGrqkn1pcS2ycuoDL8mR2/dejH5iFNnBY6MnsT365PAGn0J+9otjfQg==
diff --git a/yarn.lock b/yarn.lock
new file mode 100644
index 0000000..319dc3f
--- /dev/null
+++ b/yarn.lock
@@ -0,0 +1,18 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+lodash@^4.17.21:
+  version "4.17.21"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
+  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+
+mitt@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/mitt/-/mitt-3.0.1.tgz#ea36cf0cc30403601ae074c8f77b7092cdab36d1"
+  integrity sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==
+
+vuetify@^3.6.9:
+  version "3.6.9"
+  resolved "https://registry.yarnpkg.com/vuetify/-/vuetify-3.6.9.tgz#6c063fa6e8097e854406467db25e8d8a40e26e71"
+  integrity sha512-LVIZL0OCwzg3Aw2F8nT1rK/renpTPOcDEPe5E002Vj+VjXwsCNqwwxNteGfrcNlp0vgIJ8WusMvaxp69UJ3NJg==
